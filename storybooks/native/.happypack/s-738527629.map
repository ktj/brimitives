{"version":3,"sources":["node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"],"names":["ErrorUtils","require","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","JSTimers","MessageQueue","callFunctionReturnFlushedQueue","callFunctionReturnResultAndFlushedQueue","invokeCallbackAndReturnFlushedQueue","flushedQueue","_lazyCallableModules","_queue","_successCallbacks","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","getTime","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","module","method","args","__guard","__callFunction","result","cbID","__invokeCallback","__callImmediates","queue","length","name","factory","getValue","moduleID","methodID","params","onFail","onSucc","push","global","nativeTraceBeginAsyncFlow","JSON","stringify","now","nativeFlushQueueImmediate","_inCall","counterEvent","__spy","__spyNativeCall","failCbId","successCbId","nativeCallSyncHook","returnValue","isSync","methods","fn","error","reportFatalError","beginEvent","callImmediates","endEvent","__spyJSCall","moduleMethods","getCallableModule","apply","callID","isSuccess","callback","debug","errorMessage","profileName","methodArgs","type","spy","moduleName","methodName","isFinite","spyOrToggle","prototype","console","log","info","exports"],"mappings":"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","file":"MessageQueue.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MessageQueue\n * @flow\n * @format\n */\n\n/*eslint no-bitwise: 0*/\n\n'use strict';\n\nconst ErrorUtils = require('ErrorUtils');\nconst Systrace = require('Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  isSync: boolean,\n  successCbId: number,\n  failCbId: number,\n  args: Array<any>,\n  returnValue?: any,\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 64;\n\n// Work around an initialization order issue\nlet JSTimers = null;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object};\n  _queue: [Array<number>, Array<number>, Array<any>, number];\n  _successCallbacks: Array<?Function>;\n  _failureCallbacks: Array<?Function>;\n  _callID: number;\n  _inCall: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n\n  _debugInfo: Object;\n  _remoteModuleTable: Object;\n  _remoteMethodTable: Object;\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = [];\n    this._failureCallbacks = [];\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = new Date().getTime();\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n  }\n\n  /**\n   * Public APIs\n   */\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue = (\n    module: string,\n    method: string,\n    args: Array<any>,\n  ) => {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  };\n\n  callFunctionReturnResultAndFlushedQueue = (\n    module: string,\n    method: string,\n    args: Array<any>,\n  ) => {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  };\n\n  invokeCallbackAndReturnFlushedQueue = (cbID: number, args: Array<any>) => {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  };\n\n  flushedQueue = () => {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  };\n\n  getEventLoopRunningTime() {\n    return new Date().getTime() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string) {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: Array<any>,\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      onFail && params.push(this._callID << 1);\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks[this._callID] = onSucc;\n      this._failureCallbacks[this._callID] = onFail;\n    }\n\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Any params sent over the bridge should be encodable as JSON\n      JSON.stringify(params);\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = new Date().getTime();\n    if (\n      global.nativeFlushQueueImmediate &&\n      (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS ||\n        this._inCall === 0)\n    ) {\n      var queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n\n    if (this.__spy) {\n      this.__spyNativeCall(moduleID, methodID, params, {\n        failCbId: onFail ? params[params.length - 2] : -1,\n        successCbId: onSucc ? params[params.length - 1] : -1,\n      });\n    }\n  }\n\n  callSyncHook(moduleID: number, methodID: number, args: Array<any>) {\n    if (__DEV__) {\n      invariant(\n        global.nativeCallSyncHook,\n        'Calling synchronous methods on native ' +\n          'modules is not supported in Chrome.\\n\\n Consider providing alternative ' +\n          'methods to expose this method in debug mode, e.g. by exposing constants ' +\n          'ahead-of-time.',\n      );\n    }\n    const returnValue = global.nativeCallSyncHook(moduleID, methodID, args);\n    if (this.__spy) {\n      this.__spyNativeCall(moduleID, methodID, args, {\n        isSync: true,\n        returnValue,\n      });\n    }\n    return returnValue;\n  }\n\n  createDebugLookup(moduleID: number, name: string, methods: Array<string>) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods;\n    }\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    this._inCall++;\n    try {\n      fn();\n    } catch (error) {\n      ErrorUtils.reportFatalError(error);\n    } finally {\n      this._inCall--;\n    }\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (!JSTimers) {\n      JSTimers = require('JSTimers');\n    }\n    JSTimers.callImmediates();\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n    Systrace.beginEvent(`${module}.${method}()`);\n    if (this.__spy) {\n      this.__spyJSCall(module, method, args);\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    const callID = cbID >>> 1;\n    const isSuccess = cbID & 1;\n    const callback = isSuccess\n      ? this._successCallbacks[callID]\n      : this._failureCallbacks[callID];\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      if (!callback) {\n        let errorMessage = `Callback with id ${cbID}: ${module}.${method}() not found`;\n        if (method) {\n          errorMessage =\n            `The callback ${method}() exists in module ${module}, ` +\n            'but only one callback may be registered to a function in a native module.';\n        }\n        invariant(callback, errorMessage);\n      }\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID + '';\n      if (this.__spy) {\n        this.__spyJSCall(null, profileName, args, {\n          failCbId: isSuccess ? -1 : cbID,\n          successCbId: isSuccess ? cbID : -1,\n        });\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks[callID] = this._failureCallbacks[callID] = null;\n    callback.apply(null, args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n\n  __spyJSCall(\n    module: ?string,\n    method: string,\n    methodArgs: Array<any>,\n    params: any,\n  ) {\n    if (!this.__spy) {\n      return;\n    }\n    this.__spy({\n      type: TO_JS,\n      isSync: false,\n      module,\n      method,\n      failCbId: -1,\n      successCbId: -1,\n      args: methodArgs,\n      ...params,\n    });\n  }\n\n  __spyNativeCall(\n    moduleID: number,\n    methodID: number,\n    methodArgs: Array<any>,\n    params: any,\n  ) {\n    const spy = this.__spy;\n    if (!spy) {\n      return;\n    }\n\n    let moduleName = moduleID + '';\n    let methodName = methodID;\n    if (__DEV__ && isFinite(moduleID)) {\n      moduleName = this._remoteModuleTable[moduleID];\n      methodName = this._remoteMethodTable[moduleID][methodID];\n    }\n\n    spy({\n      type: TO_NATIVE,\n      isSync: false,\n      module: moduleName,\n      method: methodName,\n      failCbId: -1,\n      successCbId: -1,\n      args: methodArgs,\n      ...params,\n    });\n  }\n}\n\nmodule.exports = MessageQueue;\n"]}