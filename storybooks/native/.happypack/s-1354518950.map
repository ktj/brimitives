{"version":3,"sources":["node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js"],"names":["RCTImagePicker","require","ImagePickerIOS","canRecordVideos","callback","canUseCamera","openCameraDialog","config","successCallback","cancelCallback","videoMode","openSelectDialog","showImages","showVideos","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAIA,gBAAiBC,QAAQ,eAAR,EAAyBC,cAA9C;;AAEA,GAAIA,gBAAiB;AACnBC,gBAAiB,yBAASC,QAAT,CAA6B;AAC5C,MAAOJ,gBAAeG,eAAf,CAA+BC,QAA/B,CAAP;AACD,CAHkB;AAInBC,aAAc,sBAASD,QAAT,CAA6B;AACzC,MAAOJ,gBAAeK,YAAf,CAA4BD,QAA5B,CAAP;AACD,CANkB;AAOnBE,iBAAkB,0BAASC,MAAT,CAAyBC,eAAzB,CAAoDC,cAApD,CAA8E;AAC9FF;AACEG,UAAW,KADb;AAEKH,MAFL;;AAIA,MAAOP,gBAAeM,gBAAf,CAAgCC,MAAhC,CAAwCC,eAAxC,CAAyDC,cAAzD,CAAP;AACD,CAbkB;AAcnBE,iBAAkB,0BAASJ,MAAT,CAAyBC,eAAzB,CAAoDC,cAApD,CAA8E;AAC9FF;AACEK,WAAY,IADd;AAEEC,WAAY,KAFd;AAGKN,MAHL;;AAKA,MAAOP,gBAAeW,gBAAf,CAAgCJ,MAAhC,CAAwCC,eAAxC,CAAyDC,cAAzD,CAAP;AACD,CArBkB,CAArB;;;AAwBAK,OAAOC,OAAP,CAAiBb,cAAjB,C,0GA1BIF,c,qKAEAE,c","file":"ImagePickerIOS.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ImagePickerIOS\n * @flow\n */\n'use strict';\n\nvar RCTImagePicker = require('NativeModules').ImagePickerIOS;\n\nvar ImagePickerIOS = {\n  canRecordVideos: function(callback: Function) {\n    return RCTImagePicker.canRecordVideos(callback);\n  },\n  canUseCamera: function(callback: Function) {\n    return RCTImagePicker.canUseCamera(callback);\n  },\n  openCameraDialog: function(config: Object, successCallback: Function, cancelCallback: Function) {\n    config = {\n      videoMode: false,\n      ...config,\n    };\n    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);\n  },\n  openSelectDialog: function(config: Object, successCallback: Function, cancelCallback: Function) {\n    config = {\n      showImages: true,\n      showVideos: false,\n      ...config,\n    };\n    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);\n  },\n};\n\nmodule.exports = ImagePickerIOS;\n"]}