{"version":3,"sources":["node_modules/react-native/Libraries/Image/ImageBackground.js"],"names":["Image","require","React","StyleSheet","View","ensureComponentIsNative","ImageBackground","_viewRef","_captureRef","props","viewRef","setNativeProps","ref","children","style","imageStyle","imageRef","absoluteFill","width","height","Component","module","exports"],"mappings":";;;;;;;;;;;;AAYA,a;;AAEA,GAAMA,OAAQC,QAAQ,OAAR,CAAd;AACA,GAAMC,OAAQD,QAAQ,OAAR,CAAd;AACA,GAAME,YAAaF,QAAQ,YAAR,CAAnB;AACA,GAAMG,MAAOH,QAAQ,MAAR,CAAb;;AAEA,GAAMI,yBAA0BJ,QAAQ,yBAAR,CAAhC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BMK,e;;;;;;;;;;AAUJC,Q,CAAoC,I;;AAEpCC,W,yOAXeC,K,CAAe,CAE5B,GAAMC,SAAU,KAAKH,QAArB,CACA,GAAIG,OAAJ,CAAa,CACXL,wBAAwBK,OAAxB,EACAA,QAAQC,cAAR,CAAuBF,KAAvB,EACD,CACF,C,+PAIaG,G,CAAO;AACnB,KAAKL,QAAL,CAAgBK,GAAhB;AACD,C;;AAEQ;AACmD,KAAKH,KADxD,CACAI,QADA,QACAA,QADA,CACUC,KADV,QACUA,KADV,CACiBC,UADjB,QACiBA,UADjB,CAC6BC,QAD7B,QAC6BA,QAD7B,CAC0CP,KAD1C;;AAGP;AACE,oBAAC,IAAD,EAAM,MAAOK,KAAb,CAAoB,IAAK,KAAKN,WAA9B;AACE,oBAAC,KAAD;AACMC,KADN;AAEE,MAAO;AACLN,WAAWc,YADN;AAEL;;;;;;;;AAQEC,MAAOJ,MAAMI,KARf;AASEC,OAAQL,MAAMK,MAThB,CAFK;;AAaLJ,UAbK,CAFT;;AAiBE,IAAKC,QAjBP,kDADF;;AAoBGH,QApBH,CADF;;;AAwBD,C,6BA3C2BX,MAAMkB,S;;;AA8CpCC,OAAOC,OAAP,CAAiBhB,eAAjB,C,2GA9CMA,e","file":"ImageBackground.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ImageBackground\n * @flow\n * @format\n */\n'use strict';\n\nconst Image = require('Image');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nconst ensureComponentIsNative = require('ensureComponentIsNative');\n\nimport type {NativeMethodsMixinType} from 'ReactNativeTypes';\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://facebook.github.io/react/img/logo_og.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      ensureComponentIsNative(viewRef);\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?NativeMethodsMixinType = null;\n\n  _captureRef = ref => {\n    this._viewRef = ref;\n  };\n\n  render() {\n    const {children, style, imageStyle, imageRef, ...props} = this.props;\n\n    return (\n      <View style={style} ref={this._captureRef}>\n        <Image\n          {...props}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: style.width,\n              height: style.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n"]}