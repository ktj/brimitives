{"version":3,"sources":["node_modules/react-native/Libraries/ReactNative/AppContainer.js"],"names":["EmitterSubscription","require","PropTypes","RCTDeviceEventEmitter","React","ReactNative","StyleSheet","View","AppContainer","state","inspector","mainKey","_subscription","rootTag","props","__DEV__","global","__RCTProfileIsProfiling","addListener","Inspector","findNodeHandle","_mainRef","setState","s","updateInspectedViewTag","remove","yellowBox","YellowBox","innerView","styles","appContainer","ref","children","Wrapper","WrapperComponent","Component","childContextTypes","number","create","flex","module","exports"],"mappings":";;;;;;;;;;;;;AAaA,a;;AAEA,GAAMA,qBAAsBC,QAAQ,qBAAR,CAA5B;AACA,GAAMC,WAAYD,QAAQ,YAAR,CAAlB;AACA,GAAME,uBAAwBF,QAAQ,uBAAR,CAA9B;AACA,GAAMG,OAAQH,QAAQ,OAAR,CAAd;AACA,GAAMI,aAAcJ,QAAQ,aAAR,CAApB;AACA,GAAMK,YAAaL,QAAQ,YAAR,CAAnB;AACA,GAAMM,MAAON,QAAQ,MAAR,CAAb,C;;;;;;;;;;;;;;;AAeMO,Y;;AAEJC,K,CAAe;AACbC,UAAW,IADE;AAEbC,QAAS,CAFI,C;;;AAKfC,a,CAAsC,I;;;;;;AAMX;AACzB,MAAO;AACLC,QAAS,KAAKC,KAAL,CAAWD,OADf,CAAP;;AAGD,C;;AAEyB;AACxB,GAAIE,OAAJ,CAAa;AACX,GAAI,CAACC,OAAOC,uBAAZ,CAAqC;AACnC,KAAKL,aAAL,CAAqBT,sBAAsBe,WAAtB;AACnB,wBADmB;AAEnB,UAAM;AACJ,GAAMC,WAAYlB,QAAQ,WAAR,CAAlB;AACA,GAAMS,WAAY,OAAKD,KAAL,CAAWC,SAAX;AACd,IADc;AAEd,oBAAC,SAAD;AACE,iBAAkBL,YAAYe,cAAZ,CAA2B,OAAKC,QAAhC,CADpB;AAEE,qBAAsB,qDAA0B;AAC9C,OAAKC,QAAL;AACE,kBAAM,CAACX,QAASY,EAAEZ,OAAF,CAAY,CAAtB,CAAN,EADF;AAEE;AACEa;AACEnB,YAAYe,cAAZ,CAA2B,OAAKC,QAAhC,CADF,CADF,GAFF;;;AAOD,CAVH,iDAFJ;;AAcA,OAAKC,QAAL,CAAc,CAACZ,mBAAD,CAAd;AACD,CAnBkB,CAArB;;AAqBD;AACF;AACF,C;;AAE4B;AAC3B,GAAI,KAAKE,aAAT,CAAwB;AACtB,KAAKA,aAAL,CAAmBa,MAAnB;AACD;AACF,C;;AAE0B;AACzB,GAAIC,WAAY,IAAhB;AACA,GAAIX,OAAJ,CAAa;AACX,GAAI,CAACC,OAAOC,uBAAZ,CAAqC;AACnC,GAAMU,WAAY1B,QAAQ,WAAR,CAAlB;AACAyB,UAAY,oBAAC,SAAD,kDAAZ;AACD;AACF;;AAED,GAAIE;AACF,oBAAC,IAAD;AACE,YAAa,CAAC,KAAKnB,KAAL,CAAWC,SAD3B;AAEE,IAAK,KAAKD,KAAL,CAAWE,OAFlB;AAGE,cAAc,UAHhB;AAIE,MAAOkB,OAAOC,YAJhB;AAKE,IAAK,mBAAO;AACV,OAAKT,QAAL,CAAgBU,KAAhB;AACD,CAPH;AAQG,KAAKjB,KAAL,CAAWkB,QARd,CADF;;;;AAaA,GAAMC,SAAU,KAAKnB,KAAL,CAAWoB,gBAA3B;AACA,GAAID,OAAJ,CAAa;AACXL;AACE,oBAAC,OAAD;AACGA,SADH,CADF;;;AAKD;AACD;AACE,oBAAC,IAAD,EAAM,MAAOC,OAAOC,YAApB,CAAkC,cAAc,UAAhD;AACGF,SADH;AAEGF,SAFH;AAGG,KAAKjB,KAAL,CAAWC,SAHd,CADF;;;AAOD,C,0BA1FwBN,MAAM+B,S,SASxBC,iB,CAAoB,CACzBvB,QAASX,UAAUmC,MADM,C;;;AAoF7B,GAAMR,QAASvB,WAAWgC,MAAX,CAAkB;AAC/BR,aAAc;AACZS,KAAM,CADM,CADiB,CAAlB,CAAf;;;;AAMAC,OAAOC,OAAP,CAAiBjC,YAAjB,C,2GAnGMA,Y,kKA6FAqB,M","file":"AppContainer.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AppContainer\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EmitterSubscription = require('EmitterSubscription');\nconst PropTypes = require('prop-types');\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\ntype Context = {\n  rootTag: number,\n};\ntype Props = {|\n  children?: React.Children,\n  rootTag: number,\n  WrapperComponent?: ?ReactClass<*>,\n|};\ntype State = {\n  inspector: ?React.Element<*>,\n  mainKey: number,\n};\n\nclass AppContainer extends React.Component {\n  props: Props;\n  state: State = {\n    inspector: null,\n    mainKey: 1,\n  };\n  _mainRef: ?React.Element<*>;\n  _subscription: ?EmitterSubscription = null;\n\n  static childContextTypes = {\n    rootTag: PropTypes.number,\n  };\n\n  getChildContext(): Context {\n    return {\n      rootTag: this.props.rootTag,\n    };\n  }\n\n  componentDidMount(): void {\n    if (__DEV__) {\n      if (!global.__RCTProfileIsProfiling) {\n        this._subscription = RCTDeviceEventEmitter.addListener(\n          'toggleElementInspector',\n          () => {\n            const Inspector = require('Inspector');\n            const inspector = this.state.inspector\n              ? null\n              : <Inspector\n                  inspectedViewTag={ReactNative.findNodeHandle(this._mainRef)}\n                  onRequestRerenderApp={updateInspectedViewTag => {\n                    this.setState(\n                      s => ({mainKey: s.mainKey + 1}),\n                      () =>\n                        updateInspectedViewTag(\n                          ReactNative.findNodeHandle(this._mainRef),\n                        ),\n                    );\n                  }}\n                />;\n            this.setState({inspector});\n          },\n        );\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this._subscription) {\n      this._subscription.remove();\n    }\n  }\n\n  render(): React.Element<*> {\n    let yellowBox = null;\n    if (__DEV__) {\n      if (!global.__RCTProfileIsProfiling) {\n        const YellowBox = require('YellowBox');\n        yellowBox = <YellowBox />;\n      }\n    }\n\n    let innerView = (\n      <View\n        collapsable={!this.state.inspector}\n        key={this.state.mainKey}\n        pointerEvents=\"box-none\"\n        style={styles.appContainer}\n        ref={ref => {\n          this._mainRef = ref;\n        }}>\n        {this.props.children}\n      </View>\n    );\n\n    const Wrapper = this.props.WrapperComponent;\n    if (Wrapper) {\n      innerView = (\n        <Wrapper>\n          {innerView}\n        </Wrapper>\n      );\n    }\n    return (\n      <View style={styles.appContainer} pointerEvents=\"box-none\">\n        {innerView}\n        {yellowBox}\n        {this.state.inspector}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n  },\n});\n\nmodule.exports = AppContainer;\n"]}