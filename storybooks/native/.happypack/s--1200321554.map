{"version":3,"sources":["node_modules/react-native/Libraries/Settings/Settings.ios.js"],"names":["RCTDeviceEventEmitter","require","RCTSettingsManager","SettingsManager","invariant","subscriptions","Settings","_settings","settings","get","key","set","setValues","watchKeys","keys","callback","Array","isArray","sid","length","push","clearWatch","watchId","_sendObservations","body","Object","forEach","newValue","didChange","sub","indexOf","addListener","bind","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAIA,uBAAwBC,QAAQ,uBAAR,CAA5B;AACA,GAAIC,oBAAqBD,QAAQ,eAAR,EAAyBE,eAAlD;;AAEA,GAAIC,WAAYH,QAAQ,oBAAR,CAAhB;;AAEA,GAAII,eAAmE,EAAvE;;AAEA,GAAIC,UAAW;AACbC,UAAWL,oBAAsBA,mBAAmBM,QADvC;;AAGbC,GAHa,cAGTC,GAHS,CAGW;AACtB,MAAO,MAAKH,SAAL,CAAeG,GAAf,CAAP;AACD,CALY;;AAObC,GAPa,cAOTH,QAPS,CAOS;AACpB,KAAKD,SAAL,CAAiB,SAAc,KAAKA,SAAnB,CAA8BC,QAA9B,CAAjB;AACAN,mBAAmBU,SAAnB,CAA6BJ,QAA7B;AACD,CAVY;;AAYbK,SAZa,oBAYHC,IAZG,CAY2BC,QAZ3B,CAYuD;AAClE,GAAI,MAAOD,KAAP,GAAgB,QAApB,CAA8B;AAC5BA,KAAO,CAACA,IAAD,CAAP;AACD;;AAEDV;AACEY,MAAMC,OAAN,CAAcH,IAAd,CADF;AAEE,6CAFF;;;AAKA,GAAII,KAAMb,cAAcc,MAAxB;AACAd,cAAce,IAAd,CAAmB,CAACN,KAAMA,IAAP,CAAaC,SAAUA,QAAvB,CAAnB;AACA,MAAOG,IAAP;AACD,CAzBY;;AA2BbG,UA3Ba,qBA2BFC,OA3BE,CA2Be;AAC1B,GAAIA,QAAUjB,cAAcc,MAA5B,CAAoC;AAClCd,cAAciB,OAAd,EAAyB,CAACR,KAAM,EAAP,CAAWC,SAAU,IAArB,CAAzB;AACD;AACF,CA/BY;;AAiCbQ,iBAjCa,4BAiCKC,IAjCL,CAiCmB;AAC9BC,OAAOX,IAAP,CAAYU,IAAZ,EAAkBE,OAAlB,CAA0B,SAAChB,GAAD,CAAS;AACjC,GAAIiB,UAAWH,KAAKd,GAAL,CAAf;AACA,GAAIkB,WAAY,MAAKrB,SAAL,CAAeG,GAAf,IAAwBiB,QAAxC;AACA,MAAKpB,SAAL,CAAeG,GAAf,EAAsBiB,QAAtB;;AAEA,GAAIC,SAAJ,CAAe;AACbvB,cAAcqB,OAAd,CAAsB,SAACG,GAAD,CAAS;AAC7B,GAAIA,IAAIf,IAAJ,CAASgB,OAAT,CAAiBpB,GAAjB,IAA0B,CAAC,CAA3B,EAAgCmB,IAAId,QAAxC,CAAkD;AAChDc,IAAId,QAAJ;AACD;AACF,CAJD;AAKD;AACF,CAZD;AAaD,CA/CY,CAAf;;;AAkDAf,sBAAsB+B,WAAtB;AACE,iBADF;AAEEzB,SAASiB,iBAAT,CAA2BS,IAA3B,CAAgC1B,QAAhC,CAFF;;;AAKA2B,OAAOC,OAAP,CAAiB5B,QAAjB,C,0GA7DIJ,kB,qKAIAG,a,gKAEAC,Q","file":"Settings.ios.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Settings\n * @flow\n */\n'use strict';\n\nvar RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nvar RCTSettingsManager = require('NativeModules').SettingsManager;\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar subscriptions: Array<{keys: Array<string>, callback: ?Function}> = [];\n\nvar Settings = {\n  _settings: RCTSettingsManager && RCTSettingsManager.settings,\n\n  get(key: string): mixed {\n    return this._settings[key];\n  },\n\n  set(settings: Object) {\n    this._settings = Object.assign(this._settings, settings);\n    RCTSettingsManager.setValues(settings);\n  },\n\n  watchKeys(keys: string | Array<string>, callback: Function): number {\n    if (typeof keys === 'string') {\n      keys = [keys];\n    }\n\n    invariant(\n      Array.isArray(keys),\n      'keys should be a string or array of strings'\n    );\n\n    var sid = subscriptions.length;\n    subscriptions.push({keys: keys, callback: callback});\n    return sid;\n  },\n\n  clearWatch(watchId: number) {\n    if (watchId < subscriptions.length) {\n      subscriptions[watchId] = {keys: [], callback: null};\n    }\n  },\n\n  _sendObservations(body: Object) {\n    Object.keys(body).forEach((key) => {\n      var newValue = body[key];\n      var didChange = this._settings[key] !== newValue;\n      this._settings[key] = newValue;\n\n      if (didChange) {\n        subscriptions.forEach((sub) => {\n          if (sub.keys.indexOf(key) !== -1 && sub.callback) {\n            sub.callback();\n          }\n        });\n      }\n    });\n  },\n};\n\nRCTDeviceEventEmitter.addListener(\n  'settingsUpdated',\n  Settings._sendObservations.bind(Settings)\n);\n\nmodule.exports = Settings;\n"]}