{"version":3,"sources":["node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.android.js"],"names":["NativeModules","require","RCTDeviceEventEmitter","RCTAccessibilityInfo","AccessibilityInfo","TOUCH_EXPLORATION_EVENT","_subscriptions","Map","fetch","Promise","resolve","reject","isTouchExplorationEnabled","resp","addEventListener","eventName","handler","listener","addListener","enabled","set","removeEventListener","get","remove","delete","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAIA,eAAgBC,QAAQ,eAAR,CAApB;AACA,GAAIC,uBAAwBD,QAAQ,uBAAR,CAA5B;;AAEA,GAAIE,sBAAuBH,cAAcI,iBAAzC;;AAEA,GAAIC,yBAA0B,2BAA9B;;;;;;AAMA,GAAIC,gBAAiB,GAAIC,IAAJ,EAArB;;AAEA,GAAIH,mBAAoB;;AAEtBI,MAAO,gBAAoB;AACzB,MAAO,IAAIC,QAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB;AACtCR,qBAAqBS,yBAArB;AACE,SAASC,IAAT,CAAe;AACbH,QAAQG,IAAR;AACD,CAHH;;AAKD,CANM,CAAP;AAOD,CAVqB;;AAYtBC,iBAAkB;AAChBC,SADgB;AAEhBC,OAFgB;AAGV;AACN,GAAIC,UAAWf,sBAAsBgB,WAAtB;AACbb,uBADa;AAEb,SAACc,OAAD,CAAa;AACXH,QAAQG,OAAR;AACD,CAJY,CAAf;;AAMAb,eAAec,GAAf,CAAmBJ,OAAnB,CAA4BC,QAA5B;AACD,CAvBqB;;AAyBtBI,oBAAqB;AACnBN,SADmB;AAEnBC,OAFmB;AAGb;AACN,GAAIC,UAAWX,eAAegB,GAAf,CAAmBN,OAAnB,CAAf;AACA,GAAI,CAACC,QAAL,CAAe;AACb;AACD;AACDA,SAASM,MAAT;AACAjB,eAAekB,MAAf,CAAsBR,OAAtB;AACD,CAnCqB,CAAxB;;;;AAuCAS,OAAOC,OAAP,CAAiBtB,iBAAjB,C,0GAjDID,oB,wMAEAE,uB,2MAMAC,c,kMAEAF,iB","file":"AccessibilityInfo.android.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AccessibilityInfo\n * @flow\n */\n'use strict';\n\nvar NativeModules = require('NativeModules');\nvar RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\n\nvar RCTAccessibilityInfo = NativeModules.AccessibilityInfo;\n\nvar TOUCH_EXPLORATION_EVENT = 'touchExplorationDidChange';\n\ntype ChangeEventName = $Enum<{\n  change: string,\n}>;\n\nvar _subscriptions = new Map();\n\nvar AccessibilityInfo = {\n\n  fetch: function(): Promise {\n    return new Promise((resolve, reject) => {\n      RCTAccessibilityInfo.isTouchExplorationEnabled(\n        function(resp) {\n          resolve(resp);\n        }\n      );\n    });\n  },\n\n  addEventListener: function (\n    eventName: ChangeEventName,\n    handler: Function\n  ): void {\n    var listener = RCTDeviceEventEmitter.addListener(\n      TOUCH_EXPLORATION_EVENT,\n      (enabled) => {\n        handler(enabled);\n      }\n    );\n    _subscriptions.set(handler, listener);\n  },\n\n  removeEventListener: function(\n    eventName: ChangeEventName,\n    handler: Function\n  ): void {\n    var listener = _subscriptions.get(handler);\n    if (!listener) {\n      return;\n    }\n    listener.remove();\n    _subscriptions.delete(handler);\n  },\n\n};\n\nmodule.exports = AccessibilityInfo;\n"]}