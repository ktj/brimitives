{"version":3,"sources":["node_modules/react-native/Libraries/vendor/emitter/mixInEventEmitter.js"],"names":["EventEmitter","require","EventEmitterWithHolding","EventHolder","invariant","keyOf","TYPES_KEY","__types","mixInEventEmitter","cls","types","target","prototype","__eventEmitter","ctor","constructor","Object","Function","hasOwnProperty","EventEmitterMixin","emit","eventType","a","b","c","d","e","_","__getEventEmitter","emitAndHold","addListener","listener","context","once","addRetroactiveListener","addListenerMap","listenerMap","addRetroactiveListenerMap","removeAllListeners","removeCurrentListener","releaseHeldEventType","emitter","__DEV__","EventValidator","addValidation","holder","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAMA,cAAeC,QAAQ,cAAR,CAArB;AACA,GAAMC,yBAA0BD,QAAQ,yBAAR,CAAhC;AACA,GAAME,aAAcF,QAAQ,aAAR,CAApB;;AAEA,GAAMG,WAAYH,QAAQ,oBAAR,CAAlB;AACA,GAAMI,OAAQJ,QAAQ,gBAAR,CAAd;;AAEA,GAAMK,WAAYD,MAAM,CAACE,QAAS,IAAV,CAAN,CAAlB;;;;;;;;;;;;;;;;;;;;;;;AAuBA,QAASC,kBAAT,CAA2BC,GAA3B,CAAmDC,KAAnD,CAAkE;AAChEN,UAAUM,KAAV,CAAiB,sCAAjB;;;;AAIA,GAAMC,QAASF,IAAIG,SAAJ,EAAiBH,GAAhC;;AAEAL,UAAU,CAACO,OAAOE,cAAlB,CAAkC,uCAAlC;;AAEA,GAAMC,MAAOL,IAAIM,WAAjB;AACA,GAAID,IAAJ,CAAU;AACRV;AACEU,OAASE,MAAT,EAAmBF,OAASG,QAD9B;AAEE,gDAFF;;AAID;;;;AAID,GAAIN,OAAOO,cAAP,CAAsBZ,SAAtB,CAAJ,CAAsC;AACpC,SAAcK,OAAOJ,OAArB,CAA8BG,KAA9B;AACD,CAFD,IAEO,IAAIC,OAAOJ,OAAX,CAAoB;AACzBI,OAAOJ,OAAP,CAAiB,SAAc,EAAd,CAAkBI,OAAOJ,OAAzB,CAAkCG,KAAlC,CAAjB;AACD,CAFM,IAEA;AACLC,OAAOJ,OAAP,CAAiBG,KAAjB;AACD;AACD,SAAcC,MAAd,CAAsBQ,iBAAtB;AACD;;AAED,GAAMA,mBAAoB;AACxBC,KAAM,cAASC,SAAT,CAAoBC,CAApB,CAAuBC,CAAvB,CAA0BC,CAA1B,CAA6BC,CAA7B,CAAgCC,CAAhC,CAAmCC,CAAnC,CAAsC;AAC1C,MAAO,MAAKC,iBAAL,GAAyBR,IAAzB,CAA8BC,SAA9B,CAAyCC,CAAzC,CAA4CC,CAA5C,CAA+CC,CAA/C,CAAkDC,CAAlD,CAAqDC,CAArD,CAAwDC,CAAxD,CAAP;AACD,CAHuB;;AAKxBE,YAAa,qBAASR,SAAT,CAAoBC,CAApB,CAAuBC,CAAvB,CAA0BC,CAA1B,CAA6BC,CAA7B,CAAgCC,CAAhC,CAAmCC,CAAnC,CAAsC;AACjD,MAAO,MAAKC,iBAAL,GAAyBC,WAAzB,CAAqCR,SAArC,CAAgDC,CAAhD,CAAmDC,CAAnD,CAAsDC,CAAtD,CAAyDC,CAAzD,CAA4DC,CAA5D,CAA+DC,CAA/D,CAAP;AACD,CAPuB;;AASxBG,YAAa,qBAAST,SAAT,CAAoBU,QAApB,CAA8BC,OAA9B,CAAuC;AAClD,MAAO,MAAKJ,iBAAL,GAAyBE,WAAzB,CAAqCT,SAArC,CAAgDU,QAAhD,CAA0DC,OAA1D,CAAP;AACD,CAXuB;;AAaxBC,KAAM,cAASZ,SAAT,CAAoBU,QAApB,CAA8BC,OAA9B,CAAuC;AAC3C,MAAO,MAAKJ,iBAAL,GAAyBK,IAAzB,CAA8BZ,SAA9B,CAAyCU,QAAzC,CAAmDC,OAAnD,CAAP;AACD,CAfuB;;AAiBxBE,uBAAwB,gCAASb,SAAT,CAAoBU,QAApB,CAA8BC,OAA9B,CAAuC;AAC7D,MAAO,MAAKJ,iBAAL,GAAyBM,sBAAzB;AACLb,SADK;AAELU,QAFK;AAGLC,OAHK,CAAP;;AAKD,CAvBuB;;AAyBxBG,eAAgB,wBAASC,WAAT,CAAsBJ,OAAtB,CAA+B;AAC7C,MAAO,MAAKJ,iBAAL,GAAyBO,cAAzB,CAAwCC,WAAxC,CAAqDJ,OAArD,CAAP;AACD,CA3BuB;;AA6BxBK,0BAA2B,mCAASD,WAAT,CAAsBJ,OAAtB,CAA+B;AACxD,MAAO,MAAKJ,iBAAL,GAAyBO,cAAzB,CAAwCC,WAAxC,CAAqDJ,OAArD,CAAP;AACD,CA/BuB;;AAiCxBM,mBAAoB,6BAAW;AAC7B,KAAKV,iBAAL,GAAyBU,kBAAzB;AACD,CAnCuB;;AAqCxBC,sBAAuB,gCAAW;AAChC,KAAKX,iBAAL,GAAyBW,qBAAzB;AACD,CAvCuB;;AAyCxBC,qBAAsB,8BAASnB,SAAT,CAAoB;AACxC,KAAKO,iBAAL,GAAyBY,oBAAzB,CAA8CnB,SAA9C;AACD,CA3CuB;;AA6CxBO,kBAAmB,4BAAW;AAC5B,GAAI,CAAC,KAAKf,cAAV,CAA0B;AACxB,GAAI4B,SAAU,GAAIzC,aAAJ,EAAd;AACA,GAAI0C,OAAJ,CAAa;AACX,GAAMC,gBAAiB1C,QAAQ,gBAAR,CAAvB;AACAwC,QAAUE,eAAeC,aAAf,CAA6BH,OAA7B,CAAsC,KAAKlC,OAA3C,CAAV;AACD;;AAED,GAAMsC,QAAS,GAAI1C,YAAJ,EAAf;AACA,KAAKU,cAAL,CAAsB,GAAIX,wBAAJ,CAA4BuC,OAA5B,CAAqCI,MAArC,CAAtB;AACD;AACD,MAAO,MAAKhC,cAAZ;AACD,CAzDuB,CAA1B;;;AA4DAiC,OAAOC,OAAP,CAAiBvC,iBAAjB,C,0GAhHMF,S,uKAuBGE,iB,+KA6BHW,iB","file":"mixInEventEmitter.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mixInEventEmitter\n * @flow\n */\n'use strict';\n\nconst EventEmitter = require('EventEmitter');\nconst EventEmitterWithHolding = require('EventEmitterWithHolding');\nconst EventHolder = require('EventHolder');\n\nconst invariant = require('fbjs/lib/invariant');\nconst keyOf = require('fbjs/lib/keyOf');\n\nconst TYPES_KEY = keyOf({__types: true});\n\n/**\n * API to setup an object or constructor to be able to emit data events.\n *\n * @example\n * function Dog() { ...dog stuff... }\n * mixInEventEmitter(Dog, {bark: true});\n *\n * var puppy = new Dog();\n * puppy.addListener('bark', function (volume) {\n *   console.log('Puppy', this, 'barked at volume:', volume);\n * });\n * puppy.emit('bark', 'quiet');\n * // Puppy <puppy> barked at volume: quiet\n *\n *\n * // A \"singleton\" object may also be commissioned:\n *\n * var Singleton = {};\n * mixInEventEmitter(Singleton, {lonely: true});\n * Singleton.emit('lonely', true);\n */\nfunction mixInEventEmitter(cls: Function | Object, types: Object) {\n  invariant(types, 'Must supply set of valid event types');\n\n  // If this is a constructor, write to the prototype, otherwise write to the\n  // singleton object.\n  const target = cls.prototype || cls;\n\n  invariant(!target.__eventEmitter, 'An active emitter is already mixed in');\n\n  const ctor = cls.constructor;\n  if (ctor) {\n    invariant(\n      ctor === Object || ctor === Function,\n      'Mix EventEmitter into a class, not an instance'\n    );\n  }\n\n  // Keep track of the provided types, union the types if they already exist,\n  // which allows for prototype subclasses to provide more types.\n  if (target.hasOwnProperty(TYPES_KEY)) {\n    Object.assign(target.__types, types);\n  } else if (target.__types) {\n    target.__types = Object.assign({}, target.__types, types);\n  } else {\n    target.__types = types;\n  }\n  Object.assign(target, EventEmitterMixin);\n}\n\nconst EventEmitterMixin = {\n  emit: function(eventType, a, b, c, d, e, _) {\n    return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);\n  },\n\n  emitAndHold: function(eventType, a, b, c, d, e, _) {\n    return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);\n  },\n\n  addListener: function(eventType, listener, context) {\n    return this.__getEventEmitter().addListener(eventType, listener, context);\n  },\n\n  once: function(eventType, listener, context) {\n    return this.__getEventEmitter().once(eventType, listener, context);\n  },\n\n  addRetroactiveListener: function(eventType, listener, context) {\n    return this.__getEventEmitter().addRetroactiveListener(\n      eventType,\n      listener,\n      context\n    );\n  },\n\n  addListenerMap: function(listenerMap, context) {\n    return this.__getEventEmitter().addListenerMap(listenerMap, context);\n  },\n\n  addRetroactiveListenerMap: function(listenerMap, context) {\n    return this.__getEventEmitter().addListenerMap(listenerMap, context);\n  },\n\n  removeAllListeners: function() {\n    this.__getEventEmitter().removeAllListeners();\n  },\n\n  removeCurrentListener: function() {\n    this.__getEventEmitter().removeCurrentListener();\n  },\n\n  releaseHeldEventType: function(eventType) {\n    this.__getEventEmitter().releaseHeldEventType(eventType);\n  },\n\n  __getEventEmitter: function() {\n    if (!this.__eventEmitter) {\n      let emitter = new EventEmitter();\n      if (__DEV__) {\n        const EventValidator = require('EventValidator');\n        emitter = EventValidator.addValidation(emitter, this.__types);\n      }\n\n      const holder = new EventHolder();\n      this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);\n    }\n    return this.__eventEmitter;\n  }\n};\n\nmodule.exports = mixInEventEmitter;\n"]}