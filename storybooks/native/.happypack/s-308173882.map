{"version":3,"sources":["node_modules/react-native/Libraries/vendor/core/Map.js"],"names":["_shouldPolyfillES6Collection","require","guid","isNode","toIterator","module","exports","global","undefined","Map","KIND_KEY","KIND_VALUE","KIND_KEY_VALUE","KEY_PREFIX","SECRET_SIZE_PROP","__DEV__","OLD_IE_HASH_PREFIX","iterable","isObject","TypeError","initMap","it","next","done","value","set","key","index","getIndex","_mapData","push","setIndex","size","MapIterator","callback","thisArg","boundCallback","bind","mapData","i","length","entry","prototype","ITERATOR_SYMBOL","entries","map","kind","indexOf","Error","_map","_nextIndex","_kind","createIterResultObject","record","hash","getHash","_objectIndex","prefixedKey","_stringIndex","_otherIndex","shouldDelete","isES5","hasOwnProperty","Object","defineProperty","writable","v","console","error","get","o","e","isExtensible","getIENodeHash","node","uniqueID","nodeType","documentElement","propIsEnumerable","propertyIsEnumerable","hashProperty","hashCounter","enumerable","configurable","apply","arguments","Function"],"mappings":"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","file":"Map.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Map\n * @preventMunge\n * @typechecks\n */\n\n/* eslint-disable no-extend-native, no-shadow-restricted-names */\n\n'use strict';\n\nvar _shouldPolyfillES6Collection = require('_shouldPolyfillES6Collection');\nvar guid = require('guid');\nvar isNode = require('fbjs/lib/isNode');\nvar toIterator = require('toIterator');\n\nmodule.exports = (function(global, undefined) {\n  // Since our implementation is spec-compliant for the most part we can safely\n  // delegate to a built-in version if exists and is implemented correctly.\n  // Firefox had gotten a few implementation details wrong across different\n  // versions so we guard against that.\n  if (!_shouldPolyfillES6Collection('Map')) {\n    return global.Map;\n  }\n\n  /**\n   * == ES6 Map Collection ==\n   *\n   * This module is meant to implement a Map collection as described in chapter\n   * 23.1 of the ES6 specification.\n   *\n   * Map objects are collections of key/value pairs where both the keys and\n   * values may be arbitrary ECMAScript language values. A distinct key value\n   * may only occur in one key/value pair within the Map's collection.\n   *\n   * https://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects\n   *\n   * There only two -- rather small -- diviations from the spec:\n   *\n   * 1. The use of frozen objects as keys.\n   *    We decided not to allow and simply throw an error. The reason being is\n   *    we store a \"hash\" on the object for fast access to it's place in the\n   *    internal map entries.\n   *    If this turns out to be a popular use case it's possible to implement by\n   *    overiding `Object.freeze` to store a \"hash\" property on the object\n   *    for later use with the map.\n   *\n   * 2. The `size` property on a map object is a regular property and not a\n   *    computed property on the prototype as described by the spec.\n   *    The reason being is that we simply want to support ES3 environments\n   *    which doesn't implement computed properties.\n   *\n   * == Usage ==\n   *\n   * var map = new Map(iterable);\n   *\n   * map.set(key, value);\n   * map.get(key); // value\n   * map.has(key); // true\n   * map.delete(key); // true\n   *\n   * var iterator = map.keys();\n   * iterator.next(); // {value: key, done: false}\n   *\n   * var iterator = map.values();\n   * iterator.next(); // {value: value, done: false}\n   *\n   * var iterator = map.entries();\n   * iterator.next(); // {value: [key, value], done: false}\n   *\n   * map.forEach(function(value, key){ this === thisArg }, thisArg);\n   *\n   * map.clear(); // resets map.\n   */\n\n  /**\n   * Constants\n   */\n\n  // Kinds of map iterations 23.1.5.3\n  var KIND_KEY = 'key';\n  var KIND_VALUE = 'value';\n  var KIND_KEY_VALUE = 'key+value';\n\n  // In older browsers we can't create a null-prototype object so we have to\n  // defend against key collisions with built-in methods.\n  var KEY_PREFIX = '$map_';\n\n  // This property will be used as the internal size variable to disallow\n  // writing and to issue warnings for writings in development.\n  var SECRET_SIZE_PROP;\n  if (__DEV__) {\n    SECRET_SIZE_PROP = '$size' + guid();\n  }\n\n  // In oldIE we use the DOM Node `uniqueID` property to get create the hash.\n  var OLD_IE_HASH_PREFIX = 'IE_HASH_';\n\n  class Map {\n\n    /**\n     * 23.1.1.1\n     * Takes an `iterable` which is basically any object that implements a\n     * Symbol.iterator (@@iterator) method. The iterable is expected to be a\n     * collection of pairs. Each pair is a key/value pair that will be used\n     * to instantiate the map.\n     *\n     * @param {*} iterable\n     */\n    constructor(iterable) {\n      if (!isObject(this)) {\n        throw new TypeError('Wrong map object type.');\n      }\n\n      initMap(this);\n\n      if (iterable != null) {\n        var it = toIterator(iterable);\n        var next;\n        while (!(next = it.next()).done) {\n          if (!isObject(next.value)) {\n            throw new TypeError('Expected iterable items to be pair objects.');\n          }\n          this.set(next.value[0], next.value[1]);\n        }\n      }\n    }\n\n    /**\n     * 23.1.3.1\n     * Clears the map from all keys and values.\n     */\n    clear() {\n      initMap(this);\n    }\n\n    /**\n     * 23.1.3.7\n     * Check if a key exists in the collection.\n     *\n     * @param {*} key\n     * @return {boolean}\n     */\n    has(key) {\n      var index = getIndex(this, key);\n      return !!(index != null && this._mapData[index]);\n    }\n\n    /**\n     * 23.1.3.9\n     * Adds a key/value pair to the collection.\n     *\n     * @param {*} key\n     * @param {*} value\n     * @return {map}\n     */\n    set(key, value) {\n      var index = getIndex(this, key);\n\n      if (index != null && this._mapData[index]) {\n        this._mapData[index][1] = value;\n      } else {\n        index = this._mapData.push([\n          key,\n          value\n        ]) - 1;\n        setIndex(this, key, index);\n        if (__DEV__) {\n          this[SECRET_SIZE_PROP] += 1;\n        } else {\n          this.size += 1;\n        }\n      }\n\n      return this;\n    }\n\n    /**\n     * 23.1.3.6\n     * Gets a value associated with a key in the collection.\n     *\n     * @param {*} key\n     * @return {*}\n     */\n    get(key) {\n      var index = getIndex(this, key);\n      if (index == null) {\n        return undefined;\n      } else {\n        return this._mapData[index][1];\n      }\n    }\n\n\n    /**\n     * 23.1.3.3\n     * Delete a key/value from the collection.\n     *\n     * @param {*} key\n     * @return {boolean} Whether the key was found and deleted.\n     */\n    delete(key) {\n      var index = getIndex(this, key);\n      if (index != null && this._mapData[index]) {\n        setIndex(this, key, undefined);\n        this._mapData[index] = undefined;\n        if (__DEV__) {\n          this[SECRET_SIZE_PROP] -= 1;\n        } else {\n          this.size -= 1;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * 23.1.3.4\n     * Returns an iterator over the key/value pairs (in the form of an Array) in\n     * the collection.\n     *\n     * @return {MapIterator}\n     */\n    entries() {\n      return new MapIterator(this, KIND_KEY_VALUE);\n    }\n\n    /**\n     * 23.1.3.8\n     * Returns an iterator over the keys in the collection.\n     *\n     * @return {MapIterator}\n     */\n    keys() {\n      return new MapIterator(this, KIND_KEY);\n    }\n\n    /**\n     * 23.1.3.11\n     * Returns an iterator over the values pairs in the collection.\n     *\n     * @return {MapIterator}\n     */\n    values() {\n      return new MapIterator(this, KIND_VALUE);\n    }\n\n    /**\n     * 23.1.3.5\n     * Iterates over the key/value pairs in the collection calling `callback`\n     * with [value, key, map]. An optional `thisArg` can be passed to set the\n     * context when `callback` is called.\n     *\n     * @param {function} callback\n     * @param {?object} thisArg\n     */\n    forEach(callback, thisArg) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('Callback must be callable.');\n      }\n\n      var boundCallback = callback.bind(thisArg || undefined);\n      var mapData = this._mapData;\n\n      // Note that `mapData.length` should be computed on each iteration to\n      // support iterating over new items in the map that were added after the\n      // start of the iteration.\n      for (var i = 0; i < mapData.length; i++) {\n        var entry = mapData[i];\n        if (entry != null) {\n          boundCallback(entry[1], entry[0], this);\n        }\n      }\n    }\n  }\n\n  // 23.1.3.12\n  Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;\n\n  class MapIterator {\n\n    /**\n     * 23.1.5.1\n     * Create a `MapIterator` for a given `map`. While this class is private it\n     * will create objects that will be passed around publicily.\n     *\n     * @param {map} map\n     * @param {string} kind\n     */\n    constructor(map, kind) {\n      if (!(isObject(map) && map._mapData)) {\n        throw new TypeError('Object is not a map.');\n      }\n\n      if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {\n        throw new Error('Invalid iteration kind.');\n      }\n\n      this._map = map;\n      this._nextIndex = 0;\n      this._kind = kind;\n    }\n\n    /**\n     * 23.1.5.2.1\n     * Get the next iteration.\n     *\n     * @return {object}\n     */\n    next() {\n      if (!this instanceof Map) {\n        throw new TypeError('Expected to be called on a MapIterator.');\n      }\n\n      var map = this._map;\n      var index = this._nextIndex;\n      var kind = this._kind;\n\n      if (map == null) {\n        return createIterResultObject(undefined, true);\n      }\n\n      var entries = map._mapData;\n\n      while (index < entries.length) {\n        var record = entries[index];\n\n        index += 1;\n        this._nextIndex = index;\n\n        if (record) {\n          if (kind === KIND_KEY) {\n            return createIterResultObject(record[0], false);\n          } else if (kind === KIND_VALUE) {\n            return createIterResultObject(record[1], false);\n          } else if (kind) {\n            return createIterResultObject(record, false);\n          }\n        }\n      }\n\n      this._map = undefined;\n\n      return createIterResultObject(undefined, true);\n    }\n  }\n\n  // We can put this in the class definition once we have computed props\n  // transform.\n  // 23.1.5.2.2\n  MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function() {\n    return this;\n  };\n\n  /**\n   * Helper Functions.\n   */\n\n  /**\n   * Return an index to map.[[MapData]] array for a given Key.\n   *\n   * @param {map} map\n   * @param {*} key\n   * @return {?number}\n   */\n  function getIndex(map, key) {\n    if (isObject(key)) {\n      var hash = getHash(key);\n      return map._objectIndex[hash];\n    } else {\n      var prefixedKey = KEY_PREFIX + key;\n      if (typeof key === 'string') {\n        return map._stringIndex[prefixedKey];\n      } else {\n        return map._otherIndex[prefixedKey];\n      }\n    }\n  }\n\n  /**\n   * Setup an index that refer to the key's location in map.[[MapData]].\n   *\n   * @param {map} map\n   * @param {*} key\n   */\n  function setIndex(map, key, index) {\n    var shouldDelete = index == null;\n\n    if (isObject(key)) {\n      var hash = getHash(key);\n      if (shouldDelete) {\n        delete map._objectIndex[hash];\n      } else {\n        map._objectIndex[hash] = index;\n      }\n    } else {\n      var prefixedKey = KEY_PREFIX + key;\n      if (typeof key === 'string') {\n        if (shouldDelete) {\n          delete map._stringIndex[prefixedKey];\n        } else {\n          map._stringIndex[prefixedKey] = index;\n        }\n      } else {\n        if (shouldDelete) {\n          delete map._otherIndex[prefixedKey];\n        } else {\n          map._otherIndex[prefixedKey] = index;\n        }\n      }\n    }\n  }\n\n  /**\n   * Instantiate a map with internal slots.\n   *\n   * @param {map} map\n   */\n  function initMap(map) {\n    // Data structure design inspired by Traceur's Map implementation.\n    // We maintain an internal array for all the entries. The array is needed\n    // to remember order. However, to have a reasonable HashMap performance\n    // i.e. O(1) for insertion, deletion, and retrieval. We maintain indices\n    // in objects for fast look ups. Indices are split up according to data\n    // types to avoid collisions.\n    map._mapData = [];\n\n    // Object index maps from an object \"hash\" to index. The hash being a unique\n    // property of our choosing that we associate with the object. Association\n    // is done by ways of keeping a non-enumerable property on the object.\n    // Ideally these would be `Object.create(null)` objects but since we're\n    // trying to support ES3 we'll have to gaurd against collisions using\n    // prefixes on the keys rather than rely on null prototype objects.\n    map._objectIndex = {};\n\n    // String index maps from strings to index.\n    map._stringIndex = {};\n\n    // Numbers, booleans, undefined, and null.\n    map._otherIndex = {};\n\n    // Unfortunately we have to support ES3 and cannot have `Map.prototype.size`\n    // be a getter method but just a regular method. The biggest problem with\n    // this is safety. Clients can change the size property easily and possibly\n    // without noticing (e.g. `if (map.size = 1) {..}` kind of typo). What we\n    // can do to mitigate use getters and setters in development to disallow\n    // and issue a warning for changing the `size` property.\n    if (__DEV__) {\n      if (isES5) {\n        // If the `SECRET_SIZE_PROP` property is already defined then we're not\n        // in the first call to `initMap` (e.g. coming from `map.clear()`) so\n        // all we need to do is reset the size without defining the properties.\n        if (map.hasOwnProperty(SECRET_SIZE_PROP)) {\n          map[SECRET_SIZE_PROP] = 0;\n        } else {\n          Object.defineProperty(map, SECRET_SIZE_PROP, {\n            value: 0,\n            writable: true\n          });\n          Object.defineProperty(map, 'size', {\n            set: (v) => {\n              console.error(\n                'PLEASE FIX ME: You are changing the map size property which ' +\n                'should not be writable and will break in production.'\n              );\n              throw new Error('The map size property is not writable.');\n            },\n            get: () => map[SECRET_SIZE_PROP]\n          });\n        }\n\n        // NOTE: Early return to implement immutable `.size` in DEV.\n        return;\n      }\n    }\n\n    // This is a diviation from the spec. `size` should be a getter on\n    // `Map.prototype`. However, we have to support IE8.\n    map.size = 0;\n  }\n\n  /**\n   * Check if something is an object.\n   *\n   * @param {*} o\n   * @return {boolean}\n   */\n  function isObject(o) {\n    return o != null && (typeof o === 'object' || typeof o === 'function');\n  }\n\n  /**\n   * Create an iteration object.\n   *\n   * @param {*} value\n   * @param {boolean} done\n   * @return {object}\n   */\n  function createIterResultObject(value, done) {\n    return {value, done};\n  }\n\n  // Are we in a legit ES5 environment. Spoiler alert: that doesn't include IE8.\n  var isES5 = (function() {\n    try {\n      Object.defineProperty({}, 'x', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  })();\n\n  /**\n   * Check if an object can be extended.\n   *\n   * @param {object|array|function|regexp} o\n   * @return {boolean}\n   */\n  function isExtensible(o) {\n    if (!isES5) {\n      return true;\n    } else {\n      return Object.isExtensible(o);\n    }\n  }\n\n  /**\n   * IE has a `uniqueID` set on every DOM node. So we construct the hash from\n   * this uniqueID to avoid memory leaks and the IE cloneNode bug where it\n   * clones properties in addition to the attributes.\n   *\n   * @param {object} node\n   * @return {?string}\n   */\n  function getIENodeHash(node) {\n    var uniqueID;\n    switch (node.nodeType) {\n      case 1: // Element\n        uniqueID = node.uniqueID;\n        break;\n      case 9: // Document\n        uniqueID = node.documentElement.uniqueID;\n        break;\n      default:\n        return null;\n    }\n\n    if (uniqueID) {\n      return  OLD_IE_HASH_PREFIX + uniqueID;\n    } else {\n      return null;\n    }\n  }\n\n  var getHash = (function() {\n    var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n    var hashProperty = guid();\n    var hashCounter = 0;\n\n    /**\n     * Get the \"hash\" associated with an object.\n     *\n     * @param {object|array|function|regexp} o\n     * @return {number}\n     */\n    return function getHash(o) { // eslint-disable-line no-shadow\n      if (o[hashProperty]) {\n        return o[hashProperty];\n      } else if (!isES5 &&\n                  o.propertyIsEnumerable &&\n                  o.propertyIsEnumerable[hashProperty]) {\n        return o.propertyIsEnumerable[hashProperty];\n      } else if (!isES5 &&\n                  isNode(o) &&\n                  getIENodeHash(o)) {\n        return getIENodeHash(o);\n      } else if (!isES5 && o[hashProperty]) {\n        return o[hashProperty];\n      }\n\n      if (isExtensible(o)) {\n        hashCounter += 1;\n        if (isES5) {\n          Object.defineProperty(o, hashProperty, {\n            enumerable: false,\n            writable: false,\n            configurable: false,\n            value: hashCounter\n          });\n        } else if (o.propertyIsEnumerable) {\n          // Since we can't define a non-enumerable property on the object\n          // we'll hijack one of the less-used non-enumerable properties to\n          // save our hash on it. Addiotionally, since this is a function it\n          // will not show up in `JSON.stringify` which is what we want.\n          o.propertyIsEnumerable = function() {\n            return propIsEnumerable.apply(this, arguments);\n          };\n          o.propertyIsEnumerable[hashProperty] = hashCounter;\n        } else if (isNode(o)) {\n          // At this point we couldn't get the IE `uniqueID` to use as a hash\n          // and we couldn't use a non-enumerable property to exploit the\n          // dontEnum bug so we simply add the `hashProperty` on the node\n          // itself.\n          o[hashProperty] = hashCounter;\n        } else {\n          throw new Error('Unable to set a non-enumerable property on object.');\n        }\n        return hashCounter;\n      } else {\n        throw new Error('Non-extensible objects are not allowed as keys.');\n      }\n    };\n  })();\n\n  return Map;\n})(Function('return this')()); // eslint-disable-line no-new-func\n"]}