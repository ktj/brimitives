{"version":3,"sources":["node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"names":["Blob","require","EventTarget","NativeEventEmitter","NativeModules","Platform","WebSocketEvent","base64","binaryToBase64","invariant","WebSocketModule","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","url","protocols","options","readyState","Array","isArray","isAvailable","Error","_eventEmitter","_socketId","_registerEvents","connect","code","reason","_close","data","BlobModule","sendBlob","send","ArrayBuffer","isView","sendBinary","ping","OS","statusCode","closeReason","close","_subscriptions","forEach","e","remove","addListener","ev","id","type","toByteArray","buffer","create","dispatchEvent","_unregisterEvents","message","_binaryType","binaryType","enableBlobSupport","disableBlobSupport","module","exports"],"mappings":"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","file":"WebSocket.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule WebSocket\n * @flow\n */\n'use strict';\n\nconst Blob = require('Blob');\nconst EventTarget = require('event-target-shim');\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst NativeModules = require('NativeModules');\nconst Platform = require('Platform');\nconst WebSocketEvent = require('WebSocketEvent');\n\nconst base64 = require('base64-js');\nconst binaryToBase64 = require('binaryToBase64');\nconst invariant = require('fbjs/lib/invariant');\n\nconst {WebSocketModule} = NativeModules;\n\nimport type EventSubscription from 'EventSubscription';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView\n\ntype BinaryType = 'blob' | 'arraybuffer'\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\nconst WEBSOCKET_EVENTS = [\n  'close',\n  'error',\n  'message',\n  'open',\n];\n\nlet nextWebSocketId = 0;\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends EventTarget(...WEBSOCKET_EVENTS) {\n  static CONNECTING = CONNECTING;\n  static OPEN = OPEN;\n  static CLOSING = CLOSING;\n  static CLOSED = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  // This module depends on the native `WebSocketModule` module. If you don't include it,\n  // `WebSocket.isAvailable` will return `false`, and WebSocket constructor will throw an error\n  static isAvailable: boolean = !!WebSocketModule;\n\n  constructor(url: string, protocols: ?string | ?Array<string>, options: ?{origin?: string}) {\n    super();\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    if (!WebSocket.isAvailable) {\n      throw new Error('Cannot initialize WebSocket module. ' +\n      'Native module WebSocketModule is missing.');\n    }\n\n    this._eventEmitter = new NativeEventEmitter(WebSocketModule);\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    WebSocketModule.connect(url, protocols, options, this._socketId);\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error('binaryType must be either \\'blob\\' or \\'arraybuffer\\'');\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      const BlobModule = NativeModules.BlobModule;\n      invariant(BlobModule, 'Native module BlobModule is required for blob support');\n      if (BlobModule) {\n        if (binaryType === 'blob') {\n          BlobModule.enableBlobSupport(this._socketId);\n        } else {\n          BlobModule.disableBlobSupport(this._socketId);\n        }\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING ||\n        this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      const BlobModule = NativeModules.BlobModule;\n      invariant(BlobModule, 'Native module BlobModule is required for blob support');\n      BlobModule.sendBlob(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      WebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n    }\n\n    WebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    if (Platform.OS === 'android') {\n      // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      const closeReason = typeof reason === 'string' ? reason : '';\n      WebSocketModule.close(statusCode, closeReason, this._socketId);\n    } else {\n      WebSocketModule.close(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = Blob.create(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', { data }));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(new WebSocketEvent('close', {\n          code: ev.code,\n          reason: ev.reason,\n        }));\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(new WebSocketEvent('error', {\n          message: ev.message,\n        }));\n        this.dispatchEvent(new WebSocketEvent('close', {\n          message: ev.message,\n        }));\n        this._unregisterEvents();\n        this.close();\n      })\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"]}