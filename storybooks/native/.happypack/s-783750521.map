{"version":3,"sources":["node_modules/react-native/Libraries/Components/TabBarIOS/TabBarIOS.ios.js"],"names":["ColorPropType","require","React","PropTypes","StyleSheet","TabBarItemIOS","ViewPropTypes","requireNativeComponent","TabBarIOS","styles","tabGroup","props","style","unselectedTintColor","unselectedItemTintColor","tintColor","barTintColor","itemPositioning","translucent","children","Component","Item","propTypes","bool","oneOf","create","flex","RCTTabBar","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAIA,eAAgBC,QAAQ,eAAR,CAApB;AACA,GAAIC,OAAQD,QAAQ,OAAR,CAAZ;AACA,GAAME,WAAYF,QAAQ,YAAR,CAAlB;AACA,GAAIG,YAAaH,QAAQ,YAAR,CAAjB;AACA,GAAII,eAAgBJ,QAAQ,eAAR,CAApB;AACA,GAAMK,eAAgBL,QAAQ,eAAR,CAAtB;;AAEA,GAAIM,wBAAyBN,QAAQ,wBAAR,CAA7B,C;;AAEMO,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDK;AACP;AACE,oBAAC,SAAD;AACE,MAAO,CAACC,OAAOC,QAAR,CAAkB,KAAKC,KAAL,CAAWC,KAA7B,CADT;AAEE,oBAAqB,KAAKD,KAAL,CAAWE,mBAFlC;AAGE,wBAAyB,KAAKF,KAAL,CAAWG,uBAHtC;AAIE,UAAW,KAAKH,KAAL,CAAWI,SAJxB;AAKE,aAAc,KAAKJ,KAAL,CAAWK,YAL3B;AAME,gBAAiB,KAAKL,KAAL,CAAWM,eAN9B;AAOE,YAAa,KAAKN,KAAL,CAAWO,WAAX,GAA2B,KAP1C;;;AAUI,KAAKP,KAAL,CAAWQ,QAVf,CADF;;;AAcD,C,uBAhEqBjB,MAAMkB,S,SAWrBC,I,CAAOhB,a,QAGPiB,S,aACFhB,a,EACHM,MAAON,cAAcM,K,CAIrBC,oBAAqBb,a,CAIrBe,UAAWf,a,CAIXc,wBAAyBd,a,CAIzBgB,aAAchB,a,CAIdkB,YAAaf,UAAUoB,I,CAUvBN,gBAAiBd,UAAUqB,KAAV,CAAgB,CAAC,MAAD,CAAS,QAAT,CAAmB,MAAnB,CAAhB,C;;;AAqBrB,GAAIf,QAASL,WAAWqB,MAAX,CAAkB;AAC7Bf,SAAU;AACRgB,KAAM,CADE,CADmB,CAAlB,CAAb;;;;AAMA,GAAIC,WAAYpB,uBAAuB,WAAvB,CAAoCC,SAApC,CAAhB;;AAEAoB,OAAOC,OAAP,CAAiBrB,SAAjB,C,2GA3EMA,S,yKAmEFC,M,sKAMAkB,S","file":"TabBarIOS.ios.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TabBarIOS\n * @flow\n */\n'use strict';\n\nvar ColorPropType = require('ColorPropType');\nvar React = require('React');\nconst PropTypes = require('prop-types');\nvar StyleSheet = require('StyleSheet');\nvar TabBarItemIOS = require('TabBarItemIOS');\nconst ViewPropTypes = require('ViewPropTypes');\n\nvar requireNativeComponent = require('requireNativeComponent');\n\nclass TabBarIOS extends React.Component {\n  props: {\n    style?: $FlowFixMe,\n    unselectedTintColor?: $FlowFixMe,\n    tintColor?: $FlowFixMe,\n    unselectedItemTintColor?: $FlowFixMe,\n    barTintColor?: $FlowFixMe,\n    translucent?: boolean,\n    itemPositioning?: 'fill' | 'center' | 'auto',\n  };\n\n  static Item = TabBarItemIOS;\n\n  // $FlowFixMe(>=0.41.0)\n  static propTypes = {\n    ...ViewPropTypes,\n    style: ViewPropTypes.style,\n    /**\n     * Color of text on unselected tabs\n     */\n    unselectedTintColor: ColorPropType,\n    /**\n     * Color of the currently selected tab icon\n     */\n    tintColor: ColorPropType,\n    /**\n     * Color of unselected tab icons. Available since iOS 10.\n     */\n    unselectedItemTintColor: ColorPropType,\n    /**\n     * Background color of the tab bar\n     */\n    barTintColor: ColorPropType,\n    /**\n     * A Boolean value that indicates whether the tab bar is translucent\n     */\n    translucent: PropTypes.bool,\n    /**\n     * Specifies tab bar item positioning. Available values are:\n     * - fill - distributes items across the entire width of the tab bar\n     * - center - centers item in the available tab bar space\n     * - auto (default) - distributes items dynamically according to the\n     * user interface idiom. In a horizontally compact environment (e.g. iPhone 5)\n     * this value defaults to `fill`, in a horizontally regular one (e.g. iPad)\n     * it defaults to center.\n     */\n    itemPositioning: PropTypes.oneOf(['fill', 'center', 'auto']),\n  };\n\n  render() {\n    return (\n      <RCTTabBar\n        style={[styles.tabGroup, this.props.style]}\n        unselectedTintColor={this.props.unselectedTintColor}\n        unselectedItemTintColor={this.props.unselectedItemTintColor}\n        tintColor={this.props.tintColor}\n        barTintColor={this.props.barTintColor}\n        itemPositioning={this.props.itemPositioning}\n        translucent={this.props.translucent !== false}>\n        {\n          // $FlowFixMe found when converting React.createClass to ES6\n          this.props.children}\n      </RCTTabBar>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  tabGroup: {\n    flex: 1,\n  }\n});\n\nvar RCTTabBar = requireNativeComponent('RCTTabBar', TabBarIOS);\n\nmodule.exports = TabBarIOS;\n"]}