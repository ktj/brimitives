{"version":3,"sources":["node_modules/react-native/Libraries/Lists/MetroListView.js"],"names":["ListView","require","React","RefreshControl","ScrollView","invariant","MetroListView","state","_computeState","props","ds","DataSource","rowHasChanged","itemA","itemB","sectionHeaderHasChanged","getSectionHeaderData","dataBlob","sectionID","sectionHeaderData","_captureRef","_renderFooter","_renderRow","_renderSectionHeader","_renderSeparator","params","Error","animated","offset","_listRef","scrollTo","horizontal","x","y","setNativeProps","newProps","setState","FooterComponent","sections","SeparatorComponent","ref","items","forEach","sectionIn","ii","data","cloneWithRowsAndSections","cloneWithRows","item","rowID","highlightRow","renderItem","index","section","renderSectionHeader","sID","rID","Component","defaultProps","keyExtractor","key","String","renderScrollComponent","onRefresh","refreshing","module","exports"],"mappings":"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","file":"MetroListView.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MetroListView\n * @flow\n * @format\n */\n'use strict';\n\nconst ListView = require('ListView');\nconst React = require('React');\nconst RefreshControl = require('RefreshControl');\nconst ScrollView = require('ScrollView');\n\nconst invariant = require('fbjs/lib/invariant');\n\ntype Item = any;\n\ntype NormalProps = {\n  FooterComponent?: ReactClass<*>,\n  renderItem: (info: Object) => ?React.Element<*>,\n  renderSectionHeader?: ({section: Object}) => ?React.Element<*>,\n  SeparatorComponent?: ?ReactClass<*>, // not supported yet\n\n  // Provide either `items` or `sections`\n  items?: ?Array<Item>, // By default, an Item is assumed to be {key: string}\n  // $FlowFixMe - Something is a little off with the type Array<Item>\n  sections?: ?Array<{key: string, data: Array<Item>}>,\n\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: boolean,\n  /**\n   * If true, renders items next to each other horizontally instead of stacked vertically.\n   */\n  horizontal?: ?boolean,\n};\ntype DefaultProps = {\n  keyExtractor: (item: Item, index: number) => string,\n};\n/* $FlowFixMe - the renderItem passed in from SectionList is optional there but\n * required here */\ntype Props = NormalProps & DefaultProps;\n\n/**\n * This is just a wrapper around the legacy ListView that matches the new API of FlatList, but with\n * some section support tacked on. It is recommended to just use FlatList directly, this component\n * is mostly for debugging and performance comparison.\n */\nclass MetroListView extends React.Component {\n  props: Props;\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    throw new Error('scrollToEnd not supported in legacy ListView.');\n  }\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewPosition?: number,\n  }) {\n    throw new Error('scrollToIndex not supported in legacy ListView.');\n  }\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    throw new Error('scrollToItem not supported in legacy ListView.');\n  }\n  scrollToLocation(params: {\n    animated?: ?boolean,\n    itemIndex: number,\n    sectionIndex: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    throw new Error('scrollToLocation not supported in legacy ListView.');\n  }\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    this._listRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n  getListRef() {\n    return this._listRef;\n  }\n  setNativeProps(props: Object) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  }\n  static defaultProps: DefaultProps = {\n    keyExtractor: (item, index) => item.key || String(index),\n    renderScrollComponent: (props: Props) => {\n      if (props.onRefresh) {\n        return (\n          <ScrollView\n            {...props}\n            refreshControl={\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={props.onRefresh}\n              />\n            }\n          />\n        );\n      } else {\n        return <ScrollView {...props} />;\n      }\n    },\n  };\n  state = this._computeState(this.props, {\n    ds: new ListView.DataSource({\n      rowHasChanged: (itemA, itemB) => true,\n      sectionHeaderHasChanged: () => true,\n      getSectionHeaderData: (dataBlob, sectionID) =>\n        this.state.sectionHeaderData[sectionID],\n    }),\n    sectionHeaderData: {},\n  });\n  componentWillReceiveProps(newProps: Props) {\n    this.setState(state => this._computeState(newProps, state));\n  }\n  render() {\n    return (\n      <ListView\n        {...this.props}\n        dataSource={this.state.ds}\n        ref={this._captureRef}\n        renderRow={this._renderRow}\n        renderFooter={this.props.FooterComponent && this._renderFooter}\n        renderSectionHeader={this.props.sections && this._renderSectionHeader}\n        renderSeparator={this.props.SeparatorComponent && this._renderSeparator}\n      />\n    );\n  }\n  _listRef: ListView;\n  _captureRef = ref => {\n    this._listRef = ref;\n  };\n  _computeState(props: Props, state) {\n    const sectionHeaderData = {};\n    if (props.sections) {\n      invariant(!props.items, 'Cannot have both sections and items props.');\n      const sections = {};\n      props.sections.forEach((sectionIn, ii) => {\n        const sectionID = 's' + ii;\n        sections[sectionID] = sectionIn.data;\n        sectionHeaderData[sectionID] = sectionIn;\n      });\n      return {\n        ds: state.ds.cloneWithRowsAndSections(sections),\n        sectionHeaderData,\n      };\n    } else {\n      invariant(!props.sections, 'Cannot have both sections and items props.');\n      return {\n        ds: state.ds.cloneWithRows(props.items),\n        sectionHeaderData,\n      };\n    }\n  }\n  _renderFooter = () => <this.props.FooterComponent key=\"$footer\" />;\n  _renderRow = (item, sectionID, rowID, highlightRow) => {\n    return this.props.renderItem({item, index: rowID});\n  };\n  _renderSectionHeader = (section, sectionID) => {\n    const {renderSectionHeader} = this.props;\n    invariant(\n      renderSectionHeader,\n      'Must provide renderSectionHeader with sections prop',\n    );\n    return renderSectionHeader({section});\n  };\n  _renderSeparator = (sID, rID) =>\n    <this.props.SeparatorComponent key={sID + rID} />;\n}\n\nmodule.exports = MetroListView;\n"]}