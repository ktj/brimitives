{"version":3,"sources":["node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js"],"names":["RCTActionSheetManager","require","ActionSheetManager","invariant","processColor","ActionSheetIOS","showActionSheetWithOptions","options","callback","tintColor","showShareActionSheetWithOptions","failureCallback","successCallback","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAIA,uBAAwBC,QAAQ,eAAR,EAAyBC,kBAArD;;AAEA,GAAIC,WAAYF,QAAQ,oBAAR,CAAhB;AACA,GAAIG,cAAeH,QAAQ,cAAR,CAAnB;;AAEA,GAAII,gBAAiB;;;;;;;;;;;AAWnBC,0BAXmB,qCAWQC,OAXR,CAWyBC,QAXzB,CAW6C;AAC9DL;AACE,MAAOI,QAAP,GAAmB,QAAnB,EAA+BA,UAAY,IAD7C;AAEE,gCAFF;;AAIAJ;AACE,MAAOK,SAAP,GAAoB,UADtB;AAEE,+BAFF;;AAIAR,sBAAsBM,0BAAtB;AACMC,OADN,EACeE,UAAWL,aAAaG,QAAQE,SAArB,CAD1B;AAEED,QAFF;;AAID,CAxBkB;;;;;;;;;;;;;;;;AAwCnBE,+BAxCmB;AAyCjBH,OAzCiB;AA0CjBI,eA1CiB;AA2CjBC,eA3CiB;AA4CjB;AACAT;AACE,MAAOI,QAAP,GAAmB,QAAnB,EAA+BA,UAAY,IAD7C;AAEE,gCAFF;;AAIAJ;AACE,MAAOQ,gBAAP,GAA2B,UAD7B;AAEE,sCAFF;;AAIAR;AACE,MAAOS,gBAAP,GAA2B,UAD7B;AAEE,sCAFF;;AAIAZ,sBAAsBU,+BAAtB;AACMH,OADN,EACeE,UAAWL,aAAaG,QAAQE,SAArB,CAD1B;AAEEE,eAFF;AAGEC,eAHF;;AAKD,CA9DkB,CAArB;;;AAiEAC,OAAOC,OAAP,CAAiBT,cAAjB,C,0GAtEIL,qB,gLAKAK,c","file":"ActionSheetIOS.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ActionSheetIOS\n * @flow\n */\n'use strict';\n\nvar RCTActionSheetManager = require('NativeModules').ActionSheetManager;\n\nvar invariant = require('fbjs/lib/invariant');\nvar processColor = require('processColor');\n\nvar ActionSheetIOS = {\n  /**\n   * Display an iOS action sheet. The `options` object must contain one or more\n   * of:\n   *\n   * - `options` (array of strings) - a list of button titles (required)\n   * - `cancelButtonIndex` (int) - index of cancel button in `options`\n   * - `destructiveButtonIndex` (int) - index of destructive button in `options`\n   * - `title` (string) - a title to show above the action sheet\n   * - `message` (string) - a message to show below the title\n   */\n  showActionSheetWithOptions(options: Object, callback: Function) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object'\n    );\n    invariant(\n      typeof callback === 'function',\n      'Must provide a valid callback'\n    );\n    RCTActionSheetManager.showActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      callback\n    );\n  },\n\n  /**\n   * Display the iOS share sheet. The `options` object should contain\n   * one or both of `message` and `url` and can additionally have\n   * a `subject` or `excludedActivityTypes`:\n   *\n   * - `url` (string) - a URL to share\n   * - `message` (string) - a message to share\n   * - `subject` (string) - a subject for the message\n   * - `excludedActivityTypes` (array) - the activities to exclude from the ActionSheet\n   *\n   * NOTE: if `url` points to a local file, or is a base64-encoded\n   * uri, the file it points to will be loaded and shared directly.\n   * In this way, you can share images, videos, PDF files, etc.\n   */\n  showShareActionSheetWithOptions(\n    options: Object,\n    failureCallback: Function,\n    successCallback: Function\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object'\n    );\n    invariant(\n      typeof failureCallback === 'function',\n      'Must provide a valid failureCallback'\n    );\n    invariant(\n      typeof successCallback === 'function',\n      'Must provide a valid successCallback'\n    );\n    RCTActionSheetManager.showShareActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      failureCallback,\n      successCallback\n    );\n  }\n};\n\nmodule.exports = ActionSheetIOS;\n"]}