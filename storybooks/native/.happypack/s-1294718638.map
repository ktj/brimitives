{"version":3,"sources":["node_modules/react-native/Libraries/Renderer/shims/PooledClass.js"],"names":["invariant","require","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"mappings":"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","file":"PooledClass.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n * @flow\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function(a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function<T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"]}