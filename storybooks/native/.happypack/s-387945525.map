{"version":3,"sources":["node_modules/react-native/Libraries/vendor/emitter/EventValidator.js"],"names":["EventValidator","addValidation","emitter","types","eventTypes","Object","keys","emitterWithValidation","create","emit","type","a","b","c","d","e","_","assertAllowsEventType","call","allowedTypes","indexOf","TypeError","errorMessageFor","message","__DEV__","recommendationFor","join","closestTypeRecommendation","closestTypeFor","isCloseEnough","typeRecommendations","map","typeRecommendationFor","bind","sort","recommendationSort","recomendedType","distance","damerauLevenshteinDistance","recommendationA","recommendationB","closestType","actualType","length","i","j","cost","charAt","Math","min","module","exports"],"mappings":"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","file":"EventValidator.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventValidator\n * @flow\n */\n'use strict';\n\n/**\n * EventValidator is designed to validate event types to make it easier to catch\n * common mistakes. It accepts a map of all of the different types of events\n * that the emitter can emit. Then, if a user attempts to emit an event that is\n * not one of those specified types the emitter will throw an error. Also, it\n * provides a relatively simple matcher so that if it thinks that you likely\n * mistyped the event name it will suggest what you might have meant to type in\n * the error message.\n */\nconst EventValidator = {\n  /**\n   * @param {Object} emitter - The object responsible for emitting the actual\n   *                             events\n   * @param {Object} types - The collection of valid types that will be used to\n   *                         check for errors\n   * @return {Object} A new emitter with event type validation\n   * @example\n   *   const types = {someEvent: true, anotherEvent: true};\n   *   const emitter = EventValidator.addValidation(emitter, types);\n   */\n  addValidation: function(emitter: Object, types: Object) {\n    const eventTypes = Object.keys(types);\n    const emitterWithValidation = Object.create(emitter);\n\n    Object.assign(emitterWithValidation, {\n      emit: function emit(type, a, b, c, d, e, _) {\n        assertAllowsEventType(type, eventTypes);\n        return emitter.emit.call(this, type, a, b, c, d, e, _);\n      }\n    });\n\n    return emitterWithValidation;\n  }\n};\n\nfunction assertAllowsEventType(type, allowedTypes) {\n  if (allowedTypes.indexOf(type) === -1) {\n    throw new TypeError(errorMessageFor(type, allowedTypes));\n  }\n}\n\nfunction errorMessageFor(type, allowedTypes) {\n  let message = 'Unknown event type \"' + type + '\". ';\n  if (__DEV__) {\n    message += recommendationFor(type, allowedTypes);\n  }\n  message += 'Known event types: ' + allowedTypes.join(', ') + '.';\n  return message;\n}\n\n// Allow for good error messages\nif (__DEV__) {\n  var recommendationFor = function (type, allowedTypes) {\n    const closestTypeRecommendation = closestTypeFor(type, allowedTypes);\n    if (isCloseEnough(closestTypeRecommendation, type)) {\n      return 'Did you mean \"' + closestTypeRecommendation.type + '\"? ';\n    } else {\n      return '';\n    }\n  };\n\n  var closestTypeFor = function (type, allowedTypes) {\n    const typeRecommendations = allowedTypes.map(\n      typeRecommendationFor.bind(this, type)\n    );\n    return typeRecommendations.sort(recommendationSort)[0];\n  };\n\n  var typeRecommendationFor = function (type, recomendedType) {\n    return {\n      type: recomendedType,\n      distance: damerauLevenshteinDistance(type, recomendedType)\n    };\n  };\n\n  var recommendationSort = function (recommendationA, recommendationB) {\n    if (recommendationA.distance < recommendationB.distance) {\n      return -1;\n    } else if (recommendationA.distance > recommendationB.distance) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  var isCloseEnough = function (closestType, actualType) {\n    return (closestType.distance / actualType.length) < 0.334;\n  };\n\n  var damerauLevenshteinDistance = function (a, b) {\n    let i, j;\n    const d = [];\n\n    for (i = 0; i <= a.length; i++) {\n      d[i] = [i];\n    }\n\n    for (j = 1; j <= b.length; j++) {\n      d[0][j] = j;\n    }\n\n    for (i = 1; i <= a.length; i++) {\n      for (j = 1; j <= b.length; j++) {\n        const cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;\n\n        d[i][j] = Math.min(\n          d[i - 1][j] + 1,\n          d[i][j - 1] + 1,\n          d[i - 1][j - 1] + cost\n        );\n\n        if (i > 1 && j > 1 &&\n            a.charAt(i - 1) === b.charAt(j - 2) &&\n            a.charAt(i - 2) === b.charAt(j - 1)) {\n          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n        }\n      }\n    }\n\n    return d[a.length][b.length];\n  };\n}\n\nmodule.exports = EventValidator;\n"]}