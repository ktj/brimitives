{"version":3,"sources":["node_modules/haul/src/hot/client/importScriptsPolyfill.js"],"names":["global","importScripts","fetch","importPath","then","response","text","eval","body"],"mappings":";;;;;;;;;;;;;;;AAeAA,OAAOC,aAAP;AACED,OAAOC,aAAP;AACC;AACCC,MAAMC,UAAN,EAAkBC,IAAlB,CAAuB,yBAAYC,UAASC,IAAT,EAAZ,EAAvB,EAAoDF,IAApD,CAAyD,cAAQ;;AAE/DG,KAAKC,IAAL;AACD,CAHD,CADD,GAFH,C","file":"importScriptsPolyfill.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright 2017-present, Callstack.\n * All rights reserved.\n * \n * @flow\n */\n\n/**\n * When setting `target` to `webworker` in webpack config, it will change template for downloading\n * hot update and will use `importScripts` which are available in WebWorkers, so we need to\n * provide implementation for it.\n * \n * Native `importScripts` is synchronous, however we can't do that, so this polyfill\n * is async and returns a Promise.\n */\nglobal.importScripts =\n  global.importScripts ||\n  (importPath =>\n    fetch(importPath).then(response => response.text()).then(body => {\n      // eslint-disable-next-line no-eval\n      eval(body);\n    }));\n"]}