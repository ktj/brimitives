{"version":3,"sources":["node_modules/react-native/Libraries/RCTTest/SnapshotViewIOS.ios.js"],"names":["React","require","PropTypes","StyleSheet","TestModule","UIManager","View","ViewPropTypes","requireNativeComponent","SnapshotViewIOS","onDefaultAction","event","verifySnapshot","markTestPassed","testIdentifier","props","onSnapshotReady","style","snapshot","Component","propTypes","func","string","create","flex","RCTSnapshot","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAIA,OAAQC,QAAQ,OAAR,CAAZ;AACA,GAAMC,WAAYD,QAAQ,YAAR,CAAlB;AACA,GAAIE,YAAaF,QAAQ,YAAR,CAAjB,C;AACqBA,QAAQ,eAAR,C,CAAfG,U,UAAAA,U;AACN,GAAIC,WAAYJ,QAAQ,WAAR,CAAhB;AACA,GAAIK,MAAOL,QAAQ,MAAR,CAAX;;AAEA,GAAMM,eAAgBN,QAAQ,eAAR,CAAtB;;AAEA,GAAIO,wBAAyBP,QAAQ,wBAAR,CAA7B,C;;AAEMQ,e;;;;;;;;;;;;;;;AAeJC,e,0cAAmBC,K,CAAkB;AACnCP,WAAWQ,cAAX,CAA0BR,WAAWS,cAArC;AACD,C;;AAEQ;AACP,GAAIC,gBAAiB,KAAKC,KAAL,CAAWD,cAAX,EAA6B,MAAlD;AACA,GAAIE,iBAAkB,KAAKD,KAAL,CAAWC,eAAX,EAA8B,KAAKN,eAAzD;AACA;AACE,oBAAC,WAAD;AACE,MAAOO,MAAMC,QADf;AAEM,KAAKH,KAFX;AAGE,gBAAiBC,eAHnB;AAIE,eAAgBF,cAJlB,kDADF;;;AAQD,C,6BA9B2Bd,MAAMmB,S,SAO3BC,S,aACFb,a,EAEHS,gBAAkBd,UAAUmB,I,CAE5BP,eAAiBZ,UAAUoB,M;;;AAqB/B,GAAIL,OAAQd,WAAWoB,MAAX,CAAkB;AAC5BL,SAAU;AACRM,KAAM,CADE,CADkB,CAAlB,CAAZ;;;;;;;AASA,GAAIC,aAAcpB,UAAUoB,WAAV;AAChBjB,uBAAuB,aAAvB,CAAsCC,eAAtC,CADgB;AAEhBH,IAFF;;AAIAoB,OAAOC,OAAP,CAAiBlB,eAAjB,C,2GA9CMA,e,wKAiCFQ,K,8JASAQ,W","file":"SnapshotViewIOS.ios.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SnapshotViewIOS\n * @flow\n */\n'use strict';\n\nvar React = require('React');\nconst PropTypes = require('prop-types');\nvar StyleSheet = require('StyleSheet');\nvar { TestModule } = require('NativeModules');\nvar UIManager = require('UIManager');\nvar View = require('View');\n\nconst ViewPropTypes = require('ViewPropTypes');\n\nvar requireNativeComponent = require('requireNativeComponent');\n\nclass SnapshotViewIOS extends React.Component {\n  props: {\n    onSnapshotReady?: Function,\n    testIdentifier?: string,\n  };\n\n  // $FlowFixMe(>=0.41.0)\n  static propTypes = {\n    ...ViewPropTypes,\n    // A callback when the Snapshot view is ready to be compared\n    onSnapshotReady : PropTypes.func,\n    // A name to identify the individual instance to the SnapshotView\n    testIdentifier : PropTypes.string,\n  };\n\n  onDefaultAction = (event: Object) => {\n    TestModule.verifySnapshot(TestModule.markTestPassed);\n  };\n\n  render() {\n    var testIdentifier = this.props.testIdentifier || 'test';\n    var onSnapshotReady = this.props.onSnapshotReady || this.onDefaultAction;\n    return (\n      <RCTSnapshot\n        style={style.snapshot}\n        {...this.props}\n        onSnapshotReady={onSnapshotReady}\n        testIdentifier={testIdentifier}\n      />\n    );\n  }\n}\n\nvar style = StyleSheet.create({\n  snapshot: {\n    flex: 1,\n  },\n});\n\n// Verify that RCTSnapshot is part of the UIManager since it is only loaded\n// if you have linked against RCTTest like in tests, otherwise we will have\n// a warning printed out\nvar RCTSnapshot = UIManager.RCTSnapshot ?\n  requireNativeComponent('RCTSnapshot', SnapshotViewIOS) :\n  View;\n\nmodule.exports = SnapshotViewIOS;\n"]}