{"version":3,"sources":["node_modules/react-native/Libraries/Vibration/Vibration.js"],"names":["RCTVibration","require","Vibration","Platform","_vibrating","_id","vibrateByPattern","pattern","repeat","vibrate","slice","length","setTimeout","vibrateScheduler","id","nextIndex","OS","Array","isArray","Error","cancel","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAIA,cAAeC,QAAQ,eAAR,EAAyBC,SAA5C;AACA,GAAIC,UAAWF,QAAQ,UAAR,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,GAAIG,YAAsB,KAA1B;AACA,GAAIC,KAAc,CAAlB;;AAEA,QAASC,iBAAT,CAA0BC,OAA1B,CAA2E,IAAzBC,OAAyB,2DAAP,KAAO;AACzE,GAAIJ,UAAJ,CAAgB;AACd;AACD;AACDA,WAAa,IAAb;AACA,GAAIG,QAAQ,CAAR,IAAe,CAAnB,CAAsB;AACpBP,aAAaS,OAAb;AACAF,QAAUA,QAAQG,KAAR,CAAc,CAAd,CAAV;AACD;AACD,GAAIH,QAAQI,MAAR,GAAmB,CAAvB,CAA0B;AACxBP,WAAa,KAAb;AACA;AACD;AACDQ,WAAW,iBAAMC,kBAAiB,EAAER,GAAnB,CAAwBE,OAAxB,CAAiCC,MAAjC,CAAyC,CAAzC,CAAN,EAAX,CAA8DD,QAAQ,CAAR,CAA9D;AACD;;AAED,QAASM,iBAAT,CAA0BC,EAA1B,CAA8BP,OAA9B,CAAsDC,MAAtD,CAAuEO,SAAvE,CAA0F;AACxF,GAAI,CAACX,UAAD,EAAeU,KAAOT,GAA1B,CAA+B;AAC7B;AACD;AACDL,aAAaS,OAAb;AACA,GAAIM,WAAaR,QAAQI,MAAzB,CAAiC;AAC/B,GAAIH,MAAJ,CAAY;AACVO,UAAY,CAAZ;AACD,CAFD,IAEO;AACLX,WAAa,KAAb;AACA;AACD;AACF;AACDQ,WAAW,iBAAMC,kBAAiBC,EAAjB,CAAqBP,OAArB,CAA8BC,MAA9B,CAAsCO,UAAU,CAAhD,CAAN,EAAX,CAAqER,QAAQQ,SAAR,CAArE;AACD;;AAED,GAAIb,WAAY;AACdO,QAAS,kBAAyE,IAAhEF,QAAgE,2DAA9B,GAA8B,IAAzBC,OAAyB,2DAAP,KAAO;AAChF,GAAIL,SAASa,EAAT,GAAgB,SAApB,CAA+B;AAC7B,GAAI,MAAOT,QAAP,GAAmB,QAAvB,CAAiC;AAC/BP,aAAaS,OAAb,CAAqBF,OAArB;AACD,CAFD,IAEO,IAAIU,MAAMC,OAAN,CAAcX,OAAd,CAAJ,CAA4B;AACjCP,aAAaM,gBAAb,CAA8BC,OAA9B,CAAuCC,OAAS,CAAT,CAAa,CAAC,CAArD;AACD,CAFM,IAEA;AACL,KAAM,IAAIW,MAAJ,CAAU,+CAAV,CAAN;AACD;AACF,CARD,IAQO;AACL,GAAIf,UAAJ,CAAgB;AACd;AACD;AACD,GAAI,MAAOG,QAAP,GAAmB,QAAvB,CAAiC;AAC/BP,aAAaS,OAAb;AACD,CAFD,IAEO,IAAIQ,MAAMC,OAAN,CAAcX,OAAd,CAAJ,CAA4B;AACjCD,iBAAiBC,OAAjB,CAA0BC,MAA1B;AACD,CAFM,IAEA;AACL,KAAM,IAAIW,MAAJ,CAAU,+CAAV,CAAN;AACD;AACF;AACF,CAtBa;;;;AA0BdC,OAAQ,iBAAW;AACjB,GAAIjB,SAASa,EAAT,GAAgB,KAApB,CAA2B;AACzBZ,WAAa,KAAb;AACD,CAFD,IAEO;AACLJ,aAAaoB,MAAb;AACD;AACF,CAhCa,CAAhB;;;AAmCAC,OAAOC,OAAP,CAAiBpB,SAAjB,C,0GAjGIF,Y,6JA2BAI,U,2JACAC,G,oJAEKC,gB,iKAgBAO,gB,iKAgBLX,S","file":"Vibration.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Vibration\n * @flow\n */\n'use strict';\n\nvar RCTVibration = require('NativeModules').Vibration;\nvar Platform = require('Platform');\n\n/**\n * The Vibration API is exposed at `Vibration.vibrate()`.\n * The vibration is asynchronous so this method will return immediately.\n *\n * There will be no effect on devices that do not support Vibration, eg. the simulator.\n *\n * **Note for android**\n * add `<uses-permission android:name=\"android.permission.VIBRATE\"/>` to `AndroidManifest.xml`\n *\n * **Android Usage:**\n *\n * [0, 500, 200, 500]\n * V(0.5s) --wait(0.2s)--> V(0.5s)\n *\n * [300, 500, 200, 500]\n * --wait(0.3s)--> V(0.5s) --wait(0.2s)--> V(0.5s)\n *\n * **iOS Usage:**\n * if first argument is 0, it will not be included in pattern array.\n *\n * [0, 1000, 2000, 3000]\n * V(fixed) --wait(1s)--> V(fixed) --wait(2s)--> V(fixed) --wait(3s)--> V(fixed)\n */\n\nvar _vibrating: boolean = false;\nvar _id: number = 0; // _id is necessary to prevent race condition.\n\nfunction vibrateByPattern(pattern: Array<number>, repeat: boolean = false) {\n  if (_vibrating) {\n    return;\n  }\n  _vibrating = true;\n  if (pattern[0] === 0) {\n    RCTVibration.vibrate();\n    pattern = pattern.slice(1);\n  }\n  if (pattern.length === 0) {\n    _vibrating = false;\n    return;\n  }\n  setTimeout(() => vibrateScheduler(++_id, pattern, repeat, 1), pattern[0]);\n}\n\nfunction vibrateScheduler(id, pattern: Array<number>, repeat: boolean, nextIndex: number) {\n  if (!_vibrating || id !== _id) {\n    return;\n  }\n  RCTVibration.vibrate();\n  if (nextIndex >= pattern.length) {\n    if (repeat) {\n      nextIndex = 0;\n    } else {\n      _vibrating = false;\n      return;\n    }\n  }\n  setTimeout(() => vibrateScheduler(id, pattern, repeat, nextIndex+1), pattern[nextIndex]);\n}\n\nvar Vibration = {\n  vibrate: function(pattern: number | Array<number> = 400, repeat: boolean = false) {\n    if (Platform.OS === 'android') {\n      if (typeof pattern === 'number') {\n        RCTVibration.vibrate(pattern);\n      } else if (Array.isArray(pattern)) {\n        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    } else {\n      if (_vibrating) {\n        return;\n      }\n      if (typeof pattern === 'number') {\n        RCTVibration.vibrate();\n      } else if (Array.isArray(pattern)) {\n        vibrateByPattern(pattern, repeat);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    }\n  },\n  /**\n   * Stop vibration\n   */\n  cancel: function() {\n    if (Platform.OS === 'ios') {\n      _vibrating = false;\n    } else {\n      RCTVibration.cancel();\n    }\n  }\n};\n\nmodule.exports = Vibration;\n"]}