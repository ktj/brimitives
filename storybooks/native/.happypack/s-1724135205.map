{"version":3,"sources":["node_modules/react-native/Libraries/EventEmitter/MissingNativeEventEmitterShim.js"],"names":["EmitterSubscription","require","EventEmitter","invariant","MissingNativeEventEmitterShim","nativeModuleName","nativeEventEmitterName","isAvailable","_nativeModuleName","_nativeEventEmitterName","eventType","listener","context","throwMissingNativeModule","subscription","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAMA,qBAAsBC,QAAQ,qBAAR,CAA5B;AACA,GAAMC,cAAeD,QAAQ,cAAR,CAArB;;AAEA,GAAME,WAAYF,QAAQ,oBAAR,CAAlB,C;;AAEMG,6B;;;;;AAKJ,uCAAYC,gBAAZ,CAAsCC,sBAAtC,CAAsE;AAC9D,IAD8D,SAJtEC,WAIsE,CAJ/C,KAI+C;AAEpE,MAAKC,iBAAL,CAAyBH,gBAAzB;AACA,MAAKI,uBAAL,CAA+BH,sBAA/B,CAHoE;AAIrE,C;;AAE0B;AACzBH;AACE,KADF;AAEE,gBAAe,KAAKM,uBAApB;AACW,KAAKD,iBADhB;AAEgC,KAAKC,uBAFrC;AAGA,6BALF;;AAOD,C;;;AAGWC,S,CAAmBC,Q,CAAoBC,O,CAAuC;AACxF,KAAKC,wBAAL;AACD,C;;AAEkBH,S,CAAmB;AACpC,KAAKG,wBAAL;AACD,C;;AAEkBC,Y,CAAmC;AACpD,KAAKD,wBAAL;AACD,C,2CAhCyCX,Y;;;AAmC5Ca,OAAOC,OAAP,CAAiBZ,6BAAjB,C,0GAnCMA,6B","file":"MissingNativeEventEmitterShim.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MissingNativeEventEmitterShim\n * @flow\n */\n'use strict';\n\nconst EmitterSubscription = require('EmitterSubscription');\nconst EventEmitter = require('EventEmitter');\n\nconst invariant = require('fbjs/lib/invariant');\n\nclass MissingNativeEventEmitterShim extends EventEmitter {\n  isAvailable: boolean = false;\n  _nativeModuleName: string;\n  _nativeEventEmitterName: string;\n\n  constructor(nativeModuleName: string, nativeEventEmitterName: string) {\n    super(null);\n    this._nativeModuleName = nativeModuleName;\n    this._nativeEventEmitterName = nativeEventEmitterName;\n  }\n\n  throwMissingNativeModule() {\n    invariant(\n      false,\n      `Cannot use '${this._nativeEventEmitterName}' module when ` +\n      `native '${this._nativeModuleName}' is not included in the build. ` +\n      `Either include it, or check '${this._nativeEventEmitterName}'.isAvailable ` +\n      'before calling any methods.'\n    );\n  }\n\n  // EventEmitter\n  addListener(eventType: string, listener: Function, context: ?Object): EmitterSubscription {\n    this.throwMissingNativeModule();\n  }\n\n  removeAllListeners(eventType: string) {\n    this.throwMissingNativeModule();\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    this.throwMissingNativeModule();\n  }\n}\n\nmodule.exports = MissingNativeEventEmitterShim;\n"]}