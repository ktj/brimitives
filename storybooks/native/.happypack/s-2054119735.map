{"version":3,"sources":["node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js"],"names":["ReactPropTypes","require","deprecatedPropType","TransformMatrixPropType","props","propName","componentName","Error","DecomposedMatrixPropType","TransformPropTypes","transform","arrayOf","oneOfType","shape","perspective","number","rotate","string","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateX","translateY","skewX","skewY","transformMatrix","decomposedMatrix","rotation","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAIA,gBAAiBC,QAAQ,YAAR,CAArB;;AAEA,GAAIC,oBAAqBD,QAAQ,oBAAR,CAAzB;;AAEA,GAAIE,yBAA0B,QAA1BA,wBAA0B;AAC5BC,KAD4B;AAE5BC,QAF4B;AAG5BC,aAH4B;AAInB;AACT,GAAIF,MAAMC,QAAN,CAAJ,CAAqB;AACnB,MAAO,IAAIE,MAAJ;AACL;AACA,6CAFK,CAAP;;AAID;AACF,CAXD;;AAaA,GAAIC,0BAA2B,QAA3BA,yBAA2B;AAC7BJ,KAD6B;AAE7BC,QAF6B;AAG7BC,aAH6B;AAIpB;AACT,GAAIF,MAAMC,QAAN,CAAJ,CAAqB;AACnB,MAAO,IAAIE,MAAJ;AACL;AACA,iCAFK,CAAP;;AAID;AACF,CAXD;;AAaA,GAAIE,oBAAqB;;;;;;;;;;;;;;;;;AAiBvBC,UAAWV,eAAeW,OAAf;AACTX,eAAeY,SAAf,CAAyB;AACvBZ,eAAea,KAAf,CAAqB,CAACC,YAAad,eAAee,MAA7B,CAArB,CADuB;AAEvBf,eAAea,KAAf,CAAqB,CAACG,OAAQhB,eAAeiB,MAAxB,CAArB,CAFuB;AAGvBjB,eAAea,KAAf,CAAqB,CAACK,QAASlB,eAAeiB,MAAzB,CAArB,CAHuB;AAIvBjB,eAAea,KAAf,CAAqB,CAACM,QAASnB,eAAeiB,MAAzB,CAArB,CAJuB;AAKvBjB,eAAea,KAAf,CAAqB,CAACO,QAASpB,eAAeiB,MAAzB,CAArB,CALuB;AAMvBjB,eAAea,KAAf,CAAqB,CAACQ,MAAOrB,eAAee,MAAvB,CAArB,CANuB;AAOvBf,eAAea,KAAf,CAAqB,CAACS,OAAQtB,eAAee,MAAxB,CAArB,CAPuB;AAQvBf,eAAea,KAAf,CAAqB,CAACU,OAAQvB,eAAee,MAAxB,CAArB,CARuB;AASvBf,eAAea,KAAf,CAAqB,CAACW,WAAYxB,eAAee,MAA5B,CAArB,CATuB;AAUvBf,eAAea,KAAf,CAAqB,CAACY,WAAYzB,eAAee,MAA5B,CAArB,CAVuB;AAWvBf,eAAea,KAAf,CAAqB,CAACa,MAAO1B,eAAeiB,MAAvB,CAArB,CAXuB;AAYvBjB,eAAea,KAAf,CAAqB,CAACc,MAAO3B,eAAeiB,MAAvB,CAArB,CAZuB,CAAzB,CADS,CAjBY;;;;;;;AAqCvBW,gBAAiBzB,uBArCM;;;;AAyCvB0B,iBAAkBrB,wBAzCK;;;AA4CvBc,OAAQpB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA5Ce;AA6CvBQ,OAAQrB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA7Ce;AA8CvBe,SAAU5B,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA9Ca;AA+CvBS,WAAYtB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA/CW;AAgDvBU,WAAYvB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CAhDW,CAAzB;;;AAmDAgB,OAAOC,OAAP,CAAiBvB,kBAAjB,C,0GA7EIN,uB,kLAaAK,wB,mLAaAC,kB","file":"TransformPropTypes.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TransformPropTypes\n * @flow\n */\n'use strict';\n\nvar ReactPropTypes = require('prop-types');\n\nvar deprecatedPropType = require('deprecatedPropType');\n\nvar TransformMatrixPropType = function(\n  props : Object,\n  propName : string,\n  componentName : string\n) : ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The transformMatrix style property is deprecated. ' +\n      'Use `transform: [{ matrix: ... }]` instead.'\n    );\n  }\n};\n\nvar DecomposedMatrixPropType = function(\n  props : Object,\n  propName : string,\n  componentName : string\n) : ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The decomposedMatrix style property is deprecated. ' +\n      'Use `transform: [...]` instead.'\n    );\n  }\n};\n\nvar TransformPropTypes = {\n  /**\n   * `transform` accepts an array of transformation objects. Each object specifies\n   * the property that will be transformed as the key, and the value to use in the\n   * transformation. Objects should not be combined. Use a single key/value pair\n   * per object.\n   *\n   * The rotate transformations require a string so that the transform may be\n   * expressed in degrees (deg) or radians (rad). For example:\n   *\n   * `transform([{ rotateX: '45deg' }, { rotateZ: '0.785398rad' }])`\n   *\n   * The skew transformations require a string so that the transform may be\n   * expressed in degrees (deg). For example:\n   *\n   * `transform([{ skewX: '45deg' }])`\n   */\n  transform: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOfType([\n      ReactPropTypes.shape({perspective: ReactPropTypes.number}),\n      ReactPropTypes.shape({rotate: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateX: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateY: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateZ: ReactPropTypes.string}),\n      ReactPropTypes.shape({scale: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleX: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleY: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateX: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateY: ReactPropTypes.number}),\n      ReactPropTypes.shape({skewX: ReactPropTypes.string}),\n      ReactPropTypes.shape({skewY: ReactPropTypes.string})\n    ])\n  ),\n\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  transformMatrix: TransformMatrixPropType,\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  decomposedMatrix: DecomposedMatrixPropType,\n\n  /* Deprecated transform props used on Android only */\n  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n};\n\nmodule.exports = TransformPropTypes;\n"]}