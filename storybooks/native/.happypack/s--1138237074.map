{"version":3,"sources":["node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js"],"names":["parseErrorStack","e","stack","stacktraceParser","require","Array","isArray","parse","framesToPop","shift","module","exports"],"mappings":";;;;;;;;;;;AAWA;;;;;;;;;;;;;AAaA,QAASA,gBAAT,CAAyBC,CAAzB,CAA8D;AAC5D,GAAI,CAACA,CAAD,EAAM,CAACA,EAAEC,KAAb,CAAoB;AAClB,MAAO,EAAP;AACD;;AAED,GAAMC,kBAAmBC,QAAQ,mBAAR,CAAzB;AACA,GAAMF,OAAQG,MAAMC,OAAN,CAAcL,EAAEC,KAAhB,EAAyBD,EAAEC,KAA3B,CAAmCC,iBAAiBI,KAAjB,CAAuBN,EAAEC,KAAzB,CAAjD;;AAEA,GAAIM,aAAc,MAAOP,GAAEO,WAAT,GAAyB,QAAzB,CAAoCP,EAAEO,WAAtC,CAAoD,CAAtE;AACA,MAAOA,aAAP,CAAsB;AACpBN,MAAMO,KAAN;AACD;AACD,MAAOP,MAAP;AACD;;AAEDQ,OAAOC,OAAP,CAAiBX,eAAjB,C,0GAfSA,e","file":"parseErrorStack.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule parseErrorStack\n * @flow\n */\n'use strict';\n\nexport type StackFrame = {\n  column: ?number,\n  file: string,\n  lineNumber: number,\n  methodName: string,\n};\n\nexport type ExtendedError = Error & {\n  framesToPop?: number,\n};\n\nfunction parseErrorStack(e: ExtendedError): Array<StackFrame> {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  const stacktraceParser = require('stacktrace-parser');\n  const stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);\n\n  let framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;\n  while (framesToPop--) {\n    stack.shift();\n  }\n  return stack;\n}\n\nmodule.exports = parseErrorStack;\n"]}