{"version":3,"sources":["node_modules/haul/vendor/polyfills/Number.es6.js"],"names":["Number","EPSILON","undefined","Object","defineProperty","value","Math","pow","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isNaN","globalIsNaN","global","configurable","enumerable","writable"],"mappings":";;;;;;;;;;;;;AAaA,GAAIA,OAAOC,OAAP,GAAmBC,SAAvB,CAAkC;AAChCC,OAAOC,cAAP,CAAsBJ,MAAtB,CAA8B,SAA9B,CAAyC;AACvCK,MAAOC,KAAKC,GAAL,CAAS,CAAT,CAAY,CAAC,EAAb,CADgC,CAAzC;;AAGD;AACD,GAAIP,OAAOQ,gBAAP,GAA4BN,SAAhC,CAA2C;AACzCC,OAAOC,cAAP,CAAsBJ,MAAtB,CAA8B,kBAA9B,CAAkD;AAChDK,MAAOC,KAAKC,GAAL,CAAS,CAAT,CAAY,EAAZ,EAAkB,CADuB,CAAlD;;AAGD;AACD,GAAIP,OAAOS,gBAAP,GAA4BP,SAAhC,CAA2C;AACzCC,OAAOC,cAAP,CAAsBJ,MAAtB,CAA8B,kBAA9B,CAAkD;AAChDK,MAAO,EAAEC,KAAKC,GAAL,CAAS,CAAT,CAAY,EAAZ,EAAkB,CAApB,CADyC,CAAlD;;AAGD;AACD,GAAI,CAACP,OAAOU,KAAZ,CAAmB;;;AAGjB,GAAMC,aAAcC,OAAOF,KAA3B;AACAP,OAAOC,cAAP,CAAsBJ,MAAtB,CAA8B,OAA9B,CAAuC;AACrCa,aAAc,IADuB;AAErCC,WAAY,KAFyB;AAGrCT,MAAO,QAASK,MAAT,CAAeL,KAAf,CAAsB;AAC3B,MAAO,OAAOA,MAAP,GAAiB,QAAjB,EAA6BM,YAAYN,KAAZ,CAApC;AACD,CALoC;AAMrCU,SAAU,IAN2B,CAAvC;;AAQD,C","file":"Number.es6.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @polyfill\n */\n\n/* eslint-disable strict */\n\nif (Number.EPSILON === undefined) {\n  Object.defineProperty(Number, 'EPSILON', {\n    value: Math.pow(2, -52),\n  });\n}\nif (Number.MAX_SAFE_INTEGER === undefined) {\n  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {\n    value: Math.pow(2, 53) - 1,\n  });\n}\nif (Number.MIN_SAFE_INTEGER === undefined) {\n  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {\n    value: -(Math.pow(2, 53) - 1),\n  });\n}\nif (!Number.isNaN) {\n  // eslint-disable-next-line max-len\n  // https://github.com/dherman/tc39-codex-wiki/blob/master/data/es6/number/index.md#polyfill-for-numberisnan\n  const globalIsNaN = global.isNaN;\n  Object.defineProperty(Number, 'isNaN', {\n    configurable: true,\n    enumerable: false,\n    value: function isNaN(value) {\n      return typeof value === 'number' && globalIsNaN(value);\n    },\n    writable: true,\n  });\n}\n"]}