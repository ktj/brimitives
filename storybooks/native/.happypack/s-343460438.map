{"version":3,"sources":["node_modules/react-native/Libraries/Promise.js"],"names":["Promise","require","__DEV__","enable","allRejections","onUnhandled","id","error","message","stack","stringValue","Object","prototype","toString","call","Error","warning","console","warn","onHandled","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAMA,SAAUC,QAAQ,yBAAR,CAAhB;;AAEA,GAAIC,OAAJ,CAAa;AACXD,QAAQ,yCAAR,EAAmDE,MAAnD,CAA0D;AACxDC,cAAe,IADyC;AAExDC,YAAa,qBAACC,EAAD,CAAoB,IAAfC,MAAe,2DAAP,EAAO;AAC/B,GAAIC,eAAJ;AACA,GAAIC,aAAJ;;AAEA,GAAMC,aAAcC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,KAA/B,CAApB;AACA,GAAIG,cAAgB,gBAApB,CAAsC;AACpCF,QAAUO,MAAMH,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BP,KAA9B,CAAV;AACAE,MAAQF,MAAME,KAAd;AACD,CAHD,IAGO;AACLD,QAAUP,QAAQ,eAAR,EAAyBM,KAAzB,CAAV;AACD;;AAED,GAAMS;AACJ,6CAA6CV,EAA7C;AACGE,OADH;AAECC,OAAS,IAAT,CAAgB,EAAhB,CAAqBA,KAFtB,CADF;AAIAQ,QAAQC,IAAR,CAAaF,OAAb;AACD,CAnBuD;AAoBxDG,UAAW,mBAACb,EAAD,CAAQ;AACjB,GAAMU;AACJ,kCAAkCV,EAAlC;AACA,8DADA;AAE8CA,EAF9C,OADF;AAIAW,QAAQC,IAAR,CAAaF,OAAb;AACD,CA1BuD,CAA1D;;AA4BD;;AAEDI,OAAOC,OAAP,CAAiBrB,OAAjB,C","file":"Promise.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Promise\n * @flow\n */\n'use strict';\n\nconst Promise = require('fbjs/lib/Promise.native');\n\nif (__DEV__) {\n  require('promise/setimmediate/rejection-tracking').enable({\n    allRejections: true,\n    onUnhandled: (id, error = {}) => {\n      let message: string;\n      let stack: ?string;\n\n      const stringValue = Object.prototype.toString.call(error);\n      if (stringValue === '[object Error]') {\n        message = Error.prototype.toString.call(error);\n        stack = error.stack;\n      } else {\n        message = require('pretty-format')(error);\n      }\n\n      const warning =\n        `Possible Unhandled Promise Rejection (id: ${id}):\\n` +\n        `${message}\\n` +\n        (stack == null ? '' : stack);\n      console.warn(warning);\n    },\n    onHandled: (id) => {\n      const warning =\n        `Promise Rejection Handled (id: ${id})\\n` +\n        'This means you can ignore any previous messages of the form ' +\n        `\"Possible Unhandled Promise Rejection (id: ${id}):\"`;\n      console.warn(warning);\n    },\n  });\n}\n\nmodule.exports = Promise;\n"]}