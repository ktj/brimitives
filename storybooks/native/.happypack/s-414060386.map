{"version":3,"sources":["node_modules/react-native/Libraries/Utilities/logError.js"],"names":["logError","args","length","Error","err","console","error","message","stack","apply","module","exports"],"mappings":";;;;;;;;;;;AAWA;;;;;;;AAOA,GAAIA,UAAW,QAAXA,SAAW,EAAyC,+BAA7BC,IAA6B,sCAA7BA,IAA6B;AACtD,GAAIA,KAAKC,MAAL,GAAgB,CAAhB,EAAqBD,KAAK,CAAL,WAAmBE,MAA5C,CAAmD;AACjD,GAAIC,KAAMH,KAAK,CAAL,CAAV;AACAI,QAAQC,KAAR,CAAc,WAAaF,IAAIG,OAAjB,CAA2B,cAA3B,CAA4CH,IAAII,KAA9D;AACD,CAHD,IAGO;AACLH,QAAQC,KAAR,CAAcG,KAAd,CAAoBJ,OAApB,CAA6BJ,IAA7B;AACD;AACF,CAPD;;AASAS,OAAOC,OAAP,CAAiBX,QAAjB,C,0GATIA,Q","file":"logError.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule logError\n * @flow\n */\n'use strict';\n\n/**\n * Small utility that can be used as an error handler. You cannot just pass\n * `console.error` as a failure callback - it's not properly bound.  If passes an\n * `Error` object, it will print the message and stack.\n */\nvar logError = function(...args: $ReadOnlyArray<mixed>) {\n  if (args.length === 1 && args[0] instanceof Error) {\n    var err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\nmodule.exports = logError;\n"]}