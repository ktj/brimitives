{"version":3,"sources":["node_modules/react-native/Libraries/ReactNative/YellowBox.js"],"names":["EventEmitter","require","Platform","React","StyleSheet","infoLog","openFileInEditor","parseErrorStack","symbolicateStackTrace","_warningEmitter","_warningMap","Map","IGNORED_WARNINGS","__DEV__","console","error","warn","apply","arguments","startsWith","updateWarningMap","isTesting","disableYellowBox","sprintf","format","args","index","replace","stringifySafe","String","argCount","match","length","warning","slice","map","join","warningInfo","get","count","Error","framesToPop","set","stacktrace","symbolicated","emit","ensureSymbolicatedWarning","prevWarningInfo","then","nextWarningInfo","stack","isWarningIgnored","isIgnored","some","ignoredWarning","Array","isArray","ignoredYellowBox","ignorePrefix","WarningRow","onPress","Text","TouchableHighlight","View","countText","styles","listRowCount","listRow","listRowContent","listRowText","StackRow","frame","file","lineNumber","fileName","fileParts","split","openInEditorButton","bind","inspectorCountText","WarningInspector","stacktraceVisible","onDismiss","onDismissAll","onMinimize","toggleStacktrace","ScrollView","countSentence","stacktraceList","ii","inspector","inspectorCount","inspectorButtonText","inspectorWarning","inspectorWarningText","inspectorButtons","inspectorButton","YellowBox","props","context","state","inspecting","warningMap","dismissWarning","delete","clear","setState","scheduled","_listener","addListener","setImmediate","remove","size","rows","forEach","push","listStyle","list","height","Math","min","rowGutter","rowHeight","fullScreen","warnings","indexOf","Component","backgroundColor","opacity","textColor","elevation","OS","Number","MAX_SAFE_INTEGER","undefined","create","width","position","paddingTop","flexDirection","flex","paddingVertical","paddingBottom","color","fontSize","textAlign","padding","justifyContent","paddingHorizontal","fontWeight","left","right","bottom","marginTop","top","marginLeft","marginRight","module","exports"],"mappings":"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","file":"YellowBox.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule YellowBox\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('EventEmitter');\nconst Platform = require('Platform');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\n\nconst infoLog = require('infoLog');\nconst openFileInEditor = require('openFileInEditor');\nconst parseErrorStack = require('parseErrorStack');\nconst symbolicateStackTrace = require('symbolicateStackTrace');\n\nimport type EmitterSubscription from 'EmitterSubscription';\nimport type {StackFrame} from 'parseErrorStack';\n\ntype WarningInfo = {\n  count: number,\n  stacktrace: Array<StackFrame>,\n  symbolicated: boolean,\n};\n\nconst _warningEmitter = new EventEmitter();\nconst _warningMap: Map<string, WarningInfo> = new Map();\nconst IGNORED_WARNINGS: Array<string> = [];\n\n/**\n * YellowBox renders warnings at the bottom of the app being developed.\n *\n * Warnings help guard against subtle yet significant issues that can impact the\n * quality of the app. This \"in your face\" style of warning allows developers to\n * notice and correct these issues as quickly as possible.\n *\n * By default, the warning box is enabled in `__DEV__`. Set the following flag\n * to disable it (and call `console.warn` to update any rendered <YellowBox>):\n *\n *   console.disableYellowBox = true;\n *   console.warn('YellowBox is disabled.');\n *\n * Ignore specific warnings by calling:\n *\n *   YellowBox.ignoreWarnings(['Warning: ...']);\n *\n * (DEPRECATED) Warnings can be ignored programmatically by setting the array:\n *\n *   console.ignoredYellowBox = ['Warning: ...'];\n *\n * Strings in `console.ignoredYellowBox` can be a prefix of the warning that\n * should be ignored.\n */\n\nif (__DEV__) {\n  const {error, warn} = console;\n\n  (console: any).error = function() {\n    error.apply(console, arguments);\n    // Show yellow box for the `warning` module.\n    if (typeof arguments[0] === 'string' &&\n        arguments[0].startsWith('Warning: ')) {\n      updateWarningMap.apply(null, arguments);\n    }\n  };\n\n  (console: any).warn = function() {\n    warn.apply(console, arguments);\n\n    if (typeof arguments[0] === 'string' &&\n        arguments[0].startsWith('(ADVICE)')) {\n      return;\n    }\n\n    updateWarningMap.apply(null, arguments);\n  };\n\n  if (Platform.isTesting) {\n    (console: any).disableYellowBox = true;\n  }\n}\n\n/**\n * Simple function for formatting strings.\n *\n * Replaces placeholders with values passed as extra arguments\n *\n * @param {string} format the base string\n * @param ...args the values to insert\n * @return {string} the replaced string\n */\nfunction sprintf(format, ...args) {\n  let index = 0;\n  return format.replace(/%s/g, match => args[index++]);\n}\n\nfunction updateWarningMap(format, ...args): void {\n  if (console.disableYellowBox) {\n    return;\n  }\n  const stringifySafe = require('stringifySafe');\n\n  format = String(format);\n  const argCount = (format.match(/%s/g) || []).length;\n  const warning = [\n    sprintf(format, ...args.slice(0, argCount)),\n    ...args.slice(argCount).map(stringifySafe),\n  ].join(' ');\n\n  const warningInfo = _warningMap.get(warning);\n  if (warningInfo) {\n    warningInfo.count += 1;\n  } else {\n    const error: any = new Error();\n    error.framesToPop = 2;\n\n    _warningMap.set(warning, {\n      count: 1,\n      stacktrace: parseErrorStack(error),\n      symbolicated: false,\n    });\n  }\n\n  _warningEmitter.emit('warning', _warningMap);\n}\n\nfunction ensureSymbolicatedWarning(warning: string): void {\n  const prevWarningInfo = _warningMap.get(warning);\n  if (!prevWarningInfo || prevWarningInfo.symbolicated) {\n    return;\n  }\n  prevWarningInfo.symbolicated = true;\n\n  symbolicateStackTrace(prevWarningInfo.stacktrace).then(\n    stack => {\n      const nextWarningInfo = _warningMap.get(warning);\n      if (nextWarningInfo) {\n        nextWarningInfo.stacktrace = stack;\n        _warningEmitter.emit('warning', _warningMap);\n      }\n    },\n    error => {\n      const nextWarningInfo = _warningMap.get(warning);\n      if (nextWarningInfo) {\n        infoLog('Failed to symbolicate warning, \"%s\":', warning, error);\n        _warningEmitter.emit('warning', _warningMap);\n      }\n    }\n  );\n}\n\nfunction isWarningIgnored(warning: string): boolean {\n  const isIgnored =\n    IGNORED_WARNINGS.some(\n      (ignoredWarning: string) => warning.startsWith(ignoredWarning)\n    );\n\n  if (isIgnored) {\n    return true;\n  }\n\n  // DEPRECATED\n  return (\n    Array.isArray(console.ignoredYellowBox) &&\n    console.ignoredYellowBox.some(\n      ignorePrefix => warning.startsWith(String(ignorePrefix))\n    )\n  );\n}\n\nconst WarningRow = ({count, warning, onPress}) => {\n  const Text = require('Text');\n  const TouchableHighlight = require('TouchableHighlight');\n  const View = require('View');\n\n  const countText = count > 1 ?\n    <Text style={styles.listRowCount}>{'(' + count + ') '}</Text> :\n    null;\n\n  return (\n    <View style={styles.listRow}>\n      <TouchableHighlight\n        activeOpacity={0.5}\n        onPress={onPress}\n        style={styles.listRowContent}\n        underlayColor=\"transparent\">\n        <Text style={styles.listRowText} numberOfLines={2}>\n          {countText}\n          {warning}\n        </Text>\n      </TouchableHighlight>\n    </View>\n  );\n};\n\ntype StackRowProps = { frame: StackFrame };\nconst StackRow = ({frame}: StackRowProps) => {\n  const Text = require('Text');\n  const TouchableHighlight = require('TouchableHighlight');\n  const {file, lineNumber} = frame;\n  let fileName;\n  if (file) {\n    const fileParts = file.split('/');\n    fileName = fileParts[fileParts.length - 1];\n  } else {\n    fileName = '<unknown file>';\n  }\n\n  return (\n    <TouchableHighlight\n      activeOpacity={0.5}\n      style={styles.openInEditorButton}\n      underlayColor=\"transparent\"\n      onPress={openFileInEditor.bind(null, file, lineNumber)}>\n      <Text style={styles.inspectorCountText}>\n        {fileName}:{lineNumber}\n      </Text>\n    </TouchableHighlight>\n  );\n};\n\nconst WarningInspector = ({\n  warningInfo,\n  warning,\n  stacktraceVisible,\n  onDismiss,\n  onDismissAll,\n  onMinimize,\n  toggleStacktrace,\n}) => {\n  const ScrollView = require('ScrollView');\n  const Text = require('Text');\n  const TouchableHighlight = require('TouchableHighlight');\n  const View = require('View');\n  const {count, stacktrace} = warningInfo || {};\n\n  const countSentence =\n    'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';\n\n  let stacktraceList;\n  if (stacktraceVisible && stacktrace) {\n    stacktraceList = (\n      <View style={styles.stacktraceList}>\n        {stacktrace.map((frame, ii) => <StackRow frame={frame} key={ii} />)}\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.inspector}>\n      <View style={styles.inspectorCount}>\n        <Text style={styles.inspectorCountText}>{countSentence}</Text>\n        <TouchableHighlight onPress={toggleStacktrace} underlayColor=\"transparent\">\n          <Text style={styles.inspectorButtonText}>\n            {stacktraceVisible ? '\\u{25BC}' : '\\u{25B6}'} Stacktrace\n          </Text>\n        </TouchableHighlight>\n      </View>\n      <ScrollView style={styles.inspectorWarning}>\n        {stacktraceList}\n        <Text style={styles.inspectorWarningText}>{warning}</Text>\n      </ScrollView>\n      <View style={styles.inspectorButtons}>\n        <TouchableHighlight\n          activeOpacity={0.5}\n          onPress={onMinimize}\n          style={styles.inspectorButton}\n          underlayColor=\"transparent\">\n          <Text style={styles.inspectorButtonText}>\n            Minimize\n          </Text>\n        </TouchableHighlight>\n        <TouchableHighlight\n          activeOpacity={0.5}\n          onPress={onDismiss}\n          style={styles.inspectorButton}\n          underlayColor=\"transparent\">\n          <Text style={styles.inspectorButtonText}>\n            Dismiss\n          </Text>\n        </TouchableHighlight>\n        <TouchableHighlight\n          activeOpacity={0.5}\n          onPress={onDismissAll}\n          style={styles.inspectorButton}\n          underlayColor=\"transparent\">\n          <Text style={styles.inspectorButtonText}>\n            Dismiss All\n          </Text>\n        </TouchableHighlight>\n      </View>\n    </View>\n  );\n};\n\nclass YellowBox extends React.Component {\n  state: {\n    stacktraceVisible: boolean,\n    inspecting: ?string,\n    warningMap: Map<any, any>,\n  };\n  _listener: ?EmitterSubscription;\n  dismissWarning: (warning: ?string) => void;\n\n  constructor(props: mixed, context: mixed) {\n    super(props, context);\n    this.state = {\n      inspecting: null,\n      stacktraceVisible: false,\n      warningMap: _warningMap,\n    };\n    this.dismissWarning = warning => {\n      const {inspecting, warningMap} = this.state;\n      if (warning) {\n        warningMap.delete(warning);\n      } else {\n        warningMap.clear();\n      }\n      this.setState({\n        inspecting: (warning && inspecting !== warning) ? inspecting : null,\n        warningMap,\n      });\n    };\n  }\n\n  static ignoreWarnings(warnings: Array<string>): void {\n    warnings.forEach((warning: string) => {\n      if (IGNORED_WARNINGS.indexOf(warning) === -1) {\n        IGNORED_WARNINGS.push(warning);\n      }\n    });\n  }\n\n  componentDidMount() {\n    let scheduled = null;\n    this._listener = _warningEmitter.addListener('warning', warningMap => {\n      // Use `setImmediate` because warnings often happen during render, but\n      // state cannot be set while rendering.\n      scheduled = scheduled || setImmediate(() => {\n        scheduled = null;\n        this.setState({\n          warningMap,\n        });\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    const {inspecting} = this.state;\n    if (inspecting != null) {\n      ensureSymbolicatedWarning(inspecting);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._listener) {\n      this._listener.remove();\n    }\n  }\n\n  render() {\n    if (console.disableYellowBox || this.state.warningMap.size === 0) {\n      return null;\n    }\n    const ScrollView = require('ScrollView');\n    const View = require('View');\n\n    const {inspecting, stacktraceVisible} = this.state;\n    const inspector = inspecting !== null ?\n      <WarningInspector\n        warningInfo={this.state.warningMap.get(inspecting)}\n        warning={inspecting}\n        stacktraceVisible={stacktraceVisible}\n        onDismiss={() => this.dismissWarning(inspecting)}\n        onDismissAll={() => this.dismissWarning(null)}\n        onMinimize={() => this.setState({inspecting: null})}\n        toggleStacktrace={() => this.setState({stacktraceVisible: !stacktraceVisible})}\n      /> :\n      null;\n\n    const rows = [];\n    this.state.warningMap.forEach((warningInfo, warning) => {\n      if (!isWarningIgnored(warning)) {\n        rows.push(\n          <WarningRow\n            key={warning}\n            count={warningInfo.count}\n            warning={warning}\n            onPress={() => this.setState({inspecting: warning})}\n            onDismiss={() => this.dismissWarning(warning)}\n          />\n        );\n      }\n    });\n\n    const listStyle = [\n      styles.list,\n      // Additional `0.4` so the 5th row can peek into view.\n      {height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight)},\n    ];\n    return (\n      <View style={inspector ? styles.fullScreen : listStyle}>\n        <ScrollView style={listStyle} scrollsToTop={false}>\n          {rows}\n        </ScrollView>\n        {inspector}\n      </View>\n    );\n  }\n}\n\nconst backgroundColor = opacity => 'rgba(250, 186, 48, ' + opacity + ')';\nconst textColor = 'white';\nconst rowGutter = 1;\nconst rowHeight = 46;\n\n// For unknown reasons, setting elevation: Number.MAX_VALUE causes remote debugging to\n// hang on iOS (some sort of overflow maybe). Setting it to Number.MAX_SAFE_INTEGER fixes the iOS issue, but since\n// elevation is an android-only style property we might as well remove it altogether for iOS.\n// See: https://github.com/facebook/react-native/issues/12223\nconst elevation = Platform.OS === 'android' ? Number.MAX_SAFE_INTEGER : undefined;\n\nvar styles = StyleSheet.create({\n  fullScreen: {\n    height: '100%',\n    width: '100%',\n    elevation: elevation,\n    position: 'absolute',\n  },\n  inspector: {\n    backgroundColor: backgroundColor(0.95),\n    height: '100%',\n    paddingTop: 5,\n    elevation:elevation\n  },\n  inspectorButtons: {\n    flexDirection: 'row',\n  },\n  inspectorButton: {\n    flex: 1,\n    paddingVertical: 22,\n    backgroundColor: backgroundColor(1),\n  },\n  stacktraceList: {\n    paddingBottom: 5,\n  },\n  inspectorButtonText: {\n    color: textColor,\n    fontSize: 14,\n    opacity: 0.8,\n    textAlign: 'center',\n  },\n  openInEditorButton: {\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  inspectorCount: {\n    padding: 15,\n    paddingBottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  inspectorCountText: {\n    color: textColor,\n    fontSize: 14,\n  },\n  inspectorWarning: {\n    flex: 1,\n    paddingHorizontal: 15,\n  },\n  inspectorWarningText: {\n    color: textColor,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  list: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: elevation\n  },\n  listRow: {\n    backgroundColor: backgroundColor(0.95),\n    height: rowHeight,\n    marginTop: rowGutter,\n  },\n  listRowContent: {\n    flex: 1,\n  },\n  listRowCount: {\n    color: 'rgba(255, 255, 255, 0.5)',\n  },\n  listRowText: {\n    color: textColor,\n    position: 'absolute',\n    left: 0,\n    top: Platform.OS === 'android' ? 5 : 7,\n    marginLeft: 15,\n    marginRight: 15,\n  },\n});\n\nmodule.exports = YellowBox;\n"]}