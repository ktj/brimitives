{"version":3,"sources":["node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js"],"names":["WebSocketEvent","type","eventInitDict","toString","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;;;;;;;;;AAUMA,c;AACJ,wBAAYC,IAAZ,CAAkBC,aAAlB,CAAiC;AAC/B,KAAKD,IAAL,CAAYA,KAAKE,QAAL,EAAZ;AACA,SAAc,IAAd,CAAoBD,aAApB;AACD,C;;;AAGHE,OAAOC,OAAP,CAAiBL,cAAjB,C,0GAPMA,c","file":"WebSocketEvent.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule WebSocketEvent\n */\n\n'use strict';\n\n/**\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\n * callbacks of `WebSocket`.\n *\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\n *\n * In case of \"message\", the `data` property contains the incoming data.\n */\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\n\nmodule.exports = WebSocketEvent;\n"]}