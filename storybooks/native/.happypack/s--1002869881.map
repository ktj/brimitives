{"version":3,"sources":["node_modules/react-native/Libraries/Network/XMLHttpRequest.js"],"names":["EventTarget","require","RCTNetworking","base64","invariant","warning","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","SUPPORTED_RESPONSE_TYPES","arraybuffer","global","ArrayBuffer","blob","Blob","document","json","text","REQUEST_EVENTS","XHR_EVENTS","concat","XMLHttpRequestEventTarget","XMLHttpRequest","interceptor","_interceptor","readyState","status","timeout","withCredentials","upload","_aborted","_hasError","_method","_response","_url","_timedOut","_trackingName","_incrementalEvents","_reset","responseHeaders","undefined","responseURL","_requestId","_cachedResponse","_headers","_responseType","_sent","_lowerCaseResponseHeaders","_clearSubscriptions","requestId","requestSent","progress","total","dispatchEvent","type","lengthComputable","loaded","setResponseHeaders","setReadyState","responseReceived","response","dataReceived","responseText","__didReceiveDataProgress","error","timeOutError","loadingFailed","loadingFinished","length","_subscriptions","forEach","sub","remove","headers","Object","keys","map","headerName","join","header","value","toLowerCase","Error","String","trackingName","method","url","async","toUpperCase","data","incrementalEvents","onreadystatechange","onprogress","push","addListener","args","__didUploadProgress","__didReceiveResponse","__didReceiveData","__didReceiveIncrementalData","__didCompleteResponse","nativeResponseType","sendRequest","__didCreateRequest","bind","abortRequest","reduce","lcaseHeaders","newState","listener","responseType","hasOwnProperty","toByteArray","buffer","getResponseHeader","JSON","parse","_","module","exports"],"mappings":"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","file":"XMLHttpRequest.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule XMLHttpRequest\n * @flow\n */\n'use strict';\n\nconst EventTarget = require('event-target-shim');\nconst RCTNetworking = require('RCTNetworking');\n\nconst base64 = require('base64-js');\nconst invariant = require('fbjs/lib/invariant');\nconst warning = require('fbjs/lib/warning');\n\ntype ResponseType = '' | 'arraybuffer' | 'blob' | 'document' | 'json' | 'text';\ntype Response = ?Object | string;\n\ntype XHRInterceptor = {\n  requestSent(\n    id: number,\n    url: string,\n    method: string,\n    headers: Object\n  ): void,\n  responseReceived(\n    id: number,\n    url: string,\n    status: number,\n    headers: Object\n  ): void,\n  dataReceived(\n    id: number,\n    data: string\n  ): void,\n  loadingFinished(\n    id: number,\n    encodedDataLength: number\n  ): void,\n  loadingFailed(\n    id: number,\n    error: string\n  ): void,\n};\n\nconst UNSENT = 0;\nconst OPENED = 1;\nconst HEADERS_RECEIVED = 2;\nconst LOADING = 3;\nconst DONE = 4;\n\nconst SUPPORTED_RESPONSE_TYPES = {\n  arraybuffer: typeof global.ArrayBuffer === 'function',\n  blob: typeof global.Blob === 'function',\n  document: false,\n  json: true,\n  text: true,\n  '': true,\n};\n\nconst REQUEST_EVENTS = [\n  'abort',\n  'error',\n  'load',\n  'loadstart',\n  'progress',\n  'timeout',\n  'loadend',\n];\n\nconst XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');\n\nclass XMLHttpRequestEventTarget extends EventTarget(...REQUEST_EVENTS) {\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n}\n\n/**\n * Shared base for platform-specific XMLHttpRequest implementations.\n */\nclass XMLHttpRequest extends EventTarget(...XHR_EVENTS) {\n\n  static UNSENT: number = UNSENT;\n  static OPENED: number = OPENED;\n  static HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  static LOADING: number = LOADING;\n  static DONE: number = DONE;\n\n  static _interceptor: ?XHRInterceptor = null;\n\n  UNSENT: number = UNSENT;\n  OPENED: number = OPENED;\n  HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  LOADING: number = LOADING;\n  DONE: number = DONE;\n\n  // EventTarget automatically initializes these to `null`.\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n  onreadystatechange: ?Function;\n\n  readyState: number = UNSENT;\n  responseHeaders: ?Object;\n  status: number = 0;\n  timeout: number = 0;\n  responseURL: ?string;\n  withCredentials: boolean = true\n\n  upload: XMLHttpRequestEventTarget = new XMLHttpRequestEventTarget();\n\n  _requestId: ?number;\n  _subscriptions: Array<*>;\n\n  _aborted: boolean = false;\n  _cachedResponse: Response;\n  _hasError: boolean = false;\n  _headers: Object;\n  _lowerCaseResponseHeaders: Object;\n  _method: ?string = null;\n  _response: string | ?Object;\n  _responseType: ResponseType;\n  _response: string = '';\n  _sent: boolean;\n  _url: ?string = null;\n  _timedOut: boolean = false;\n  _trackingName: string = 'unknown';\n  _incrementalEvents: boolean = false;\n\n  static setInterceptor(interceptor: ?XHRInterceptor) {\n    XMLHttpRequest._interceptor = interceptor;\n  }\n\n  constructor() {\n    super();\n    this._reset();\n  }\n\n  _reset(): void {\n    this.readyState = this.UNSENT;\n    this.responseHeaders = undefined;\n    this.status = 0;\n    delete this.responseURL;\n\n    this._requestId = null;\n\n    this._cachedResponse = undefined;\n    this._hasError = false;\n    this._headers = {};\n    this._response = '';\n    this._responseType = '';\n    this._sent = false;\n    this._lowerCaseResponseHeaders = {};\n\n    this._clearSubscriptions();\n    this._timedOut = false;\n  }\n\n  get responseType(): ResponseType {\n    return this._responseType;\n  }\n\n  set responseType(responseType: ResponseType): void {\n    if (this._sent) {\n      throw new Error(\n        'Failed to set the \\'responseType\\' property on \\'XMLHttpRequest\\': The ' +\n        'response type cannot be set after the request has been sent.'\n      );\n    }\n    if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {\n      warning(\n        false,\n        `The provided value '${responseType}' is not a valid 'responseType'.`\n      );\n      return;\n    }\n\n    // redboxes early, e.g. for 'arraybuffer' on ios 7\n    invariant(\n      SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document',\n      `The provided value '${responseType}' is unsupported in this environment.`\n    );\n    this._responseType = responseType;\n  }\n\n  get responseText(): string {\n    if (this._responseType !== '' && this._responseType !== 'text') {\n      throw new Error(\n        \"The 'responseText' property is only available if 'responseType' \" +\n        `is set to '' or 'text', but it is '${this._responseType}'.`\n      );\n    }\n    if (this.readyState < LOADING) {\n      return '';\n    }\n    return this._response;\n  }\n\n  get response(): Response {\n    const {responseType} = this;\n    if (responseType === '' || responseType === 'text') {\n      return this.readyState < LOADING || this._hasError\n        ? ''\n        : this._response;\n    }\n\n    if (this.readyState !== DONE) {\n      return null;\n    }\n\n    if (this._cachedResponse !== undefined) {\n      return this._cachedResponse;\n    }\n\n    switch (responseType) {\n      case 'document':\n        this._cachedResponse = null;\n        break;\n\n      case 'arraybuffer':\n        this._cachedResponse = base64.toByteArray(this._response).buffer;\n        break;\n\n      case 'blob':\n        this._cachedResponse = new global.Blob(\n          [base64.toByteArray(this._response).buffer],\n          {type: this.getResponseHeader('content-type') || ''}\n        );\n        break;\n\n      case 'json':\n        try {\n          this._cachedResponse = JSON.parse(this._response);\n        } catch (_) {\n          this._cachedResponse = null;\n        }\n        break;\n\n      default:\n        this._cachedResponse = null;\n    }\n\n    return this._cachedResponse;\n  }\n\n  // exposed for testing\n  __didCreateRequest(requestId: number): void {\n    this._requestId = requestId;\n\n    XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(\n      requestId,\n      this._url || '',\n      this._method || 'GET',\n      this._headers);\n  }\n\n  // exposed for testing\n  __didUploadProgress(\n    requestId: number,\n    progress: number,\n    total: number\n  ): void {\n    if (requestId === this._requestId) {\n      this.upload.dispatchEvent({\n        type: 'progress',\n        lengthComputable: true,\n        loaded: progress,\n        total,\n      });\n    }\n  }\n\n  __didReceiveResponse(\n    requestId: number,\n    status: number,\n    responseHeaders: ?Object,\n    responseURL: ?string\n  ): void {\n    if (requestId === this._requestId) {\n      this.status = status;\n      this.setResponseHeaders(responseHeaders);\n      this.setReadyState(this.HEADERS_RECEIVED);\n      if (responseURL || responseURL === '') {\n        this.responseURL = responseURL;\n      } else {\n        delete this.responseURL;\n      }\n\n      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(\n        requestId,\n        responseURL || this._url || '',\n        status,\n        responseHeaders || {});\n    }\n  }\n\n  __didReceiveData(requestId: number, response: string): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this._response = response;\n    this._cachedResponse = undefined; // force lazy recomputation\n    this.setReadyState(this.LOADING);\n\n    XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(\n      requestId,\n      response);\n  }\n\n  __didReceiveIncrementalData(\n    requestId: number,\n    responseText: string,\n    progress: number,\n    total: number\n  ) {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    if (!this._response) {\n      this._response = responseText;\n    } else {\n      this._response += responseText;\n    }\n\n    XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(\n      requestId,\n      responseText);\n\n    this.setReadyState(this.LOADING);\n    this.__didReceiveDataProgress(requestId, progress, total);\n  }\n\n  __didReceiveDataProgress(\n    requestId: number,\n    loaded: number,\n    total: number\n  ): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this.dispatchEvent({\n      type: 'progress',\n      lengthComputable: total >= 0,\n      loaded,\n      total,\n    });\n  }\n\n  // exposed for testing\n  __didCompleteResponse(\n    requestId: number,\n    error: string,\n    timeOutError: boolean\n  ): void {\n    if (requestId === this._requestId) {\n      if (error) {\n        if (this._responseType === '' || this._responseType === 'text') {\n          this._response = error;\n        }\n        this._hasError = true;\n        if (timeOutError) {\n          this._timedOut = true;\n        }\n      }\n      this._clearSubscriptions();\n      this._requestId = null;\n      this.setReadyState(this.DONE);\n\n      if (error) {\n        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(\n          requestId,\n          error);\n      } else {\n        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(\n          requestId,\n          this._response.length);\n      }\n    }\n  }\n\n  _clearSubscriptions(): void {\n    (this._subscriptions || []).forEach(sub => {\n      sub.remove();\n    });\n    this._subscriptions = [];\n  }\n\n  getAllResponseHeaders(): ?string {\n    if (!this.responseHeaders) {\n      // according to the spec, return null if no response has been received\n      return null;\n    }\n    var headers = this.responseHeaders || {};\n    return Object.keys(headers).map((headerName) => {\n      return headerName + ': ' + headers[headerName];\n    }).join('\\r\\n');\n  }\n\n  getResponseHeader(header: string): ?string {\n    var value = this._lowerCaseResponseHeaders[header.toLowerCase()];\n    return value !== undefined ? value : null;\n  }\n\n  setRequestHeader(header: string, value: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    this._headers[header.toLowerCase()] = String(value);\n  }\n\n  /**\n   * Custom extension for tracking origins of request.\n   */\n  setTrackingName(trackingName: string): XMLHttpRequest {\n    this._trackingName = trackingName;\n    return this;\n  }\n\n  open(method: string, url: string, async: ?boolean): void {\n    /* Other optional arguments are not supported yet */\n    if (this.readyState !== this.UNSENT) {\n      throw new Error('Cannot open, already sending');\n    }\n    if (async !== undefined && !async) {\n      // async is default\n      throw new Error('Synchronous http requests are not supported');\n    }\n    if (!url) {\n      throw new Error('Cannot load an empty url');\n    }\n    this._method = method.toUpperCase();\n    this._url = url;\n    this._aborted = false;\n    this.setReadyState(this.OPENED);\n  }\n\n  send(data: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    if (this._sent) {\n      throw new Error('Request has already been sent');\n    }\n    this._sent = true;\n    const incrementalEvents = this._incrementalEvents ||\n      !!this.onreadystatechange ||\n      !!this.onprogress;\n\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didSendNetworkData',\n      (args) => this.__didUploadProgress(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkResponse',\n      (args) => this.__didReceiveResponse(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkData',\n      (args) => this.__didReceiveData(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkIncrementalData',\n      (args) => this.__didReceiveIncrementalData(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkDataProgress',\n      (args) => this.__didReceiveDataProgress(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didCompleteNetworkResponse',\n      (args) => this.__didCompleteResponse(...args)\n    ));\n\n    let nativeResponseType = 'text';\n    if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {\n      nativeResponseType = 'base64';\n    }\n\n    invariant(this._method, 'Request method needs to be defined.');\n    invariant(this._url, 'Request URL needs to be defined.');\n    RCTNetworking.sendRequest(\n      this._method,\n      this._trackingName,\n      this._url,\n      this._headers,\n      data,\n      nativeResponseType,\n      incrementalEvents,\n      this.timeout,\n      this.__didCreateRequest.bind(this),\n      this.withCredentials\n    );\n  }\n\n  abort(): void {\n    this._aborted = true;\n    if (this._requestId) {\n      RCTNetworking.abortRequest(this._requestId);\n    }\n    // only call onreadystatechange if there is something to abort,\n    // below logic is per spec\n    if (!(this.readyState === this.UNSENT ||\n        (this.readyState === this.OPENED && !this._sent) ||\n        this.readyState === this.DONE)) {\n      this._reset();\n      this.setReadyState(this.DONE);\n    }\n    // Reset again after, in case modified in handler\n    this._reset();\n  }\n\n  setResponseHeaders(responseHeaders: ?Object): void {\n    this.responseHeaders = responseHeaders || null;\n    var headers = responseHeaders || {};\n    this._lowerCaseResponseHeaders =\n      Object.keys(headers).reduce((lcaseHeaders, headerName) => {\n        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];\n        return lcaseHeaders;\n      }, {});\n  }\n\n  setReadyState(newState: number): void {\n    this.readyState = newState;\n    this.dispatchEvent({type: 'readystatechange'});\n    if (newState === this.DONE) {\n      if (this._aborted) {\n        this.dispatchEvent({type: 'abort'});\n      } else if (this._hasError) {\n        if (this._timedOut) {\n          this.dispatchEvent({type: 'timeout'});\n        } else {\n          this.dispatchEvent({type: 'error'});\n        }\n      } else {\n        this.dispatchEvent({type: 'load'});\n      }\n      this.dispatchEvent({type: 'loadend'});\n    }\n  }\n\n  /* global EventListener */\n  addEventListener(type: string, listener: EventListener): void {\n    // If we dont' have a 'readystatechange' event handler, we don't\n    // have to send repeated LOADING events with incremental updates\n    // to responseText, which will avoid a bunch of native -> JS\n    // bridge traffic.\n    if (type === 'readystatechange' || type === 'progress') {\n      this._incrementalEvents = true;\n    }\n    super.addEventListener(type, listener);\n  }\n}\n\nmodule.exports = XMLHttpRequest;\n"]}