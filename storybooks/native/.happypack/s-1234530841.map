{"version":3,"sources":["node_modules/react-native/Libraries/StyleSheet/processColor.js"],"names":["Platform","require","normalizeColor","processColor","color","undefined","int32Color","OS","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAMA,UAAWC,QAAQ,UAAR,CAAjB;;AAEA,GAAMC,gBAAiBD,QAAQ,gBAAR,CAAvB;;;AAGA,QAASE,aAAT,CAAsBC,KAAtB,CAAwD;AACtD,GAAIA,QAAUC,SAAV,EAAuBD,QAAU,IAArC,CAA2C;AACzC,MAAOA,MAAP;AACD;;AAED,GAAIE,YAAaJ,eAAeE,KAAf,CAAjB;AACA,GAAIE,aAAe,IAAf,EAAuBA,aAAeD,SAA1C,CAAqD;AACnD,MAAOA,UAAP;AACD;;;AAGDC,WAAa,CAACA,YAAc,EAAd,CAAmBA,aAAe,CAAnC,IAA0C,CAAvD;;AAEA,GAAIN,SAASO,EAAT,GAAgB,SAApB,CAA+B;;;;;AAK7BD,WAAaA,WAAa,GAA1B;AACD;AACD,MAAOA,WAAP;AACD;;AAEDE,OAAOC,OAAP,CAAiBN,YAAjB,C,0GAvBSA,Y","file":"processColor.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule processColor\n * @flow\n */\n'use strict';\n\nconst Platform = require('Platform');\n\nconst normalizeColor = require('normalizeColor');\n\n/* eslint no-bitwise: 0 */\nfunction processColor(color?: string | number): ?number {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let int32Color = normalizeColor(color);\n  if (int32Color === null || int32Color === undefined) {\n    return undefined;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    int32Color = int32Color | 0x0;\n  }\n  return int32Color;\n}\n\nmodule.exports = processColor;\n"]}