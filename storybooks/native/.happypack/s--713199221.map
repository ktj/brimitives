{"version":3,"sources":["node_modules/react-native/Libraries/Components/Keyboard/Keyboard.js"],"names":["invariant","require","NativeEventEmitter","KeyboardObserver","dismissKeyboard","KeyboardEventEmitter","Keyboard","addListener","eventName","callback","removeListener","removeAllListeners","dismiss","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAMA,WAAYC,QAAQ,oBAAR,CAAlB;AACA,GAAMC,oBAAqBD,QAAQ,oBAAR,CAA3B;AACA,GAAME,kBAAmBF,QAAQ,eAAR,EAAyBE,gBAAlD;AACA,GAAMC,iBAAkBH,QAAQ,iBAAR,CAAxB;AACA,GAAMI,sBAAuB,GAAIH,mBAAJ,CAAuBC,gBAAvB,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,GAAIG,UAAW;;;;;;;;;;;;;;;;;;;;;;;;AAwBbC,WAxBa,sBAwBDC,SAxBC,CAwB6BC,QAxB7B,CAwB8D;AACzET,UAAU,KAAV,CAAiB,qCAAjB;AACD,CA1BY;;;;;;;;AAkCbU,cAlCa,yBAkCEF,SAlCF,CAkCgCC,QAlChC,CAkCoD;AAC/DT,UAAU,KAAV,CAAiB,qCAAjB;AACD,CApCY;;;;;;;AA2CbW,kBA3Ca,6BA2CMH,SA3CN,CA2CoC;AAC/CR,UAAU,KAAV,CAAiB,qCAAjB;AACD,CA7CY;;;;;AAkDbY,OAlDa,mBAkDH;AACRZ,UAAU,KAAV,CAAiB,qCAAjB;AACD,CApDY,CAAf;;;;AAwDAM,SAAWD,oBAAX;AACAC,SAASM,OAAT,CAAmBR,eAAnB;;AAEAS,OAAOC,OAAP,CAAiBR,QAAjB,C,0GAhIMH,gB,0KAEAE,oB,8KAmEFC,Q","file":"Keyboard.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Keyboard\n * @flow\n */\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst KeyboardObserver = require('NativeModules').KeyboardObserver;\nconst dismissKeyboard = require('dismissKeyboard');\nconst KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);\n\ntype KeyboardEventName =\n  | 'keyboardWillShow'\n  | 'keyboardDidShow'\n  | 'keyboardWillHide'\n  | 'keyboardDidHide'\n  | 'keyboardWillChangeFrame'\n  | 'keyboardDidChangeFrame';\n\ntype KeyboardEventData = {\n  endCoordinates: {\n    width: number,\n    height: number,\n    screenX: number,\n    screenY: number,\n  },\n};\n\ntype KeyboardEventListener = (e: KeyboardEventData) => void;\n\n// The following object exists for documentation purposes\n// Actual work happens in\n// https://github.com/facebook/react-native/blob/master/Libraries/vendor/emitter/NativeEventEmitter.js\n\n/**\n * `Keyboard` module to control keyboard events.\n *\n * ### Usage\n *\n * The Keyboard module allows you to listen for native events and react to them, as\n * well as make changes to the keyboard, like dismissing it.\n *\n *```\n * import React, { Component } from 'react';\n * import { Keyboard, TextInput } from 'react-native';\n *\n * class Example extends Component {\n *   componentWillMount () {\n *     this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this._keyboardDidShow);\n *     this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this._keyboardDidHide);\n *   }\n *\n *   componentWillUnmount () {\n *     this.keyboardDidShowListener.remove();\n *     this.keyboardDidHideListener.remove();\n *   }\n *\n *   _keyboardDidShow () {\n *     alert('Keyboard Shown');\n *   }\n *\n *   _keyboardDidHide () {\n *     alert('Keyboard Hidden');\n *   }\n *\n *   render() {\n *     return (\n *       <TextInput\n *         onSubmitEditing={Keyboard.dismiss}\n *       />\n *     );\n *   }\n * }\n *```\n */\n\nlet Keyboard = {\n  /**\n   * The `addListener` function connects a JavaScript function to an identified native\n   * keyboard notification event.\n   *\n   * This function then returns the reference to the listener.\n   *\n   * @param {string} eventName The `nativeEvent` is the string that identifies the event you're listening for.  This\n   *can be any of the following:\n   *\n   * - `keyboardWillShow`\n   * - `keyboardDidShow`\n   * - `keyboardWillHide`\n   * - `keyboardDidHide`\n   * - `keyboardWillChangeFrame`\n   * - `keyboardDidChangeFrame`\n   *\n   * Note that if you set `android:windowSoftInputMode` to `adjustResize`  or `adjustNothing`,\n   * only `keyboardDidShow` and `keyboardDidHide` events will be available on Android.\n   * `keyboardWillShow` as well as `keyboardWillHide` are generally not available on Android\n   * since there is no native corresponding event.\n   *\n   * @param {function} callback function to be called when the event fires.\n   */\n  addListener(eventName: KeyboardEventName, callback: KeyboardEventListener) {\n    invariant(false, 'Dummy method used for documentation');\n  },\n\n  /**\n   * Removes a specific listener.\n   *\n   * @param {string} eventName The `nativeEvent` is the string that identifies the event you're listening for.\n   * @param {function} callback function to be called when the event fires.\n   */\n  removeListener(eventName: KeyboardEventName, callback: Function) {\n    invariant(false, 'Dummy method used for documentation');\n  },\n\n  /**\n   * Removes all listeners for a specific event type.\n   *\n   * @param {string} eventType The native event string listeners are watching which will be removed.\n   */\n  removeAllListeners(eventName: KeyboardEventName) {\n    invariant(false, 'Dummy method used for documentation');\n  },\n\n  /**\n   * Dismisses the active keyboard and removes focus.\n   */\n  dismiss() {\n    invariant(false, 'Dummy method used for documentation');\n  }\n};\n\n// Throw away the dummy object and reassign it to original module\nKeyboard = KeyboardEventEmitter;\nKeyboard.dismiss = dismissKeyboard;\n\nmodule.exports = Keyboard;\n"]}