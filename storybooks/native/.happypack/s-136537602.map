{"version":3,"sources":["node_modules/react-native/Libraries/Utilities/binaryToBase64.js"],"names":["base64","require","binaryToBase64","data","ArrayBuffer","Uint8Array","fromByteArray","isView","Error","buffer","byteOffset","byteLength","module","exports"],"mappings":";;;;;;;;;;;AAWA;;AAEA,GAAMA,QAASC,QAAQ,WAAR,CAAf;;AAEA,QAASC,eAAT,CAAwBC,IAAxB,CAA8D;AAC5D,GAAIA,eAAgBC,YAApB,CAAiC;AAC/BD,KAAO,GAAIE,WAAJ,CAAeF,IAAf,CAAP;AACD;AACD,GAAIA,eAAgBE,WAApB,CAAgC;AAC9B,MAAOL,QAAOM,aAAP,CAAqBH,IAArB,CAAP;AACD;AACD,GAAI,CAACC,YAAYG,MAAZ,CAAmBJ,IAAnB,CAAL,CAA+B;AAC7B,KAAM,IAAIK,MAAJ,CAAU,yCAAV,CAAN;AACD,CAT2D;AAUnBL,IAVmB,CAUrDM,MAVqD,OAUrDA,MAVqD,CAU7CC,UAV6C,OAU7CA,UAV6C,CAUjCC,UAViC,OAUjCA,UAViC;AAW5D,MAAOX,QAAOM,aAAP,CAAqB,GAAID,WAAJ,CAAeI,MAAf,CAAuBC,UAAvB,CAAmCC,UAAnC,CAArB,CAAP;AACD;;AAEDC,OAAOC,OAAP,CAAiBX,cAAjB,C,0GAdSA,c","file":"binaryToBase64.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule binaryToBase64\n * @flow\n */\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data: ArrayBuffer | $ArrayBufferView) {\n  if (data instanceof ArrayBuffer) {\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  const {buffer, byteOffset, byteLength} = data;\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n"]}