{"version":3,"sources":["node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js"],"names":["ColorPropType","require","NativeMethodsMixin","PropTypes","React","ReactNativeViewAttributes","StyleSheet","TimerMixin","Touchable","TouchableWithoutFeedback","View","ViewPropTypes","createReactClass","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","DEFAULT_PROPS","activeOpacity","underlayColor","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableHighlight","displayName","propTypes","number","style","onShowUnderlay","func","onHideUnderlay","hasTVPreferredFocus","bool","tvParallaxProperties","object","mixins","Mixin","getDefaultProps","_computeSyntheticState","props","activeProps","opacity","activeUnderlayProps","backgroundColor","underlayStyle","INACTIVE_UNDERLAY_PROPS","getInitialState","_isMounted","touchableGetInitialState","componentDidMount","refs","CHILD_REF","componentWillUnmount","componentDidUpdate","componentWillReceiveProps","nextProps","setState","viewConfig","uiViewClassName","validAttributes","RCTView","touchableHandleActivePressIn","e","clearTimeout","_hideTimeout","_showUnderlay","onPressIn","touchableHandleActivePressOut","_hideUnderlay","onPressOut","touchableHandlePress","setTimeout","delayPressOut","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","_hasPressHandler","UNDERLAY_REF","setNativeProps","state","INACTIVE_CHILD_PROPS","render","accessible","accessibilityLabel","accessibilityComponentType","accessibilityTraits","onLayout","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","nativeID","testID","cloneElement","Children","only","children","ref","renderDebugView","color","childRef","underlayRef","create","x","module","exports"],"mappings":"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","file":"TouchableHighlight.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TouchableHighlight\n * @flow\n */\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst ReactNativeViewAttributes = require('ReactNativeViewAttributes');\nconst StyleSheet = require('StyleSheet');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst TouchableWithoutFeedback = require('TouchableWithoutFeedback');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst ensureComponentIsNative = require('ensureComponentIsNative');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst keyOf = require('fbjs/lib/keyOf');\nconst merge = require('merge');\n\nimport type {Event} from 'TouchableWithoutFeedback';\n\nconst DEFAULT_PROPS = {\n  activeOpacity: 0.85,\n  underlayColor: 'black',\n};\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableHighlight onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableHighlight>\n *   );\n * },\n * ```\n */\n\nvar TouchableHighlight = createReactClass({\n  displayName: 'TouchableHighlight',\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active.\n     */\n    activeOpacity: PropTypes.number,\n    /**\n     * The color of the underlay that will show through when the touch is\n     * active.\n     */\n    underlayColor: ColorPropType,\n    style: ViewPropTypes.style,\n    /**\n     * Called immediately after the underlay is shown\n     */\n    onShowUnderlay: PropTypes.func,\n    /**\n     * Called immediately after the underlay is hidden\n     */\n    onHideUnderlay: PropTypes.func,\n    /**\n     * *(Apple TV only)* TV preferred focus (see documentation for the View component).\n     *\n     * @platform ios\n     */\n    hasTVPreferredFocus: PropTypes.bool,\n    /**\n     * *(Apple TV only)* Object with properties to control Apple TV parallax effects.\n     *\n     * enabled: If true, parallax effects are enabled.  Defaults to true.\n     * shiftDistanceX: Defaults to 2.0.\n     * shiftDistanceY: Defaults to 2.0.\n     * tiltAngle: Defaults to 0.05.\n     * magnification: Defaults to 1.0.\n     *\n     * @platform ios\n     */\n    tvParallaxProperties: PropTypes.object,\n  },\n\n  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],\n\n  getDefaultProps: () => DEFAULT_PROPS,\n\n  // Performance optimization to avoid constantly re-generating these objects.\n  _computeSyntheticState: function(props) {\n    return {\n      activeProps: {\n        style: {\n          opacity: props.activeOpacity,\n        }\n      },\n      activeUnderlayProps: {\n        style: {\n          backgroundColor: props.underlayColor,\n        }\n      },\n      underlayStyle: [\n        INACTIVE_UNDERLAY_PROPS.style,\n        props.style,\n      ],\n      hasTVPreferredFocus: props.hasTVPreferredFocus\n    };\n  },\n\n  getInitialState: function() {\n    this._isMounted = false;\n    return merge(\n      this.touchableGetInitialState(), this._computeSyntheticState(this.props)\n    );\n  },\n\n  componentDidMount: function() {\n    this._isMounted = true;\n    ensurePositiveDelayProps(this.props);\n    ensureComponentIsNative(this.refs[CHILD_REF]);\n  },\n\n  componentWillUnmount: function() {\n    this._isMounted = false;\n  },\n\n  componentDidUpdate: function() {\n    ensureComponentIsNative(this.refs[CHILD_REF]);\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n    if (nextProps.activeOpacity !== this.props.activeOpacity ||\n        nextProps.underlayColor !== this.props.underlayColor ||\n        nextProps.style !== this.props.style) {\n      this.setState(this._computeSyntheticState(nextProps));\n    }\n  },\n\n  viewConfig: {\n    uiViewClassName: 'RCTView',\n    validAttributes: ReactNativeViewAttributes.RCTView\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: Event) {\n    this.clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    this._showUnderlay();\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    if (!this._hideTimeout) {\n      this._hideUnderlay();\n    }\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: Event) {\n    this.clearTimeout(this._hideTimeout);\n    this._showUnderlay();\n    this._hideTimeout = this.setTimeout(this._hideUnderlay,\n      this.props.delayPressOut || 100);\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _showUnderlay: function() {\n    if (!this._isMounted || !this._hasPressHandler()) {\n      return;\n    }\n\n    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);\n    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  },\n\n  _hideUnderlay: function() {\n    this.clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {\n      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);\n      this.refs[UNDERLAY_REF].setNativeProps({\n        ...INACTIVE_UNDERLAY_PROPS,\n        style: this.state.underlayStyle,\n      });\n      this.props.onHideUnderlay && this.props.onHideUnderlay();\n    }\n  },\n\n  _hasPressHandler: function() {\n    return !!(\n      this.props.onPress ||\n      this.props.onPressIn ||\n      this.props.onPressOut ||\n      this.props.onLongPress\n    );\n  },\n\n  render: function() {\n    return (\n      <View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityComponentType={this.props.accessibilityComponentType}\n        accessibilityTraits={this.props.accessibilityTraits}\n        ref={UNDERLAY_REF}\n        style={this.state.underlayStyle}\n        onLayout={this.props.onLayout}\n        hitSlop={this.props.hitSlop}\n        isTVSelectable={true}\n        tvParallaxProperties={this.props.tvParallaxProperties}\n        hasTVPreferredFocus={this.state.hasTVPreferredFocus}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}>\n        {React.cloneElement(\n          React.Children.only(this.props.children),\n          {\n            ref: CHILD_REF,\n          }\n        )}\n        {Touchable.renderDebugView({color: 'green', hitSlop: this.props.hitSlop})}\n      </View>\n    );\n  }\n});\n\nvar CHILD_REF = keyOf({childRef: null});\nvar UNDERLAY_REF = keyOf({underlayRef: null});\nvar INACTIVE_CHILD_PROPS = {\n  style: StyleSheet.create({x: {opacity: 1.0}}).x,\n};\nvar INACTIVE_UNDERLAY_PROPS = {\n  style: StyleSheet.create({x: {backgroundColor: 'transparent'}}).x,\n};\n\nmodule.exports = TouchableHighlight;\n"]}