{"version":3,"sources":["node_modules/react-native/Libraries/Share/Share.js"],"names":["Platform","require","invariant","processColor","ActionSheetManager","ShareModule","Share","content","options","url","message","OS","title","share","dialogTitle","Promise","resolve","reject","showShareActionSheetWithOptions","tintColor","error","success","activityType","Error","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAMA,UAAWC,QAAQ,UAAR,CAAjB;;AAEA,GAAMC,WAAYD,QAAQ,oBAAR,CAAlB;AACA,GAAME,cAAeF,QAAQ,cAAR,CAArB,C;;;;;AAKIA,QAAQ,eAAR,C,CAFFG,kB,UAAAA,kB,CACAC,W,UAAAA,W;;;;;AAMIC,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCSC,O,CAA0D,IAAxCC,QAAwC,2DAArB,EAAqB;AACrEN;AACE,MAAOK,QAAP,GAAmB,QAAnB,EAA+BA,UAAY,IAD7C;AAEE,yCAFF;;AAIAL;AACE,MAAOK,SAAQE,GAAf,GAAuB,QAAvB,EAAmC,MAAOF,SAAQG,OAAf,GAA2B,QADhE;AAEE,6CAFF;;AAIAR;AACE,MAAOM,QAAP,GAAmB,QAAnB,EAA+BA,UAAY,IAD7C;AAEE,gCAFF;;;AAKA,GAAIR,SAASW,EAAT,GAAgB,SAApB,CAA+B;AAC7BT;AACE,CAACK,QAAQK,KAAT,EAAkB,MAAOL,SAAQK,KAAf,GAAyB,QAD7C;AAEE,0CAFF;;AAIA,MAAOP,aAAYQ,KAAZ,CAAkBN,OAAlB,CAA2BC,QAAQM,WAAnC,CAAP;AACD,CAND,IAMO,IAAId,SAASW,EAAT,GAAgB,KAApB,CAA2B;AAChC,MAAO,IAAII,QAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB;AACtCb,mBAAmBc,+BAAnB;AACMX,OADN,CACkBC,OADlB,EAC2BW,UAAWhB,aAAaK,QAAQW,SAArB,CADtC;AAEE,SAACC,KAAD,QAAWH,QAAOG,KAAP,CAAX,EAFF;AAGE,SAACC,OAAD,CAAUC,YAAV,CAA2B;AACzB,GAAID,OAAJ,CAAa;AACXL,QAAQ;AACN,SAAU,cADJ;AAEN,eAAgBM,YAFV,CAAR;;AAID,CALD,IAKO;AACLN,QAAQ;AACN,SAAU,iBADJ,CAAR;;AAGD;AACF,CAdH;;AAgBD,CAjBM,CAAP;AAkBD,CAnBM,IAmBA;AACL,MAAOD,SAAQE,MAAR,CAAe,GAAIM,MAAJ,CAAU,sBAAV,CAAf,CAAP;AACD;AACF,C;;;;;AAKyB,CAAE,MAAO,cAAP,CAAwB,C;;;;;;AAMvB,CAAE,MAAO,iBAAP,CAA2B,C;;;;AAI5DC,OAAOC,OAAP,CAAiBnB,KAAjB,C,0GA3FMA,K","file":"Share.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Share\n * @flow\n */\n'use strict';\n\nconst Platform = require('Platform');\n\nconst invariant = require('fbjs/lib/invariant');\nconst processColor = require('processColor');\n\nconst {\n  ActionSheetManager,\n  ShareModule\n} = require('NativeModules');\n\ntype Content = { title?: string, message: string } | { title?: string, url: string };\ntype Options = { dialogTitle?: string, excludeActivityTypes?: Array<string>, tintColor?: string };\n\nclass Share {\n\n  /**\n   * Open a dialog to share text content.\n   *\n   * In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`.\n   * If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`\n   * and all the other keys being undefined.\n   *\n   * In Android, Returns a Promise which always be resolved with action being `Share.sharedAction`.\n   *\n   * ### Content\n   *\n   *  - `message` - a message to share\n   *  - `title` - title of the message\n   *\n   * #### iOS\n   *\n   *  - `url` - an URL to share\n   *\n   * At least one of URL and message is required.\n   *\n   * ### Options\n   *\n   * #### iOS\n   *\n   * - `excludedActivityTypes`\n   * - `tintColor`\n   *\n   * #### Android\n   *\n   * - `dialogTitle`\n   *\n   */\n  static share(content: Content, options: Options = {}): Promise<Object> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object'\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL and message is required'\n    );\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object'\n    );\n\n    if (Platform.OS === 'android') {\n      invariant(\n        !content.title || typeof content.title === 'string',\n        'Invalid title: title should be a string.'\n      );\n      return ShareModule.share(content, options.dialogTitle);\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        ActionSheetManager.showShareActionSheetWithOptions(\n          {...content, ...options, tintColor: processColor(options.tintColor)},\n          (error) => reject(error),\n          (success, activityType) => {\n            if (success) {\n              resolve({\n                'action': 'sharedAction',\n                'activityType': activityType\n              });\n            } else {\n              resolve({\n                'action': 'dismissedAction'\n              });\n            }\n          }\n        );\n      });\n    } else {\n      return Promise.reject(new Error('Unsupported platform'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static get sharedAction() { return 'sharedAction'; }\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static get dismissedAction() { return 'dismissedAction'; }\n\n}\n\nmodule.exports = Share;\n"]}