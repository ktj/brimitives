{"version":3,"sources":["node_modules/react-native/Libraries/Inspector/Inspector.js"],"names":["Dimensions","require","InspectorOverlay","InspectorPanel","Platform","React","ReactNative","StyleSheet","Touchable","UIManager","View","emptyObject","invariant","hook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","renderer","findRenderer","resolveRNStyle","renderers","_renderers","keys","Object","length","Inspector","props","attachToDevtools","state","devtoolsAgent","hierarchy","panelPos","inspecting","perfing","inspected","selection","inspectedViewTag","networking","on","reactDevtoolsAgent","_subs","map","fn","off","newProps","setState","agent","_hideWait","hlSub","sub","node","name","clearTimeout","findNodeHandle","measure","x","y","width","height","left","top","frame","style","hideSub","setTimeout","i","hierarchyItem","getInspectorData","source","touchedViewTag","pointerY","getInspectorDataForViewTag","offsetFromLeaf","selectFromDOMNode","get","val","TOUCH_TARGET_DEBUG","onRequestRerenderApp","panelContainerStyle","bottom","OS","styles","container","onTouchViewTag","bind","panelContainer","setPerfing","setInspecting","setSelection","setTouchTargetting","setNetworking","Component","create","position","backgroundColor","right","module","exports"],"mappings":"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","file":"Inspector.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Inspector\n * @flow\n */\n\n/* eslint-disable dot-notation, no-dimensions-get-window */\n\n'use strict';\n\nconst Dimensions = require('Dimensions');\nconst InspectorOverlay = require('InspectorOverlay');\nconst InspectorPanel = require('InspectorPanel');\nconst Platform = require('Platform');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst StyleSheet = require('StyleSheet');\nconst Touchable = require('Touchable');\nconst UIManager = require('UIManager');\nconst View = require('View');\n\nconst emptyObject = require('fbjs/lib/emptyObject');\nconst invariant = require('fbjs/lib/invariant');\n\nexport type ReactRenderer = {\n  getInspectorDataForViewTag: (viewTag: number) => Object,\n};\n\nconst hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\nconst renderer: ReactRenderer = findRenderer();\n// required for devtools to be able to edit react native styles\nhook.resolveRNStyle = require('flattenStyle');\n\nfunction findRenderer(): ReactRenderer {\n  const renderers = hook._renderers;\n  const keys = Object.keys(renderers);\n  invariant(keys.length === 1, 'Expected to find exactly one React Native renderer on DevTools hook.');\n  return renderers[keys[0]];\n}\n\nclass Inspector extends React.Component {\n  props: {\n    inspectedViewTag: ?number,\n    onRequestRerenderApp: (callback: (tag: ?number) => void) => void\n  };\n\n  state: {\n    devtoolsAgent: ?Object,\n    hierarchy: any,\n    panelPos: string,\n    inspecting: bool,\n    selection: ?number,\n    perfing: bool,\n    inspected: any,\n    inspectedViewTag: any,\n    networking: bool,\n  };\n\n  _subs: ?Array<() => void>;\n\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      devtoolsAgent: null,\n      hierarchy: null,\n      panelPos: 'bottom',\n      inspecting: true,\n      perfing: false,\n      inspected: null,\n      selection: null,\n      inspectedViewTag: this.props.inspectedViewTag,\n      networking: false,\n    };\n  }\n\n  componentDidMount() {\n    hook.on('react-devtools', this.attachToDevtools);\n    // if devtools is already started\n    if (hook.reactDevtoolsAgent) {\n      this.attachToDevtools(hook.reactDevtoolsAgent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._subs) {\n      this._subs.map(fn => fn());\n    }\n    hook.off('react-devtools', this.attachToDevtools);\n  }\n\n  componentWillReceiveProps(newProps: Object) {\n    this.setState({inspectedViewTag: newProps.inspectedViewTag});\n  }\n\n  attachToDevtools = (agent: Object) => {\n    let _hideWait = null;\n    const hlSub = agent.sub('highlight', ({node, name, props}) => {\n      clearTimeout(_hideWait);\n\n      if (typeof node !== 'number') {\n        // Fiber\n        node = ReactNative.findNodeHandle(node);\n      }\n\n      UIManager.measure(node, (x, y, width, height, left, top) => {\n        this.setState({\n          hierarchy: [],\n          inspected: {\n            frame: {left, top, width, height},\n            style: props ? props.style : emptyObject,\n          },\n        });\n      });\n    });\n    const hideSub = agent.sub('hideHighlight', () => {\n      if (this.state.inspected === null) {\n        return;\n      }\n      // we wait to actually hide in order to avoid flicker\n      _hideWait = setTimeout(() => {\n        this.setState({\n          inspected: null,\n        });\n      }, 100);\n    });\n    this._subs = [hlSub, hideSub];\n\n    agent.on('shutdown', () => {\n      this.setState({devtoolsAgent: null});\n      this._subs = null;\n    });\n    this.setState({\n      devtoolsAgent: agent,\n    });\n  };\n\n\n  setSelection(i: number) {\n    const hierarchyItem = this.state.hierarchy[i];\n    // we pass in ReactNative.findNodeHandle as the method is injected\n    const {\n      measure,\n      props,\n      source,\n    } = hierarchyItem.getInspectorData(ReactNative.findNodeHandle);\n\n    measure((x, y, width, height, left, top) => {\n      this.setState({\n        inspected: {\n          frame: {left, top, width, height},\n          style: props.style,\n          source,\n        },\n        selection: i,\n      });\n    });\n  }\n\n  onTouchViewTag(touchedViewTag: number, frame: Object, pointerY: number) {\n    // Most likely the touched instance is a native wrapper (like RCTView)\n    // which is not very interesting. Most likely user wants a composite\n    // instance that contains it (like View)\n    const {\n      hierarchy,\n      props,\n      selection,\n      source,\n    } = renderer.getInspectorDataForViewTag(touchedViewTag);\n\n    if (this.state.devtoolsAgent) {\n      // Skip host leafs\n      const offsetFromLeaf = hierarchy.length - 1 - selection;\n      this.state.devtoolsAgent.selectFromDOMNode(touchedViewTag, true, offsetFromLeaf);\n    }\n\n    this.setState({\n      panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n      selection,\n      hierarchy,\n      inspected: {\n        style: props.style,\n        frame,\n        source,\n      },\n    });\n  }\n\n  setPerfing(val: bool) {\n    this.setState({\n      perfing: val,\n      inspecting: false,\n      inspected: null,\n      networking: false,\n    });\n  }\n\n  setInspecting(val: bool) {\n    this.setState({\n      inspecting: val,\n      inspected: null\n    });\n  }\n\n  setTouchTargetting(val: bool) {\n    Touchable.TOUCH_TARGET_DEBUG = val;\n    this.props.onRequestRerenderApp((inspectedViewTag) => {\n      this.setState({inspectedViewTag});\n    });\n  }\n\n  setNetworking(val: bool) {\n    this.setState({\n      networking: val,\n      perfing: false,\n      inspecting: false,\n      inspected: null,\n    });\n  }\n\n  render() {\n    const panelContainerStyle = (this.state.panelPos === 'bottom') ?\n      {bottom: 0} :\n      {top: Platform.OS === 'ios' ? 20 : 0};\n    return (\n      <View style={styles.container} pointerEvents=\"box-none\">\n        {this.state.inspecting &&\n          <InspectorOverlay\n            inspected={this.state.inspected}\n            inspectedViewTag={this.state.inspectedViewTag}\n            onTouchViewTag={this.onTouchViewTag.bind(this)}\n          />}\n        <View style={[styles.panelContainer, panelContainerStyle]}>\n          <InspectorPanel\n            devtoolsIsOpen={!!this.state.devtoolsAgent}\n            inspecting={this.state.inspecting}\n            perfing={this.state.perfing}\n            setPerfing={this.setPerfing.bind(this)}\n            setInspecting={this.setInspecting.bind(this)}\n            inspected={this.state.inspected}\n            hierarchy={this.state.hierarchy}\n            selection={this.state.selection}\n            setSelection={this.setSelection.bind(this)}\n            touchTargetting={Touchable.TOUCH_TARGET_DEBUG}\n            setTouchTargetting={this.setTouchTargetting.bind(this)}\n            networking={this.state.networking}\n            setNetworking={this.setNetworking.bind(this)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = Inspector;\n"]}