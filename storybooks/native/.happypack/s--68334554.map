{"version":3,"sources":["node_modules/react-native/local-cli/bundle/assetPathUtils.js"],"names":["getAndroidAssetSuffix","scale","Error","getAndroidDrawableFolderName","asset","suffix","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr","module","exports"],"mappings":";;;;;;;;;;;AAWA;;;;;;;;AAQA,QAASA,sBAAT,CAA+BC,KAA/B,CAAsD;AACpD,OAAQA,KAAR;AACE,IAAK,KAAL,CAAW,MAAO,MAAP;AACX,IAAK,EAAL,CAAQ,MAAO,MAAP;AACR,IAAK,IAAL,CAAU,MAAO,MAAP;AACV,IAAK,EAAL,CAAQ,MAAO,OAAP;AACR,IAAK,EAAL,CAAQ,MAAO,QAAP;AACR,IAAK,EAAL,CAAQ,MAAO,SAAP,CANV;;AAQA,KAAM,IAAIC,MAAJ,CAAU,eAAV,CAAN;AACD;;AAED,QAASC,6BAAT,CAAsCC,KAAtC,CAA4DH,KAA5D,CAA2E;AACzE,GAAII,QAASL,sBAAsBC,KAAtB,CAAb;AACA,GAAI,CAACI,MAAL,CAAa;AACX,KAAM,IAAIH,MAAJ;AACJ;AACAI,KAAKC,SAAL,CAAeH,KAAf,CAFI,CAAN;;AAID;AACD,GAAMI,eAAgB,YAAcH,MAApC;AACA,MAAOG,cAAP;AACD;;AAED,QAASC,6BAAT,CAAsCL,KAAtC,CAA4D;AAC1D,GAAIM,YAAaC,YAAYP,KAAZ,CAAjB;AACA,MAAO,CAACM,WAAa,GAAb,CAAmBN,MAAMQ,IAA1B;AACJC,WADI;AAEJC,OAFI,CAEI,KAFJ,CAEW,GAFX;AAGJA,OAHI,CAGI,eAHJ,CAGqB,EAHrB;AAIJA,OAJI,CAII,UAJJ,CAIgB,EAJhB,CAAP;AAKD;;AAED,QAASH,YAAT,CAAqBP,KAArB,CAA2C;AACzC,GAAIW,UAAWX,MAAMY,kBAArB;AACA,GAAID,SAAS,CAAT,IAAgB,GAApB,CAAyB;AACvBA,SAAWA,SAASE,MAAT,CAAgB,CAAhB,CAAX;AACD;AACD,MAAOF,SAAP;AACD;;AAEDG,OAAOC,OAAP,CAAiB;AACfnB,sBAAuBA,qBADR;AAEfG,6BAA8BA,4BAFf;AAGfM,6BAA8BA,4BAHf;AAIfE,YAAaA,WAJE,CAAjB,C,0GAzCSX,qB,wKAYAG,4B,+KAYAM,4B,+KASAE,W","file":"assetPathUtils.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n'use strict';\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  switch (scale) {\n    case 0.75: return 'ldpi';\n    case 1: return 'mdpi';\n    case 1.5: return 'hdpi';\n    case 2: return 'xhdpi';\n    case 3: return 'xxhdpi';\n    case 4: return 'xxxhdpi';\n  }\n  throw new Error('no such scale');\n}\n\nfunction getAndroidDrawableFolderName(asset: PackagerAsset, scale: number) {\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      'Don\\'t know which android drawable suffix to use for asset: ' +\n      JSON.stringify(asset)\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_')           // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '')  // Remove illegal chars\n    .replace(/^assets_/, '');      // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidDrawableFolderName: getAndroidDrawableFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath\n};\n"]}