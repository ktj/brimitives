{"version":3,"sources":["node_modules/haul/vendor/polyfills/Object.es6.js"],"names":["Object","assign","target","sources","__DEV__","TypeError","nextIndex","arguments","length","nextSource","key","hasOwnProperty","prototype","call"],"mappings":";;;;;;;;;;;;;;;;;AAiBAA,OAAOC,MAAP,CAAgB,SAASC,MAAT,CAAiBC,OAAjB,CAA0B;AACxC,GAAIC,OAAJ,CAAa;AACX,GAAIF,QAAU,IAAd,CAAoB;AAClB,KAAM,IAAIG,UAAJ,CAAc,kDAAd,CAAN;AACD;AACD,GAAI,MAAOH,OAAP,GAAkB,QAAlB,EAA8B,MAAOA,OAAP,GAAkB,UAApD,CAAgE;AAC9D,KAAM,IAAIG,UAAJ;AACJ;AACA,kEAFI,CAAN;;AAID;AACF;;AAED,IAAK,GAAIC,WAAY,CAArB,CAAwBA,UAAYC,UAAUC,MAA9C,CAAsDF,WAAtD,CAAmE;AACjE,GAAIG,YAAaF,UAAUD,SAAV,CAAjB;AACA,GAAIG,YAAc,IAAlB,CAAwB;AACtB;AACD;;AAED,GAAIL,OAAJ,CAAa;AACX,GAAI,MAAOK,WAAP,GAAsB,QAAtB;AACA,MAAOA,WAAP,GAAsB,UAD1B,CACsC;AACpC,KAAM,IAAIJ,UAAJ;AACJ;AACA,kEAFI,CAAN;;AAID;AACF;;;;;;AAMD,IAAK,GAAIK,IAAT,GAAgBD,WAAhB,CAA4B;AAC1B,GAAIL,OAAJ,CAAa;AACX,GAAIO,gBAAiBX,OAAOY,SAAP,CAAiBD,cAAtC;AACA,GAAI,CAACA,eAAeE,IAAf,CAAoBJ,UAApB,CAAgCC,GAAhC,CAAL,CAA2C;AACzC,KAAM,IAAIL,UAAJ;AACJ;AACA,kEADA;AAEA,sEAFA;AAGA,kEAJI,CAAN;;AAMD;AACF;AACDH,OAAOQ,GAAP,EAAcD,WAAWC,GAAX,CAAd;AACD;AACF;;AAED,MAAOR,OAAP;AACD,CAlDD,C","file":"Object.es6.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @polyfill\n */\n\n/* eslint-disable strict */\n\n// WARNING: This is an optimized version that fails on hasOwnProperty checks\n// and non objects. It's not spec-compliant. It's a perf optimization.\n// This is only needed for iOS 8 and current Android JSC.\n\nObject.assign = function(target, sources) {\n  if (__DEV__) {\n    if (target == null) {\n      throw new TypeError('Object.assign target cannot be null or undefined');\n    }\n    if (typeof target !== 'object' && typeof target !== 'function') {\n      throw new TypeError(\n        'In this environment the target of assign MUST be an object.' +\n        'This error is a performance optimization and not spec compliant.'\n      );\n    }\n  }\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    if (__DEV__) {\n      if (typeof nextSource !== 'object' &&\n          typeof nextSource !== 'function') {\n        throw new TypeError(\n          'In this environment the sources for assign MUST be an object.' +\n          'This error is a performance optimization and not spec compliant.'\n        );\n      }\n    }\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects.\n\n    for (var key in nextSource) {\n      if (__DEV__) {\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        if (!hasOwnProperty.call(nextSource, key)) {\n          throw new TypeError(\n            'One of the sources for assign has an enumerable key on the ' +\n            'prototype chain. Are you trying to assign a prototype property? ' +\n            'We don\\'t allow it, as this is an edge case that we do not support. ' +\n            'This error is a performance optimization and not spec compliant.'\n          );\n        }\n      }\n      target[key] = nextSource[key];\n    }\n  }\n\n  return target;\n};\n"]}