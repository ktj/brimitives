{"version":3,"sources":["node_modules/react-native/Libraries/Components/Switch/Switch.js"],"names":["ColorPropType","require","NativeMethodsMixin","Platform","React","PropTypes","StyleSheet","ViewPropTypes","createReactClass","requireNativeComponent","Switch","displayName","propTypes","value","bool","disabled","onValueChange","func","testID","string","tintColor","onTintColor","thumbTintColor","getDefaultProps","mixins","_rctSwitch","_onChange","event","OS","setNativeProps","on","props","onChange","nativeEvent","render","onStartShouldSetResponder","onResponderTerminationRequest","enabled","style","trackTintColor","styles","rctSwitchIOS","ref","create","height","width","RCTSwitch","nativeOnly","module","exports"],"mappings":"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","file":"Switch.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Switch\n * @flow\n */\n'use strict';\n\nvar ColorPropType = require('ColorPropType');\nvar NativeMethodsMixin = require('NativeMethodsMixin');\nvar Platform = require('Platform');\nvar React = require('React');\nconst PropTypes = require('prop-types');\nvar StyleSheet = require('StyleSheet');\nconst ViewPropTypes = require('ViewPropTypes');\n\nvar createReactClass = require('create-react-class');\nvar requireNativeComponent = require('requireNativeComponent');\n\ntype DefaultProps = {\n  value: boolean,\n  disabled: boolean,\n};\n\n/**\n * Renders a boolean input.\n *\n * This is a controlled component that requires an `onValueChange` callback that\n * updates the `value` prop in order for the component to reflect user actions.\n * If the `value` prop is not updated, the component will continue to render\n * the supplied `value` prop instead of the expected result of any user actions.\n *\n * @keyword checkbox\n * @keyword toggle\n */\n// $FlowFixMe(>=0.41.0)\nvar Switch = createReactClass({\n  displayName: 'Switch',\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * The value of the switch.  If true the switch will be turned on.\n     * Default value is false.\n     */\n    value: PropTypes.bool,\n    /**\n     * If true the user won't be able to toggle the switch.\n     * Default value is false.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Invoked with the new value when the value changes.\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * Used to locate this view in end-to-end tests.\n     */\n    testID: PropTypes.string,\n\n    /**\n     * Border color on iOS and background color on Android when the switch is turned off.\n     */\n    tintColor: ColorPropType,\n    /**\n     * Background color when the switch is turned on.\n     */\n    onTintColor: ColorPropType,\n    /**\n     * Color of the foreground switch grip.\n     */\n    thumbTintColor: ColorPropType,\n  },\n\n  getDefaultProps: function(): DefaultProps {\n    return {\n      value: false,\n      disabled: false,\n    };\n  },\n\n  mixins: [NativeMethodsMixin],\n\n  _rctSwitch: {},\n  _onChange: function(event: Object) {\n    if (Platform.OS === 'android') {\n      this._rctSwitch.setNativeProps({on: this.props.value});\n    } else {\n      this._rctSwitch.setNativeProps({value: this.props.value});\n    }\n    //Change the props after the native props are set in case the props change removes the component\n    this.props.onChange && this.props.onChange(event);\n    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);\n  },\n\n  render: function() {\n    var props = {...this.props};\n    props.onStartShouldSetResponder = () => true;\n    props.onResponderTerminationRequest = () => false;\n    if (Platform.OS === 'android') {\n      props.enabled = !this.props.disabled;\n      props.on = this.props.value;\n      props.style = this.props.style;\n      props.trackTintColor = this.props.value ? this.props.onTintColor : this.props.tintColor;\n    } else if (Platform.OS === 'ios') {\n      props.style = [styles.rctSwitchIOS, this.props.style];\n    }\n    return (\n      <RCTSwitch\n        {...props}\n        ref={(ref) => { this._rctSwitch = ref; }}\n        onChange={this._onChange}\n      />\n    );\n  },\n});\n\nvar styles = StyleSheet.create({\n  rctSwitchIOS: {\n    height: 31,\n    width: 51,\n  }\n});\n\nif (Platform.OS === 'android') {\n  var RCTSwitch = requireNativeComponent('AndroidSwitch', Switch, {\n    nativeOnly: {\n      onChange: true,\n      on: true,\n      enabled: true,\n      trackTintColor: true,\n    }\n  });\n} else {\n  var RCTSwitch = requireNativeComponent('RCTSwitch', Switch, {\n    nativeOnly: {\n      onChange: true\n    }\n  });\n}\n\nmodule.exports = Switch;\n"]}