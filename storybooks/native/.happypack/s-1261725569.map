{"version":3,"sources":["node_modules/react-native/Libraries/WebSocket/WebSocketInterceptor.js"],"names":["RCTWebSocketModule","require","WebSocketModule","NativeEventEmitter","base64","originalRCTWebSocketConnect","connect","originalRCTWebSocketSend","send","originalRCTWebSocketSendBinary","sendBinary","originalRCTWebSocketClose","close","eventEmitter","subscriptions","closeCallback","sendCallback","connectCallback","onOpenCallback","onMessageCallback","onErrorCallback","onCloseCallback","isInterceptorEnabled","WebSocketInterceptor","setCloseCallback","callback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","_unregisterEvents","forEach","e","remove","_registerEvents","addListener","ev","id","type","_arrayBufferToString","data","code","reason","message","enableInterception","url","protocols","options","socketId","apply","arguments","length","value","toByteArray","buffer","undefined","ArrayBuffer","Uint8Array","String","Array","from","disableInterception","module","exports"],"mappings":"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","file":"WebSocketInterceptor.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule WebSocketInterceptor\n */\n 'use strict';\n\nconst RCTWebSocketModule = require('NativeModules').WebSocketModule;\nconst NativeEventEmitter = require('NativeEventEmitter');\n\nconst base64 = require('base64-js');\n\nconst originalRCTWebSocketConnect = RCTWebSocketModule.connect;\nconst originalRCTWebSocketSend = RCTWebSocketModule.send;\nconst originalRCTWebSocketSendBinary = RCTWebSocketModule.sendBinary;\nconst originalRCTWebSocketClose = RCTWebSocketModule.close;\n\nlet eventEmitter: NativeEventEmitter;\nlet subscriptions: Array<EventSubscription>;\n\nlet closeCallback;\nlet sendCallback;\nlet connectCallback;\nlet onOpenCallback;\nlet onMessageCallback;\nlet onErrorCallback;\nlet onCloseCallback;\n\nlet isInterceptorEnabled = false;\n\n/**\n * A network interceptor which monkey-patches RCTWebSocketModule methods\n * to gather all websocket network requests/responses, in order to show\n * their information in the React Native inspector development tool.\n */\n\nconst WebSocketInterceptor = {\n  /**\n   * Invoked when RCTWebSocketModule.close(...) is called.\n   */\n  setCloseCallback(callback) {\n    closeCallback = callback;\n  },\n\n  /**\n   * Invoked when RCTWebSocketModule.send(...) or sendBinary(...) is called.\n   */\n  setSendCallback(callback) {\n    sendCallback = callback;\n  },\n\n  /**\n   * Invoked when RCTWebSocketModule.connect(...) is called.\n   */\n  setConnectCallback(callback) {\n    connectCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketOpen\" happens.\n   */\n  setOnOpenCallback(callback) {\n    onOpenCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketMessage\" happens.\n   */\n  setOnMessageCallback(callback) {\n    onMessageCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketFailed\" happens.\n   */\n  setOnErrorCallback(callback) {\n    onErrorCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketClosed\" happens.\n   */\n  setOnCloseCallback(callback) {\n    onCloseCallback = callback;\n  },\n\n  isInterceptorEnabled() {\n    return isInterceptorEnabled;\n  },\n\n  _unregisterEvents() {\n    subscriptions.forEach(e => e.remove());\n    subscriptions = [];\n  },\n\n  /**\n   * Add listeners to the RCTWebSocketModule events to intercept them.\n   */\n  _registerEvents() {\n    subscriptions = [\n      eventEmitter.addListener('websocketMessage', ev => {\n        if (onMessageCallback) {\n          onMessageCallback(\n            ev.id,\n            (ev.type === 'binary') ?\n            WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data,\n          );\n        }\n      }),\n      eventEmitter.addListener('websocketOpen', ev => {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }),\n      eventEmitter.addListener('websocketClosed', ev => {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {code: ev.code, reason: ev.reason});\n        }\n      }),\n      eventEmitter.addListener('websocketFailed', ev => {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {message: ev.message});\n        }\n      })\n    ];\n  },\n\n  enableInterception() {\n    if (isInterceptorEnabled) {\n      return;\n    }\n    eventEmitter = new NativeEventEmitter(RCTWebSocketModule);\n    WebSocketInterceptor._registerEvents();\n\n    // Override `connect` method for all RCTWebSocketModule requests\n    // to intercept the request url, protocols, options and socketId,\n    // then pass them through the `connectCallback`.\n    RCTWebSocketModule.connect = function(url, protocols, options, socketId) {\n      if (connectCallback) {\n        connectCallback(url, protocols, options, socketId);\n      }\n      originalRCTWebSocketConnect.apply(this, arguments);\n    };\n\n    // Override `send` method for all RCTWebSocketModule requests to intercept\n    // the data sent, then pass them through the `sendCallback`.\n    RCTWebSocketModule.send = function(data, socketId) {\n      if (sendCallback) {\n        sendCallback(data, socketId);\n      }\n      originalRCTWebSocketSend.apply(this, arguments);\n    };\n\n    // Override `sendBinary` method for all RCTWebSocketModule requests to\n    // intercept the data sent, then pass them through the `sendCallback`.\n    RCTWebSocketModule.sendBinary = function(data, socketId) {\n      if (sendCallback) {\n        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n      }\n      originalRCTWebSocketSendBinary.apply(this, arguments);\n    };\n\n    // Override `close` method for all RCTWebSocketModule requests to intercept\n    // the close information, then pass them through the `closeCallback`.\n    RCTWebSocketModule.close = function() {\n      if (closeCallback) {\n        if (arguments.length === 3) {\n          closeCallback(arguments[0], arguments[1], arguments[2]);\n        } else {\n          closeCallback(null, null, arguments[0]);\n        }\n      }\n      originalRCTWebSocketClose.apply(this, arguments);\n    };\n\n    isInterceptorEnabled = true;\n  },\n\n   _arrayBufferToString(data) {\n    const value = base64.toByteArray(data).buffer;\n    if (value === undefined || value === null) {\n      return '(no value)';\n    }\n    if (typeof ArrayBuffer !== 'undefined' &&\n        typeof Uint8Array !== 'undefined' &&\n        value instanceof ArrayBuffer) {\n      return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n    }\n    return value;\n  },\n\n  // Unpatch RCTWebSocketModule methods and remove the callbacks.\n  disableInterception() {\n    if (!isInterceptorEnabled) {\n      return;\n    }\n    isInterceptorEnabled = false;\n    RCTWebSocketModule.send = originalRCTWebSocketSend;\n    RCTWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;\n    RCTWebSocketModule.close = originalRCTWebSocketClose;\n    RCTWebSocketModule.connect = originalRCTWebSocketConnect;\n\n    connectCallback = null;\n    closeCallback = null;\n    sendCallback = null;\n    onOpenCallback = null;\n    onMessageCallback = null;\n    onCloseCallback = null;\n    onErrorCallback = null;\n\n    WebSocketInterceptor._unregisterEvents();\n  },\n};\n\nmodule.exports = WebSocketInterceptor;\n"]}