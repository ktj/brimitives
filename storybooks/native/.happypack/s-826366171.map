{"version":3,"sources":["node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js"],"names":["PropTypes","require","UIManager","keyMirror","checkPropTypes","TypesEnum","spring","linear","easeInEaseOut","easeIn","easeOut","keyboard","Types","PropertiesEnum","opacity","scaleXY","Properties","animType","shape","duration","number","delay","springDamping","initialVelocity","type","oneOf","Object","keys","isRequired","property","configType","create","update","delete","checkConfig","config","location","name","configureNext","onAnimationDidEnd","__DEV__","configureNextLayoutAnimation","creationProp","Presets","LayoutAnimation","bind","module","exports"],"mappings":"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","file":"LayoutAnimation.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LayoutAnimation\n * @flow\n * @format\n */\n'use strict';\n\nconst PropTypes = require('prop-types');\nconst UIManager = require('UIManager');\n\nconst keyMirror = require('fbjs/lib/keyMirror');\n\nconst {checkPropTypes} = PropTypes;\n\nconst TypesEnum = {\n  spring: true,\n  linear: true,\n  easeInEaseOut: true,\n  easeIn: true,\n  easeOut: true,\n  keyboard: true,\n};\nconst Types = keyMirror(TypesEnum);\n\nconst PropertiesEnum = {\n  opacity: true,\n  scaleXY: true,\n};\nconst Properties = keyMirror(PropertiesEnum);\n\nconst animType = PropTypes.shape({\n  duration: PropTypes.number,\n  delay: PropTypes.number,\n  springDamping: PropTypes.number,\n  initialVelocity: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(Types)).isRequired,\n  property: PropTypes.oneOf(\n    // Only applies to create/delete\n    Object.keys(Properties),\n  ),\n});\n\ntype Anim = {\n  duration?: number,\n  delay?: number,\n  springDamping?: number,\n  initialVelocity?: number,\n  type?: $Enum<typeof TypesEnum>,\n  property?: $Enum<typeof PropertiesEnum>,\n};\n\nconst configType = PropTypes.shape({\n  duration: PropTypes.number.isRequired,\n  create: animType,\n  update: animType,\n  delete: animType,\n});\n\ntype Config = {\n  duration: number,\n  create?: Anim,\n  update?: Anim,\n  delete?: Anim,\n};\n\nfunction checkConfig(config: Config, location: string, name: string) {\n  checkPropTypes({config: configType}, {config}, location, name);\n}\n\nfunction configureNext(config: Config, onAnimationDidEnd?: Function) {\n  if (__DEV__) {\n    checkConfig(config, 'config', 'LayoutAnimation.configureNext');\n  }\n  UIManager.configureNextLayoutAnimation(\n    config,\n    onAnimationDidEnd || function() {},\n    function() {\n      /* unused */\n    },\n  );\n}\n\nfunction create(duration: number, type, creationProp): Config {\n  return {\n    duration,\n    create: {\n      type,\n      property: creationProp,\n    },\n    update: {\n      type,\n    },\n    delete: {\n      type,\n      property: creationProp,\n    },\n  };\n}\n\nconst Presets = {\n  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),\n  linear: create(500, Types.linear, Properties.opacity),\n  spring: {\n    duration: 700,\n    create: {\n      type: Types.linear,\n      property: Properties.opacity,\n    },\n    update: {\n      type: Types.spring,\n      springDamping: 0.4,\n    },\n    delete: {\n      type: Types.linear,\n      property: Properties.opacity,\n    },\n  },\n};\n\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\nconst LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, config for animating in new views (see `Anim` type)\n   *   - `update`, config for animating views that have been updated\n   * (see `Anim` type)\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext,\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create,\n  Types,\n  Properties,\n  checkConfig,\n  Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring),\n};\n\nmodule.exports = LayoutAnimation;\n"]}