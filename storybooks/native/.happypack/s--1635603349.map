{"version":3,"sources":["node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"names":["Dimensions","require","ElementBox","PropTypes","React","StyleSheet","UIManager","View","InspectorOverlay","findViewForTouchEvent","shouldSetResponser","e","nativeEvent","touches","locationX","locationY","findSubviewIn","props","inspectedViewTag","nativeViewTag","left","top","width","height","onTouchViewTag","content","inspected","frame","style","styles","inspector","get","Component","propTypes","shape","object","any","number","func","isRequired","create","backgroundColor","position","right","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAIA,YAAaC,QAAQ,YAAR,CAAjB;AACA,GAAIC,YAAaD,QAAQ,YAAR,CAAjB;AACA,GAAIE,WAAYF,QAAQ,YAAR,CAAhB;AACA,GAAIG,OAAQH,QAAQ,OAAR,CAAZ;AACA,GAAII,YAAaJ,QAAQ,YAAR,CAAjB;AACA,GAAIK,WAAYL,QAAQ,WAAR,CAAhB;AACA,GAAIM,MAAON,QAAQ,MAAR,CAAX,C;;;;;;AAMMO,gB;;;;;;;;;;;;;;;;;;;AAmBJC,qB;;;;;;;;;;;AAWAC,kB,4eAXyBC,C,CAAiB,2CACXA,EAAEC,WAAF,CAAcC,OAAd,CAAsB,CAAtB,CADW,CACnCC,SADmC,uBACnCA,SADmC,CACxBC,SADwB,uBACxBA,SADwB,CAExCT,UAAUU,aAAV,CACE,KAAKC,KAAL,CAAWC,gBADb,CAEE,CAACJ,SAAD,CAAYC,SAAZ,CAFF,CAGE,SAACI,aAAD,CAAgBC,IAAhB,CAAsBC,GAAtB,CAA2BC,KAA3B,CAAkCC,MAAlC,CAA6C,CAC3C,OAAKN,KAAL,CAAWO,cAAX,CAA0BL,aAA1B,CAAyC,CAACC,SAAD,CAAOC,OAAP,CAAYC,WAAZ,CAAmBC,aAAnB,CAAzC,CAAqER,SAArE,EACD,CALH,EAOD,C,kSAEqBJ,C,CAAuB;AAC3C,KAAKF,qBAAL,CAA2BE,CAA3B;AACA,MAAO,KAAP;AACD,C;;AAEQ;AACP,GAAIc,SAAU,IAAd;AACA,GAAI,KAAKR,KAAL,CAAWS,SAAf,CAA0B;AACxBD,QAAU,oBAAC,UAAD,EAAY,MAAO,KAAKR,KAAL,CAAWS,SAAX,CAAqBC,KAAxC,CAA+C,MAAO,KAAKV,KAAL,CAAWS,SAAX,CAAqBE,KAA3E,iDAAV;AACD;;AAED;AACE,oBAAC,IAAD;AACE,0BAA2B,KAAKlB,kBADlC;AAEE,gBAAiB,KAAKD,qBAFxB;AAGE,MAAO,CAACoB,OAAOC,SAAR,CAAmB,CAACP,OAAQvB,WAAW+B,GAAX,CAAe,QAAf,EAAyBR,MAAlC,CAAnB,CAHT;AAIGE,OAJH,CADF;;;AAQD,C,8BAjD4BrB,MAAM4B,S,SAU5BC,S,CAAY,CACjBP,UAAWvB,UAAU+B,KAAV,CAAgB,CACzBP,MAAOxB,UAAUgC,MADQ,CAEzBP,MAAOzB,UAAUiC,GAFQ,CAAhB,CADM,CAKjBlB,iBAAkBf,UAAUkC,MALX,CAMjBb,eAAgBrB,UAAUmC,IAAV,CAAeC,UANd,C;;;AA0CrB,GAAIV,QAASxB,WAAWmC,MAAX,CAAkB;AAC7BV,UAAW;AACTW,gBAAiB,aADR;AAETC,SAAU,UAFD;AAGTtB,KAAM,CAHG;AAITC,IAAK,CAJI;AAKTsB,MAAO,CALE,CADkB,CAAlB,CAAb;;;;AAUAC,OAAOC,OAAP,CAAiBrC,gBAAjB,C,2GA9DMA,gB,wKAoDFqB,M","file":"InspectorOverlay.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule InspectorOverlay\n * @flow\n */\n'use strict';\n\nvar Dimensions = require('Dimensions');\nvar ElementBox = require('ElementBox');\nvar PropTypes = require('prop-types');\nvar React = require('React');\nvar StyleSheet = require('StyleSheet');\nvar UIManager = require('UIManager');\nvar View = require('View');\n\ntype EventLike = {\n  nativeEvent: Object,\n};\n\nclass InspectorOverlay extends React.Component {\n  props: {\n    inspected?: {\n      frame?: Object,\n      style?: any,\n    },\n    inspectedViewTag?: number,\n    onTouchViewTag: (tag: number, frame: Object, pointerY: number) => void,\n  };\n\n  static propTypes = {\n    inspected: PropTypes.shape({\n      frame: PropTypes.object,\n      style: PropTypes.any,\n    }),\n    inspectedViewTag: PropTypes.number,\n    onTouchViewTag: PropTypes.func.isRequired,\n  };\n\n  findViewForTouchEvent = (e: EventLike) => {\n    var {locationX, locationY} = e.nativeEvent.touches[0];\n    UIManager.findSubviewIn(\n      this.props.inspectedViewTag,\n      [locationX, locationY],\n      (nativeViewTag, left, top, width, height) => {\n        this.props.onTouchViewTag(nativeViewTag, {left, top, width, height}, locationY);\n      }\n    );\n  };\n\n  shouldSetResponser = (e: EventLike): bool => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n\n  render() {\n    var content = null;\n    if (this.props.inspected) {\n      content = <ElementBox frame={this.props.inspected.frame} style={this.props.inspected.style} />;\n    }\n\n    return (\n      <View\n        onStartShouldSetResponder={this.shouldSetResponser}\n        onResponderMove={this.findViewForTouchEvent}\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}>\n        {content}\n      </View>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"]}