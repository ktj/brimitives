{"version":3,"sources":["node_modules/react-native/Libraries/vendor/document/selection/DocumentSelectionState.js"],"names":["mixInEventEmitter","require","DocumentSelectionState","anchor","focus","_anchorOffset","_focusOffset","_hasFocus","emit","maxLength","update","Math","min","max","start","end","hasFocus","getStartOffset","getEndOffset","module","exports"],"mappings":";;;;;;;;;;;;AAYA,a;;AAEA,GAAIA,mBAAoBC,QAAQ,mBAAR,CAAxB,C;;;;;;;;;;;AAWMC,sB;;;;;AAKJ,gCAAYC,MAAZ,CAAoBC,KAApB,CAA2B;AACzB,KAAKC,aAAL,CAAqBF,MAArB;AACA,KAAKG,YAAL,CAAoBF,KAApB;AACA,KAAKG,SAAL,CAAiB,KAAjB;AACD,C;;;;;;;;;AASMJ,M,CAAQC,K,CAAO;AACpB,GAAI,KAAKC,aAAL,GAAuBF,MAAvB,EAAiC,KAAKG,YAAL,GAAsBF,KAA3D,CAAkE;AAChE,KAAKC,aAAL,CAAqBF,MAArB;AACA,KAAKG,YAAL,CAAoBF,KAApB;AACA,KAAKI,IAAL,CAAU,QAAV;AACD;AACF,C;;;;;;;;AAQeC,S,CAAW;AACzB,KAAKC,MAAL;AACEC,KAAKC,GAAL,CAAS,KAAKP,aAAd,CAA6BI,SAA7B,CADF;AAEEE,KAAKC,GAAL,CAAS,KAAKN,YAAd,CAA4BG,SAA5B,CAFF;;AAID,C;;AAEO;AACN,GAAI,CAAC,KAAKF,SAAV,CAAqB;AACnB,KAAKA,SAAL,CAAiB,IAAjB;AACA,KAAKC,IAAL,CAAU,OAAV;AACD;AACF,C;;AAEM;AACL,GAAI,KAAKD,SAAT,CAAoB;AAClB,KAAKA,SAAL,CAAiB,KAAjB;AACA,KAAKC,IAAL,CAAU,MAAV;AACD;AACF,C;;;;;AAKU;AACT,MAAO,MAAKD,SAAZ;AACD,C;;;;;AAKa;AACZ,MAAO,MAAKF,aAAL,GAAuB,KAAKC,YAAnC;AACD,C;;;;;AAKY;AACX,MAAO,MAAKD,aAAL,CAAqB,KAAKC,YAAjC;AACD,C;;;;;AAKiB;AAChB,MAAO,MAAKC,SAAL,CAAiB,KAAKF,aAAtB,CAAsC,IAA7C;AACD,C;;;;;AAKgB;AACf,MAAO,MAAKE,SAAL,CAAiB,KAAKD,YAAtB,CAAqC,IAA5C;AACD,C;;;;;AAKgB;AACf;AACE,KAAKC,SAAL,CAAiBI,KAAKC,GAAL,CAAS,KAAKP,aAAd,CAA6B,KAAKC,YAAlC,CAAjB,CAAmE,IADrE;;AAGD,C;;;;;AAKc;AACb;AACE,KAAKC,SAAL,CAAiBI,KAAKE,GAAL,CAAS,KAAKR,aAAd,CAA6B,KAAKC,YAAlC,CAAjB,CAAmE,IADrE;;AAGD,C;;;;;;;AAOQQ,K,CAAOC,G,CAAK;AACnB;AACE,KAAKC,QAAL;AACA,KAAKC,cAAL,IAAyBF,GADzB,EACgCD,OAAS,KAAKI,YAAL,EAF3C;;AAID,C;;;AAGHlB,kBAAkBE,sBAAlB,CAA0C;AACxC,OAAQ,IADgC;AAExC,QAAS,IAF+B;AAGxC,SAAU,IAH8B,CAA1C;;;AAMAiB,OAAOC,OAAP,CAAiBlB,sBAAjB,C,0GA7HMA,sB","file":"DocumentSelectionState.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DocumentSelectionState\n * @typechecks\n */\n\n'use strict';\n\nvar mixInEventEmitter = require('mixInEventEmitter');\n\n/**\n * DocumentSelectionState is responsible for maintaining selection information\n * for a document.\n *\n * It is intended for use by AbstractTextEditor-based components for\n * identifying the appropriate start/end positions to modify the\n * DocumentContent, and for programatically setting browser selection when\n * components re-render.\n */\nclass DocumentSelectionState {\n  /**\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  constructor(anchor, focus) {\n    this._anchorOffset = anchor;\n    this._focusOffset = focus;\n    this._hasFocus = false;\n  }\n\n  /**\n   * Apply an update to the state. If either offset value has changed,\n   * set the values and emit the `change` event. Otherwise no-op.\n   *\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  update(anchor, focus) {\n    if (this._anchorOffset !== anchor || this._focusOffset !== focus) {\n      this._anchorOffset = anchor;\n      this._focusOffset = focus;\n      this.emit('update');\n    }\n  }\n\n  /**\n   * Given a max text length, constrain our selection offsets to ensure\n   * that the selection remains strictly within the text range.\n   *\n   * @param {number} maxLength\n   */\n  constrainLength(maxLength) {\n    this.update(\n      Math.min(this._anchorOffset, maxLength),\n      Math.min(this._focusOffset, maxLength)\n    );\n  }\n\n  focus() {\n    if (!this._hasFocus) {\n      this._hasFocus = true;\n      this.emit('focus');\n    }\n  }\n\n  blur() {\n    if (this._hasFocus) {\n      this._hasFocus = false;\n      this.emit('blur');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasFocus() {\n    return this._hasFocus;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCollapsed() {\n    return this._anchorOffset === this._focusOffset;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isBackward() {\n    return this._anchorOffset > this._focusOffset;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getAnchorOffset() {\n    return this._hasFocus ? this._anchorOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getFocusOffset() {\n    return this._hasFocus ? this._focusOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getStartOffset() {\n    return (\n      this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null\n    );\n  }\n\n  /**\n   * @return {?number}\n   */\n  getEndOffset() {\n    return (\n      this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null\n    );\n  }\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   * @return {boolean}\n   */\n  overlaps(start, end) {\n    return (\n      this.hasFocus() &&\n      this.getStartOffset() <= end && start <= this.getEndOffset()\n    );\n  }\n}\n\nmixInEventEmitter(DocumentSelectionState, {\n  'blur': true,\n  'focus': true,\n  'update': true\n});\n\nmodule.exports = DocumentSelectionState;\n"]}