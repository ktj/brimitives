{"version":3,"sources":["node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js"],"names":["ColorPropType","require","NativeMethodsMixin","Platform","React","PropTypes","StyleSheet","View","ViewPropTypes","createReactClass","requireNativeComponent","GRAY","ActivityIndicator","displayName","mixins","propTypes","animating","bool","color","size","oneOfType","oneOf","number","hidesWhenStopped","getDefaultProps","OS","undefined","render","props","onLayout","style","sizeStyle","styles","sizeSmall","sizeLarge","height","width","container","create","alignItems","justifyContent","RCTActivityIndicator","nativeOnly","activityIndicatorViewStyle","indeterminate","progress","styleAttr","module","exports"],"mappings":";;;;;;;;;;;AAWA,a;;AAEA,GAAMA,eAAgBC,QAAQ,eAAR,CAAtB;AACA,GAAMC,oBAAqBD,QAAQ,oBAAR,CAA3B;AACA,GAAME,UAAWF,QAAQ,UAAR,CAAjB;AACA,GAAMG,OAAQH,QAAQ,OAAR,CAAd;AACA,GAAMI,WAAYJ,QAAQ,YAAR,CAAlB;AACA,GAAMK,YAAaL,QAAQ,YAAR,CAAnB;AACA,GAAMM,MAAON,QAAQ,MAAR,CAAb;AACA,GAAMO,eAAgBP,QAAQ,eAAR,CAAtB;;AAEA,GAAMQ,kBAAmBR,QAAQ,oBAAR,CAAzB;AACA,GAAMS,wBAAyBT,QAAQ,wBAAR,CAA/B;;AAEA,GAAMU,MAAO,SAAb;;;;;;;;;;;;;;AAcA,GAAMC,mBAAoBH,iBAAiB;AACzCI,YAAa,mBAD4B;AAEzCC,OAAQ,CAACZ,kBAAD,CAFiC;;AAIzCa;AACKP,aADL;;;;AAKEQ,UAAWX,UAAUY,IALvB;;;;AASEC,MAAOlB,aATT;;;;;AAcEmB,KAAMd,UAAUe,SAAV,CAAoB;AACxBf,UAAUgB,KAAV,CAAgB,CAAE,OAAF,CAAW,OAAX,CAAhB,CADwB;AAExBhB,UAAUiB,MAFc,CAApB,CAdR;;;;;;;AAuBEC,iBAAkBlB,UAAUY,IAvB9B,EAJyC;;;AA8BzCO,eA9ByC,2BA8BT;AAC9B,MAAO;AACLR,UAAW,IADN;AAELE,MAAOf,SAASsB,EAAT,GAAgB,KAAhB,CAAwBd,IAAxB,CAA+Be,SAFjC;AAGLH,iBAAkB,IAHb;AAILJ,KAAM,OAJD,CAAP;;AAMD,CArCwC;;AAuCzCQ,MAvCyC,kBAuChC;AAC6B,KAAKC,KADlC,CACAC,QADA,QACAA,QADA,CACUC,KADV,QACUA,KADV,CACoBF,KADpB;AAEP,GAAIG,iBAAJ;;AAEA,OAAQH,MAAMT,IAAd;AACE,IAAK,OAAL;AACEY,UAAYC,OAAOC,SAAnB;AACA;AACF,IAAK,OAAL;AACEF,UAAYC,OAAOE,SAAnB;AACA;AACF;AACEH,UAAY,CAACI,OAAQP,MAAMT,IAAf,CAAqBiB,MAAOR,MAAMT,IAAlC,CAAZ;AACA,MATJ;;;AAYA;AACE,oBAAC,IAAD;AACE,SAAUU,QADZ;AAEE,MAAO,CAACG,OAAOK,SAAR,CAAmBP,KAAnB,CAFT;AAGE,oBAAC,oBAAD;AACMF,KADN;AAEE,MAAOG,SAFT;AAGE,UAAU,QAHZ;AAIE,kBAJF,kDAHF,CADF;;;;AAYD,CAnEwC,CAAjB,CAA1B;;;AAsEA,GAAMC,QAAS1B,WAAWgC,MAAX,CAAkB;AAC/BD,UAAW;AACTE,WAAY,QADH;AAETC,eAAgB,QAFP,CADoB;;AAK/BP,UAAW;AACTG,MAAO,EADE;AAETD,OAAQ,EAFC,CALoB;;AAS/BD,UAAW;AACTE,MAAO,EADE;AAETD,OAAQ,EAFC,CAToB,CAAlB,CAAf;;;;AAeA,GAAIhC,SAASsB,EAAT,GAAgB,KAApB,CAA2B;AACzB,GAAIgB,sBAAuB/B;AACzB,0BADyB;AAEzBE,iBAFyB;AAGzB,CAAC8B,WAAY,CAACC,2BAA4B,IAA7B,CAAb,CAHyB,CAA3B;;AAKD,CAND,IAMO,IAAIxC,SAASsB,EAAT,GAAgB,SAApB,CAA+B;AACpC,GAAIgB,sBAAuB/B;AACzB,oBADyB;AAEzBE,iBAFyB;;AAIzB,CAAC8B,WAAY;AACXE,cAAe,IADJ;AAEXC,SAAU,IAFC;AAGXC,UAAW,IAHA,CAAb,CAJyB,CAA3B;;;AAUD;;AAEDC,OAAOC,OAAP,CAAiBpC,iBAAjB,C,0GAtHMD,I,gLAcAC,iB,6LAsEAoB,M,kLAsBAS,oB","file":"ActivityIndicator.js","sourceRoot":"/home/phz/workspace/brimitives/storybooks/native","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ActivityIndicator\n * @flow\n */\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst Platform = require('Platform');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst requireNativeComponent = require('requireNativeComponent');\n\nconst GRAY = '#999999';\n\ntype IndicatorSize = number | 'small' | 'large';\n\ntype DefaultProps = {\n  animating: boolean,\n  color: any,\n  hidesWhenStopped: boolean,\n  size: IndicatorSize,\n}\n\n/**\n * Displays a circular loading indicator.\n */\nconst ActivityIndicator = createReactClass({\n  displayName: 'ActivityIndicator',\n  mixins: [NativeMethodsMixin],\n\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * Whether to show the indicator (true, the default) or hide it (false).\n     */\n    animating: PropTypes.bool,\n    /**\n     * The foreground color of the spinner (default is gray).\n     */\n    color: ColorPropType,\n    /**\n     * Size of the indicator (default is 'small').\n     * Passing a number to the size prop is only supported on Android.\n     */\n    size: PropTypes.oneOfType([\n      PropTypes.oneOf([ 'small', 'large' ]),\n      PropTypes.number,\n    ]),\n    /**\n     * Whether the indicator should hide when not animating (true by default).\n     *\n     * @platform ios\n     */\n    hidesWhenStopped: PropTypes.bool,\n  },\n\n  getDefaultProps(): DefaultProps {\n    return {\n      animating: true,\n      color: Platform.OS === 'ios' ? GRAY : undefined,\n      hidesWhenStopped: true,\n      size: 'small',\n    };\n  },\n\n  render() {\n    const {onLayout, style, ...props} = this.props;\n    let sizeStyle;\n\n    switch (props.size) {\n      case 'small':\n        sizeStyle = styles.sizeSmall;\n        break;\n      case 'large':\n        sizeStyle = styles.sizeLarge;\n        break;\n      default:\n        sizeStyle = {height: props.size, width: props.size};\n        break;\n    }\n\n    return (\n      <View\n        onLayout={onLayout}\n        style={[styles.container, style]}>\n        <RCTActivityIndicator\n          {...props}\n          style={sizeStyle}\n          styleAttr=\"Normal\"\n          indeterminate\n        />\n      </View>\n    );\n  }\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sizeSmall: {\n    width: 20,\n    height: 20,\n  },\n  sizeLarge: {\n    width: 36,\n    height: 36,\n  },\n});\n\nif (Platform.OS === 'ios') {\n  var RCTActivityIndicator = requireNativeComponent(\n    'RCTActivityIndicatorView',\n    ActivityIndicator,\n    {nativeOnly: {activityIndicatorViewStyle: true}},\n  );\n} else if (Platform.OS === 'android') {\n  var RCTActivityIndicator = requireNativeComponent(\n    'AndroidProgressBar',\n    ActivityIndicator,\n    // Ignore props that are specific to non inderterminate ProgressBar.\n    {nativeOnly: {\n      indeterminate: true,\n      progress: true,\n      styleAttr: true,\n    }},\n  );\n}\n\nmodule.exports = ActivityIndicator;\n"]}